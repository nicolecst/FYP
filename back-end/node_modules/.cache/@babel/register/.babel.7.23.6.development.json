{"{\"assumptions\":{},\"sourceRoot\":\"/Users/nicolechan/Desktop/FYP_Test/back-end/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/nicolechan/Desktop/FYP_Test/back-end\",\"filename\":\"/Users/nicolechan/Desktop/FYP_Test/back-end/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/nicolechan/Desktop/FYP_Test/back-end\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.6:development":{"value":{"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _express = _interopRequireDefault(require(\"express\"));\nvar _mongodb = require(\"mongodb\");\nvar bodyParser = require(\"body-parser\");\nvar bcrypt = require(\"bcrypt\");\nvar jwt = require(\"jsonwebtoken\");\nvar ObjectId = require(\"mongodb\").ObjectId;\nfunction start() {\n  return _start.apply(this, arguments);\n}\nfunction _start() {\n  _start = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee16() {\n    var app, router, port, url, client, ObjectId, db;\n    return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n      while (1) switch (_context16.prev = _context16.next) {\n        case 0:\n          app = (0, _express[\"default\"])();\n          router = _express[\"default\"].Router();\n          port = 3000;\n          url = \"mongodb+srv://nicolecst:7fUWUtSb@cluster0.j43pz4m.mongodb.net/\";\n          client = new _mongodb.MongoClient(url);\n          ObjectId = require(\"mongodb\").ObjectId;\n          _context16.next = 8;\n          return client.connect();\n        case 8:\n          db = client.db(\"itineraryPlanner\");\n          app.use(bodyParser.urlencoded({\n            extended: true\n          }));\n          app.use(bodyParser.json());\n\n          //home page listing all activities\n          app.get(\"/api/\", /*#__PURE__*/function () {\n            var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res) {\n              var activities;\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return db.collection(\"Activities\").find({}).toArray();\n                  case 2:\n                    activities = _context.sent;\n                    console.log(\"hello\");\n                    res.send(activities);\n                  case 5:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n            return function (_x, _x2) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n          app.get(\"/api/allAct\", /*#__PURE__*/function () {\n            var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res) {\n              var page, limit, activities;\n              return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n                while (1) switch (_context2.prev = _context2.next) {\n                  case 0:\n                    page = parseInt(req.query.page) || 1; // Current page number\n                    limit = parseInt(req.query.limit) || 10; // Items per page\n                    _context2.next = 4;\n                    return db.collection(\"Activities\").find({}).toArray();\n                  case 4:\n                    activities = _context2.sent;\n                    // Calculate starting and ending indices for pagination\n                    // const startIndex = (page - 1) * limit;\n                    // const endIndex = page * limit;\n\n                    // const paginatedItems = activities.slice(startIndex, endIndex);\n\n                    console.log(\"hello\");\n                    // res.send(activities);\n                    res.json({\n                      totalItems: activities.length,\n                      currentPage: page,\n                      totalPages: Math.ceil(activities.length / limit),\n                      activities: activities\n                    });\n                  case 7:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }, _callee2);\n            }));\n            return function (_x3, _x4) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n\n          //getting one activity\n          app.get(\"/api/activities/:id\", /*#__PURE__*/function () {\n            var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(req, res) {\n              var activity;\n              return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n                while (1) switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return db.collection(\"Activities\").findOne({\n                      _id: new ObjectId(req.params.id)\n                    });\n                  case 2:\n                    activity = _context3.sent;\n                    res.send(activity);\n                  case 4:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }, _callee3);\n            }));\n            return function (_x5, _x6) {\n              return _ref3.apply(this, arguments);\n            };\n          }());\n\n          //Update activities\n          app.put(\"/api/activities/:id\", /*#__PURE__*/function () {\n            var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res) {\n              var activity;\n              return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n                while (1) switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.next = 2;\n                    return db.collection(\"Activities\").findOneAndReplace({\n                      _id: new ObjectId(req.params.id)\n                    }, req.body);\n                  case 2:\n                    activity = _context4.sent;\n                    res.json(activity);\n                  case 4:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }, _callee4);\n            }));\n            return function (_x7, _x8) {\n              return _ref4.apply(this, arguments);\n            };\n          }());\n\n          //Add new activities\n          app.post(\"/api/addAct\", /*#__PURE__*/function () {\n            var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(req, res) {\n              var actdata, existAct, activity;\n              return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n                while (1) switch (_context5.prev = _context5.next) {\n                  case 0:\n                    console.log(req.body);\n                    actdata = {\n                      Act_name: req.body.actName,\n                      Location: req.body.location,\n                      Area: req.body.area,\n                      District: req.body.district,\n                      Type: req.body.type,\n                      Category: req.body.category,\n                      Charge: req.body.charge,\n                      Info: req.body.info,\n                      Description: req.body.description,\n                      Approved: false\n                    };\n                    _context5.next = 4;\n                    return db.collection(\"Activities\").findOne({\n                      Act_name: req.body.actName\n                    });\n                  case 4:\n                    existAct = _context5.sent;\n                    if (!existAct) {\n                      _context5.next = 9;\n                      break;\n                    }\n                    res.send(\"Activity already exists, please use a different name\");\n                    _context5.next = 14;\n                    break;\n                  case 9:\n                    _context5.next = 11;\n                    return db.collection(\"Activities\");\n                  case 11:\n                    activity = _context5.sent;\n                    activity.insertOne(actdata);\n                    res.status(201).send(\"Thanks for your proposal!\");\n                  case 14:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }, _callee5);\n            }));\n            return function (_x9, _x10) {\n              return _ref5.apply(this, arguments);\n            };\n          }());\n\n          //Get all users\n          app.get(\"/api/users\", /*#__PURE__*/function () {\n            var _ref6 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(req, res) {\n              var users;\n              return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n                while (1) switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _context6.next = 2;\n                    return db.collection(\"Users\").find({}).toArray();\n                  case 2:\n                    users = _context6.sent;\n                    res.send(users);\n                  case 4:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }, _callee6);\n            }));\n            return function (_x11, _x12) {\n              return _ref6.apply(this, arguments);\n            };\n          }());\n\n          //Get one user details\n          app.get(\"/api/users/:id\", /*#__PURE__*/function () {\n            var _ref7 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(req, res) {\n              var user;\n              return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n                while (1) switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _context7.next = 2;\n                    return db.collection(\"Users\").findOne({\n                      _id: new ObjectId(req.params.id)\n                    });\n                  case 2:\n                    user = _context7.sent;\n                    console.log(user._id);\n                    res.json(user);\n                  case 5:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }, _callee7);\n            }));\n            return function (_x13, _x14) {\n              return _ref7.apply(this, arguments);\n            };\n          }());\n\n          //Update user detail\n          app.put(\"/api/users/:id\", /*#__PURE__*/function () {\n            var _ref8 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(req, res) {\n              var user;\n              return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n                while (1) switch (_context8.prev = _context8.next) {\n                  case 0:\n                    _context8.next = 2;\n                    return db.collection(\"Users\").findOneAndReplace({\n                      _id: new ObjectId(req.params.id)\n                    }, req.body);\n                  case 2:\n                    user = _context8.sent;\n                    res.json(user);\n                  case 4:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }, _callee8);\n            }));\n            return function (_x15, _x16) {\n              return _ref8.apply(this, arguments);\n            };\n          }());\n\n          //Create Itinerary\n          app.post(\"/api/create\", /*#__PURE__*/function () {\n            var _ref9 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(req, res) {\n              var itinData, plan;\n              return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n                while (1) switch (_context9.prev = _context9.next) {\n                  case 0:\n                    console.log(req.body);\n                    itinData = {\n                      author: new ObjectId(req.body.author),\n                      name: req.body.iname,\n                      type: req.body.itype,\n                      participants: req.body.participants,\n                      from: req.body.from,\n                      to: req.body.to,\n                      dailyItin: req.body.dailyItin,\n                      is_public: req.body.is_public\n                    };\n                    _context9.next = 4;\n                    return db.collection(\"Plans\");\n                  case 4:\n                    plan = _context9.sent;\n                    plan.insertOne(itinData);\n                    res.status(201).send(\"Created!\");\n                  case 7:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }, _callee9);\n            }));\n            return function (_x17, _x18) {\n              return _ref9.apply(this, arguments);\n            };\n          }());\n\n          //View All Itineray History\n          app.get(\"/api/itinHistory\", /*#__PURE__*/function () {\n            var _ref10 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(req, res) {\n              var itin;\n              return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n                while (1) switch (_context10.prev = _context10.next) {\n                  case 0:\n                    _context10.next = 2;\n                    return db.collection(\"Plans\").find({}).toArray();\n                  case 2:\n                    itin = _context10.sent;\n                    res.send(itin);\n                  case 4:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }, _callee10);\n            }));\n            return function (_x19, _x20) {\n              return _ref10.apply(this, arguments);\n            };\n          }());\n\n          //View Itineray History of an author\n          app.get(\"/api/itinHistory/:id\", /*#__PURE__*/function () {\n            var _ref11 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(req, res) {\n              var itinHist;\n              return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n                while (1) switch (_context11.prev = _context11.next) {\n                  case 0:\n                    _context11.next = 2;\n                    return db.collection(\"Plans\").find({\n                      author: new ObjectId(req.params.id)\n                    }).toArray();\n                  case 2:\n                    itinHist = _context11.sent;\n                    res.send(itinHist);\n                  case 4:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }, _callee11);\n            }));\n            return function (_x21, _x22) {\n              return _ref11.apply(this, arguments);\n            };\n          }());\n\n          //View one Itinerary History\n          app.get(\"/api/history/:id\", /*#__PURE__*/function () {\n            var _ref12 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee12(req, res) {\n              var itinHist;\n              return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n                while (1) switch (_context12.prev = _context12.next) {\n                  case 0:\n                    _context12.next = 2;\n                    return db.collection(\"Plans\").findOne({\n                      _id: new ObjectId(req.params.id)\n                    });\n                  case 2:\n                    itinHist = _context12.sent;\n                    // console.log(itinHist);\n                    res.json(itinHist);\n                  case 4:\n                  case \"end\":\n                    return _context12.stop();\n                }\n              }, _callee12);\n            }));\n            return function (_x23, _x24) {\n              return _ref12.apply(this, arguments);\n            };\n          }());\n\n          //Rate Itinerary\n          app.put(\"/api/rate/:id\", /*#__PURE__*/function () {\n            var _ref13 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee13(req, res) {\n              var rate;\n              return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n                while (1) switch (_context13.prev = _context13.next) {\n                  case 0:\n                    _context13.next = 2;\n                    return db.collection(\"Plans\").findOneAndReplace({\n                      _id: new ObjectId(req.params.id)\n                    }, req.body);\n                  case 2:\n                    rate = _context13.sent;\n                    res.json(rate);\n                  case 4:\n                  case \"end\":\n                    return _context13.stop();\n                }\n              }, _callee13);\n            }));\n            return function (_x25, _x26) {\n              return _ref13.apply(this, arguments);\n            };\n          }());\n\n          //Login Page\n          app.post(\"/api/login\", /*#__PURE__*/function () {\n            var _ref14 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee14(req, res) {\n              var user, check, passwordMatch, _user, token;\n              return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n                while (1) switch (_context14.prev = _context14.next) {\n                  case 0:\n                    user = req.body;\n                    console.log(user);\n                    _context14.prev = 2;\n                    _context14.next = 5;\n                    return db.collection(\"Users\").findOne({\n                      username: req.body.username\n                    });\n                  case 5:\n                    check = _context14.sent;\n                    if (check) {\n                      _context14.next = 9;\n                      break;\n                    }\n                    res.status(201).send(\"User does not exists!\");\n                    return _context14.abrupt(\"return\");\n                  case 9:\n                    console.log(req.body.password);\n                    console.log(check.password);\n                    _context14.next = 13;\n                    return bcrypt.compare(req.body.password, check.password);\n                  case 13:\n                    passwordMatch = _context14.sent;\n                    if (!passwordMatch) {\n                      _context14.next = 24;\n                      break;\n                    }\n                    //user token\n                    _user = {\n                      id: check._id,\n                      username: check.username,\n                      role: check.is_Admin\n                    };\n                    token = jwt.sign(_user, \"process.env.JWT_KEY\", {\n                      expiresIn: \"2h\"\n                    });\n                    _user.token = token;\n                    console.log(check._id);\n                    console.log(token);\n                    console.log(_user.role);\n                    return _context14.abrupt(\"return\", res.status(200).json(_user));\n                  case 24:\n                    res.status(201).send(\"Wrong password!\");\n                  case 25:\n                    _context14.next = 30;\n                    break;\n                  case 27:\n                    _context14.prev = 27;\n                    _context14.t0 = _context14[\"catch\"](2);\n                    res.status(201).send(\"Incorrect Information\");\n                  case 30:\n                  case \"end\":\n                    return _context14.stop();\n                }\n              }, _callee14, null, [[2, 27]]);\n            }));\n            return function (_x27, _x28) {\n              return _ref14.apply(this, arguments);\n            };\n          }());\n\n          //Register Page\n          app.post(\"/api/register\", /*#__PURE__*/function () {\n            var _ref15 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee15(req, res) {\n              var userdata, existUser, saltRounds, hashedPassword, users;\n              return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n                while (1) switch (_context15.prev = _context15.next) {\n                  case 0:\n                    console.log(req.body);\n                    userdata = {\n                      username: req.body.username,\n                      password: req.body.password,\n                      confirm_password: req.body.confirm_password,\n                      email: req.body.email,\n                      is_Admin: false,\n                      createdAt: new Date().toLocaleString()\n                    };\n                    _context15.next = 4;\n                    return db.collection(\"Users\").findOne({\n                      username: req.body.username\n                    });\n                  case 4:\n                    existUser = _context15.sent;\n                    if (!existUser) {\n                      _context15.next = 9;\n                      break;\n                    }\n                    res.send(\"User already exists, please use a different name\");\n                    _context15.next = 19;\n                    break;\n                  case 9:\n                    //hash password\n                    saltRounds = 10;\n                    _context15.next = 12;\n                    return bcrypt.hash(userdata.password, saltRounds);\n                  case 12:\n                    hashedPassword = _context15.sent;\n                    userdata.password = hashedPassword;\n                    _context15.next = 16;\n                    return db.collection(\"Users\");\n                  case 16:\n                    users = _context15.sent;\n                    users.insertOne(userdata);\n                    res.status(201).send(\"Account created\");\n                  case 19:\n                  case \"end\":\n                    return _context15.stop();\n                }\n              }, _callee15);\n            }));\n            return function (_x29, _x30) {\n              return _ref15.apply(this, arguments);\n            };\n          }());\n\n          // app.get(\"/api/home\", async (req, res) => {\n          //   res.send(\"home\");\n          // });\n\n          app.listen(port, function () {\n            console.log(\"Server listening to port \".concat(port));\n          });\n        case 27:\n        case \"end\":\n          return _context16.stop();\n      }\n    }, _callee16);\n  }));\n  return _start.apply(this, arguments);\n}\nstart();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_express","_interopRequireDefault","require","_mongodb","bodyParser","bcrypt","jwt","ObjectId","start","_start","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee16","app","router","port","url","client","db","wrap","_callee16$","_context16","prev","next","express","Router","MongoClient","connect","use","urlencoded","extended","json","get","_ref","_callee","req","res","activities","_callee$","_context","collection","find","toArray","sent","console","log","send","stop","_x","_x2","_ref2","_callee2","page","limit","_callee2$","_context2","parseInt","query","totalItems","length","currentPage","totalPages","Math","ceil","_x3","_x4","_ref3","_callee3","activity","_callee3$","_context3","findOne","_id","params","id","_x5","_x6","put","_ref4","_callee4","_callee4$","_context4","findOneAndReplace","body","_x7","_x8","post","_ref5","_callee5","actdata","existAct","_callee5$","_context5","Act_name","actName","Location","location","Area","area","District","district","Type","type","Category","category","Charge","charge","Info","info","Description","description","Approved","insertOne","status","_x9","_x10","_ref6","_callee6","users","_callee6$","_context6","_x11","_x12","_ref7","_callee7","user","_callee7$","_context7","_x13","_x14","_ref8","_callee8","_callee8$","_context8","_x15","_x16","_ref9","_callee9","itinData","plan","_callee9$","_context9","author","name","iname","itype","participants","from","to","dailyItin","is_public","_x17","_x18","_ref10","_callee10","itin","_callee10$","_context10","_x19","_x20","_ref11","_callee11","itinHist","_callee11$","_context11","_x21","_x22","_ref12","_callee12","_callee12$","_context12","_x23","_x24","_ref13","_callee13","rate","_callee13$","_context13","_x25","_x26","_ref14","_callee14","check","passwordMatch","_user","token","_callee14$","_context14","username","abrupt","password","compare","role","is_Admin","sign","expiresIn","t0","_x27","_x28","_ref15","_callee15","userdata","existUser","saltRounds","hashedPassword","_callee15$","_context15","confirm_password","email","createdAt","Date","toLocaleString","hash","_x29","_x30","listen","concat"],"sourceRoot":"/Users/nicolechan/Desktop/FYP_Test/back-end/src/","sources":["server.js"],"sourcesContent":["import express from \"express\";\nvar bodyParser = require(\"body-parser\");\nconst bcrypt = require(\"bcrypt\");\nconst jwt = require(\"jsonwebtoken\");\nimport { MongoClient } from \"mongodb\";\nvar ObjectId = require(\"mongodb\").ObjectId;\n\nasync function start() {\n  const app = express();\n  const router = express.Router();\n  const port = 3000;\n\n  const url = \"mongodb+srv://nicolecst:7fUWUtSb@cluster0.j43pz4m.mongodb.net/\";\n  const client = new MongoClient(url);\n  const ObjectId = require(\"mongodb\").ObjectId;\n\n  await client.connect();\n  const db = client.db(\"itineraryPlanner\");\n\n  app.use(bodyParser.urlencoded({ extended: true }));\n  app.use(bodyParser.json());\n\n  //home page listing all activities\n  app.get(\"/api/\", async (req, res) => {\n    const activities = await db.collection(\"Activities\").find({}).toArray();\n    console.log(\"hello\");\n    res.send(activities);\n  });\n  app.get(\"/api/allAct\", async (req, res) => {\n    const page = parseInt(req.query.page) || 1; // Current page number\n    const limit = parseInt(req.query.limit) || 10; // Items per page\n\n    const activities = await db.collection(\"Activities\").find({}).toArray();\n\n    // Calculate starting and ending indices for pagination\n    // const startIndex = (page - 1) * limit;\n    // const endIndex = page * limit;\n\n    // const paginatedItems = activities.slice(startIndex, endIndex);\n\n    console.log(\"hello\");\n    // res.send(activities);\n    res.json({\n      totalItems: activities.length,\n      currentPage: page,\n      totalPages: Math.ceil(activities.length / limit),\n      activities: activities,\n    });\n  });\n\n  //getting one activity\n  app.get(\"/api/activities/:id\", async (req, res) => {\n    const activity = await db\n      .collection(\"Activities\")\n      .findOne({ _id: new ObjectId(req.params.id) });\n    res.send(activity);\n  });\n\n  //Update activities\n  app.put(\"/api/activities/:id\", async (req, res) => {\n    const activity = await db\n      .collection(\"Activities\")\n      .findOneAndReplace({ _id: new ObjectId(req.params.id) }, req.body);\n    res.json(activity);\n  });\n\n  //Add new activities\n  app.post(\"/api/addAct\", async (req, res) => {\n    console.log(req.body);\n\n    const actdata = {\n      Act_name: req.body.actName,\n      Location: req.body.location,\n      Area: req.body.area,\n      District: req.body.district,\n      Type: req.body.type,\n      Category: req.body.category,\n      Charge: req.body.charge,\n      Info: req.body.info,\n      Description: req.body.description,\n      Approved: false,\n    };\n\n    const existAct = await db\n      .collection(\"Activities\")\n      .findOne({ Act_name: req.body.actName });\n    if (existAct) {\n      res.send(\"Activity already exists, please use a different name\");\n    } else {\n      const activity = await db.collection(\"Activities\");\n      activity.insertOne(actdata);\n      res.status(201).send(\"Thanks for your proposal!\");\n    }\n  });\n\n  //Get all users\n  app.get(\"/api/users\", async (req, res) => {\n    const users = await db.collection(\"Users\").find({}).toArray();\n    res.send(users);\n  });\n\n  //Get one user details\n  app.get(\"/api/users/:id\", async (req, res) => {\n    // console.log(req.params.id)\n    const user = await db\n      .collection(\"Users\")\n      .findOne({ _id: new ObjectId(req.params.id) });\n    console.log(user._id);\n    res.json(user);\n  });\n\n  //Update user detail\n  app.put(\"/api/users/:id\", async (req, res) => {\n    const user = await db\n      .collection(\"Users\")\n      .findOneAndReplace({ _id: new ObjectId(req.params.id) }, req.body);\n    res.json(user);\n  });\n\n  //Create Itinerary\n  app.post(\"/api/create\", async (req, res) => {\n    console.log(req.body);\n\n    const itinData = {\n      author: new ObjectId(req.body.author),\n      name: req.body.iname,\n      type: req.body.itype,\n      participants: req.body.participants,\n      from: req.body.from,\n      to: req.body.to,\n      dailyItin: req.body.dailyItin,\n      is_public: req.body.is_public,\n    };\n\n    const plan = await db.collection(\"Plans\");\n    plan.insertOne(itinData);\n    res.status(201).send(\"Created!\");\n  });\n\n  //View All Itineray History\n  app.get(\"/api/itinHistory\", async (req, res) => {\n    const itin = await db.collection(\"Plans\").find({}).toArray();\n    res.send(itin);\n  });\n\n  //View Itineray History of an author\n  app.get(\"/api/itinHistory/:id\", async (req, res) => {\n    const itinHist = await db\n      .collection(\"Plans\")\n      .find({ author: new ObjectId(req.params.id) })\n      .toArray();\n    res.send(itinHist);\n  });\n\n  //View one Itinerary History\n  app.get(\"/api/history/:id\", async (req, res) => {\n    const itinHist = await db\n      .collection(\"Plans\")\n      .findOne({ _id: new ObjectId(req.params.id) });\n    // console.log(itinHist);\n    res.json(itinHist);\n  });\n\n  //Rate Itinerary\n  app.put(\"/api/rate/:id\", async (req, res) => {\n    const rate = await db\n      .collection(\"Plans\")\n      .findOneAndReplace({ _id: new ObjectId(req.params.id) }, req.body);\n    res.json(rate);\n  });\n\n  //Login Page\n  app.post(\"/api/login\", async (req, res) => {\n    let user = req.body;\n    console.log(user);\n\n    try {\n      const check = await db\n        .collection(\"Users\")\n        .findOne({ username: req.body.username });\n      if (!check) {\n        res.status(201).send(\"User does not exists!\");\n        return;\n      }\n      console.log(req.body.password);\n      console.log(check.password);\n      const passwordMatch = await bcrypt.compare(\n        req.body.password,\n        check.password\n      );\n      if (passwordMatch) {\n        //user token\n        const user = {\n          id: check._id,\n          username: check.username,\n          role: check.is_Admin,\n        };\n\n        const token = jwt.sign(user, \"process.env.JWT_KEY\", {\n          expiresIn: \"2h\",\n        });\n\n        user.token = token;\n        console.log(check._id);\n        console.log(token);\n        console.log(user.role);\n        return res.status(200).json(user);\n        // res.status(200).send(\"Successful Login\", token);\n      } else {\n        res.status(201).send(\"Wrong password!\");\n      }\n    } catch {\n      res.status(201).send(\"Incorrect Information\");\n    }\n  });\n\n  //Register Page\n  app.post(\"/api/register\", async (req, res) => {\n    console.log(req.body);\n\n    const userdata = {\n      username: req.body.username,\n      password: req.body.password,\n      confirm_password: req.body.confirm_password,\n      email: req.body.email,\n      is_Admin: false,\n      createdAt: new Date().toLocaleString(),\n    };\n\n    const existUser = await db\n      .collection(\"Users\")\n      .findOne({ username: req.body.username });\n    if (existUser) {\n      res.send(\"User already exists, please use a different name\");\n    } else {\n      //hash password\n      const saltRounds = 10;\n      const hashedPassword = await bcrypt.hash(userdata.password, saltRounds);\n      userdata.password = hashedPassword;\n\n      const users = await db.collection(\"Users\");\n      users.insertOne(userdata);\n      res.status(201).send(\"Account created\");\n    }\n  });\n\n  // app.get(\"/api/home\", async (req, res) => {\n  //   res.send(\"home\");\n  // });\n\n  app.listen(port, () => {\n    console.log(`Server listening to port ${port}`);\n  });\n}\n\nstart();\n"],"mappings":";;;;;AAAA,IAAAA,QAAA,GAAAC,sBAAA,CAAAC,OAAA;AAIA,IAAAC,QAAA,GAAAD,OAAA;AAHA,IAAIE,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AACvC,IAAMG,MAAM,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAChC,IAAMI,GAAG,GAAGJ,OAAO,CAAC,cAAc,CAAC;AAEnC,IAAIK,QAAQ,GAAGL,OAAO,CAAC,SAAS,CAAC,CAACK,QAAQ;AAAC,SAE5BC,KAAKA,CAAA;EAAA,OAAAC,MAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,OAAA;EAAAA,MAAA,OAAAG,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAApB,SAAAC,UAAA;IAAA,IAAAC,GAAA,EAAAC,MAAA,EAAAC,IAAA,EAAAC,GAAA,EAAAC,MAAA,EAAAb,QAAA,EAAAc,EAAA;IAAA,OAAAR,YAAA,YAAAS,IAAA,UAAAC,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAC,IAAA,GAAAD,UAAA,CAAAE,IAAA;QAAA;UACQV,GAAG,GAAG,IAAAW,mBAAO,EAAC,CAAC;UACfV,MAAM,GAAGU,mBAAO,CAACC,MAAM,CAAC,CAAC;UACzBV,IAAI,GAAG,IAAI;UAEXC,GAAG,GAAG,gEAAgE;UACtEC,MAAM,GAAG,IAAIS,oBAAW,CAACV,GAAG,CAAC;UAC7BZ,QAAQ,GAAGL,OAAO,CAAC,SAAS,CAAC,CAACK,QAAQ;UAAAiB,UAAA,CAAAE,IAAA;UAAA,OAEtCN,MAAM,CAACU,OAAO,CAAC,CAAC;QAAA;UAChBT,EAAE,GAAGD,MAAM,CAACC,EAAE,CAAC,kBAAkB,CAAC;UAExCL,GAAG,CAACe,GAAG,CAAC3B,UAAU,CAAC4B,UAAU,CAAC;YAAEC,QAAQ,EAAE;UAAK,CAAC,CAAC,CAAC;UAClDjB,GAAG,CAACe,GAAG,CAAC3B,UAAU,CAAC8B,IAAI,CAAC,CAAC,CAAC;;UAE1B;UACAlB,GAAG,CAACmB,GAAG,CAAC,OAAO;YAAA,IAAAC,IAAA,OAAAxB,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAuB,QAAOC,GAAG,EAAEC,GAAG;cAAA,IAAAC,UAAA;cAAA,OAAA3B,YAAA,YAAAS,IAAA,UAAAmB,SAAAC,QAAA;gBAAA,kBAAAA,QAAA,CAAAjB,IAAA,GAAAiB,QAAA,CAAAhB,IAAA;kBAAA;oBAAAgB,QAAA,CAAAhB,IAAA;oBAAA,OACLL,EAAE,CAACsB,UAAU,CAAC,YAAY,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;kBAAA;oBAAjEL,UAAU,GAAAE,QAAA,CAAAI,IAAA;oBAChBC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;oBACpBT,GAAG,CAACU,IAAI,CAACT,UAAU,CAAC;kBAAC;kBAAA;oBAAA,OAAAE,QAAA,CAAAQ,IAAA;gBAAA;cAAA,GAAAb,OAAA;YAAA,CACtB;YAAA,iBAAAc,EAAA,EAAAC,GAAA;cAAA,OAAAhB,IAAA,CAAA1B,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAC;UACFK,GAAG,CAACmB,GAAG,CAAC,aAAa;YAAA,IAAAkB,KAAA,OAAAzC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAwC,SAAOhB,GAAG,EAAEC,GAAG;cAAA,IAAAgB,IAAA,EAAAC,KAAA,EAAAhB,UAAA;cAAA,OAAA3B,YAAA,YAAAS,IAAA,UAAAmC,UAAAC,SAAA;gBAAA,kBAAAA,SAAA,CAAAjC,IAAA,GAAAiC,SAAA,CAAAhC,IAAA;kBAAA;oBAC9B6B,IAAI,GAAGI,QAAQ,CAACrB,GAAG,CAACsB,KAAK,CAACL,IAAI,CAAC,IAAI,CAAC,EAAE;oBACtCC,KAAK,GAAGG,QAAQ,CAACrB,GAAG,CAACsB,KAAK,CAACJ,KAAK,CAAC,IAAI,EAAE,EAAE;oBAAAE,SAAA,CAAAhC,IAAA;oBAAA,OAEtBL,EAAE,CAACsB,UAAU,CAAC,YAAY,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;kBAAA;oBAAjEL,UAAU,GAAAkB,SAAA,CAAAZ,IAAA;oBAEhB;oBACA;oBACA;;oBAEA;;oBAEAC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;oBACpB;oBACAT,GAAG,CAACL,IAAI,CAAC;sBACP2B,UAAU,EAAErB,UAAU,CAACsB,MAAM;sBAC7BC,WAAW,EAAER,IAAI;sBACjBS,UAAU,EAAEC,IAAI,CAACC,IAAI,CAAC1B,UAAU,CAACsB,MAAM,GAAGN,KAAK,CAAC;sBAChDhB,UAAU,EAAEA;oBACd,CAAC,CAAC;kBAAC;kBAAA;oBAAA,OAAAkB,SAAA,CAAAR,IAAA;gBAAA;cAAA,GAAAI,QAAA;YAAA,CACJ;YAAA,iBAAAa,GAAA,EAAAC,GAAA;cAAA,OAAAf,KAAA,CAAA3C,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAC;;UAEF;UACAK,GAAG,CAACmB,GAAG,CAAC,qBAAqB;YAAA,IAAAkC,KAAA,OAAAzD,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAwD,SAAOhC,GAAG,EAAEC,GAAG;cAAA,IAAAgC,QAAA;cAAA,OAAA1D,YAAA,YAAAS,IAAA,UAAAkD,UAAAC,SAAA;gBAAA,kBAAAA,SAAA,CAAAhD,IAAA,GAAAgD,SAAA,CAAA/C,IAAA;kBAAA;oBAAA+C,SAAA,CAAA/C,IAAA;oBAAA,OACrBL,EAAE,CACtBsB,UAAU,CAAC,YAAY,CAAC,CACxB+B,OAAO,CAAC;sBAAEC,GAAG,EAAE,IAAIpE,QAAQ,CAAC+B,GAAG,CAACsC,MAAM,CAACC,EAAE;oBAAE,CAAC,CAAC;kBAAA;oBAF1CN,QAAQ,GAAAE,SAAA,CAAA3B,IAAA;oBAGdP,GAAG,CAACU,IAAI,CAACsB,QAAQ,CAAC;kBAAC;kBAAA;oBAAA,OAAAE,SAAA,CAAAvB,IAAA;gBAAA;cAAA,GAAAoB,QAAA;YAAA,CACpB;YAAA,iBAAAQ,GAAA,EAAAC,GAAA;cAAA,OAAAV,KAAA,CAAA3D,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAC;;UAEF;UACAK,GAAG,CAACgE,GAAG,CAAC,qBAAqB;YAAA,IAAAC,KAAA,OAAArE,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAoE,SAAO5C,GAAG,EAAEC,GAAG;cAAA,IAAAgC,QAAA;cAAA,OAAA1D,YAAA,YAAAS,IAAA,UAAA6D,UAAAC,SAAA;gBAAA,kBAAAA,SAAA,CAAA3D,IAAA,GAAA2D,SAAA,CAAA1D,IAAA;kBAAA;oBAAA0D,SAAA,CAAA1D,IAAA;oBAAA,OACrBL,EAAE,CACtBsB,UAAU,CAAC,YAAY,CAAC,CACxB0C,iBAAiB,CAAC;sBAAEV,GAAG,EAAE,IAAIpE,QAAQ,CAAC+B,GAAG,CAACsC,MAAM,CAACC,EAAE;oBAAE,CAAC,EAAEvC,GAAG,CAACgD,IAAI,CAAC;kBAAA;oBAF9Df,QAAQ,GAAAa,SAAA,CAAAtC,IAAA;oBAGdP,GAAG,CAACL,IAAI,CAACqC,QAAQ,CAAC;kBAAC;kBAAA;oBAAA,OAAAa,SAAA,CAAAlC,IAAA;gBAAA;cAAA,GAAAgC,QAAA;YAAA,CACpB;YAAA,iBAAAK,GAAA,EAAAC,GAAA;cAAA,OAAAP,KAAA,CAAAvE,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAC;;UAEF;UACAK,GAAG,CAACyE,IAAI,CAAC,aAAa;YAAA,IAAAC,KAAA,OAAA9E,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAA6E,SAAOrD,GAAG,EAAEC,GAAG;cAAA,IAAAqD,OAAA,EAAAC,QAAA,EAAAtB,QAAA;cAAA,OAAA1D,YAAA,YAAAS,IAAA,UAAAwE,UAAAC,SAAA;gBAAA,kBAAAA,SAAA,CAAAtE,IAAA,GAAAsE,SAAA,CAAArE,IAAA;kBAAA;oBACrCqB,OAAO,CAACC,GAAG,CAACV,GAAG,CAACgD,IAAI,CAAC;oBAEfM,OAAO,GAAG;sBACdI,QAAQ,EAAE1D,GAAG,CAACgD,IAAI,CAACW,OAAO;sBAC1BC,QAAQ,EAAE5D,GAAG,CAACgD,IAAI,CAACa,QAAQ;sBAC3BC,IAAI,EAAE9D,GAAG,CAACgD,IAAI,CAACe,IAAI;sBACnBC,QAAQ,EAAEhE,GAAG,CAACgD,IAAI,CAACiB,QAAQ;sBAC3BC,IAAI,EAAElE,GAAG,CAACgD,IAAI,CAACmB,IAAI;sBACnBC,QAAQ,EAAEpE,GAAG,CAACgD,IAAI,CAACqB,QAAQ;sBAC3BC,MAAM,EAAEtE,GAAG,CAACgD,IAAI,CAACuB,MAAM;sBACvBC,IAAI,EAAExE,GAAG,CAACgD,IAAI,CAACyB,IAAI;sBACnBC,WAAW,EAAE1E,GAAG,CAACgD,IAAI,CAAC2B,WAAW;sBACjCC,QAAQ,EAAE;oBACZ,CAAC;oBAAAnB,SAAA,CAAArE,IAAA;oBAAA,OAEsBL,EAAE,CACtBsB,UAAU,CAAC,YAAY,CAAC,CACxB+B,OAAO,CAAC;sBAAEsB,QAAQ,EAAE1D,GAAG,CAACgD,IAAI,CAACW;oBAAQ,CAAC,CAAC;kBAAA;oBAFpCJ,QAAQ,GAAAE,SAAA,CAAAjD,IAAA;oBAAA,KAGV+C,QAAQ;sBAAAE,SAAA,CAAArE,IAAA;sBAAA;oBAAA;oBACVa,GAAG,CAACU,IAAI,CAAC,sDAAsD,CAAC;oBAAC8C,SAAA,CAAArE,IAAA;oBAAA;kBAAA;oBAAAqE,SAAA,CAAArE,IAAA;oBAAA,OAE1CL,EAAE,CAACsB,UAAU,CAAC,YAAY,CAAC;kBAAA;oBAA5C4B,QAAQ,GAAAwB,SAAA,CAAAjD,IAAA;oBACdyB,QAAQ,CAAC4C,SAAS,CAACvB,OAAO,CAAC;oBAC3BrD,GAAG,CAAC6E,MAAM,CAAC,GAAG,CAAC,CAACnE,IAAI,CAAC,2BAA2B,CAAC;kBAAC;kBAAA;oBAAA,OAAA8C,SAAA,CAAA7C,IAAA;gBAAA;cAAA,GAAAyC,QAAA;YAAA,CAErD;YAAA,iBAAA0B,GAAA,EAAAC,IAAA;cAAA,OAAA5B,KAAA,CAAAhF,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAC;;UAEF;UACAK,GAAG,CAACmB,GAAG,CAAC,YAAY;YAAA,IAAAoF,KAAA,OAAA3G,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAA0G,SAAOlF,GAAG,EAAEC,GAAG;cAAA,IAAAkF,KAAA;cAAA,OAAA5G,YAAA,YAAAS,IAAA,UAAAoG,UAAAC,SAAA;gBAAA,kBAAAA,SAAA,CAAAlG,IAAA,GAAAkG,SAAA,CAAAjG,IAAA;kBAAA;oBAAAiG,SAAA,CAAAjG,IAAA;oBAAA,OACfL,EAAE,CAACsB,UAAU,CAAC,OAAO,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;kBAAA;oBAAvD4E,KAAK,GAAAE,SAAA,CAAA7E,IAAA;oBACXP,GAAG,CAACU,IAAI,CAACwE,KAAK,CAAC;kBAAC;kBAAA;oBAAA,OAAAE,SAAA,CAAAzE,IAAA;gBAAA;cAAA,GAAAsE,QAAA;YAAA,CACjB;YAAA,iBAAAI,IAAA,EAAAC,IAAA;cAAA,OAAAN,KAAA,CAAA7G,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAC;;UAEF;UACAK,GAAG,CAACmB,GAAG,CAAC,gBAAgB;YAAA,IAAA2F,KAAA,OAAAlH,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAiH,SAAOzF,GAAG,EAAEC,GAAG;cAAA,IAAAyF,IAAA;cAAA,OAAAnH,YAAA,YAAAS,IAAA,UAAA2G,UAAAC,SAAA;gBAAA,kBAAAA,SAAA,CAAAzG,IAAA,GAAAyG,SAAA,CAAAxG,IAAA;kBAAA;oBAAAwG,SAAA,CAAAxG,IAAA;oBAAA,OAEpBL,EAAE,CAClBsB,UAAU,CAAC,OAAO,CAAC,CACnB+B,OAAO,CAAC;sBAAEC,GAAG,EAAE,IAAIpE,QAAQ,CAAC+B,GAAG,CAACsC,MAAM,CAACC,EAAE;oBAAE,CAAC,CAAC;kBAAA;oBAF1CmD,IAAI,GAAAE,SAAA,CAAApF,IAAA;oBAGVC,OAAO,CAACC,GAAG,CAACgF,IAAI,CAACrD,GAAG,CAAC;oBACrBpC,GAAG,CAACL,IAAI,CAAC8F,IAAI,CAAC;kBAAC;kBAAA;oBAAA,OAAAE,SAAA,CAAAhF,IAAA;gBAAA;cAAA,GAAA6E,QAAA;YAAA,CAChB;YAAA,iBAAAI,IAAA,EAAAC,IAAA;cAAA,OAAAN,KAAA,CAAApH,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAC;;UAEF;UACAK,GAAG,CAACgE,GAAG,CAAC,gBAAgB;YAAA,IAAAqD,KAAA,OAAAzH,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAwH,SAAOhG,GAAG,EAAEC,GAAG;cAAA,IAAAyF,IAAA;cAAA,OAAAnH,YAAA,YAAAS,IAAA,UAAAiH,UAAAC,SAAA;gBAAA,kBAAAA,SAAA,CAAA/G,IAAA,GAAA+G,SAAA,CAAA9G,IAAA;kBAAA;oBAAA8G,SAAA,CAAA9G,IAAA;oBAAA,OACpBL,EAAE,CAClBsB,UAAU,CAAC,OAAO,CAAC,CACnB0C,iBAAiB,CAAC;sBAAEV,GAAG,EAAE,IAAIpE,QAAQ,CAAC+B,GAAG,CAACsC,MAAM,CAACC,EAAE;oBAAE,CAAC,EAAEvC,GAAG,CAACgD,IAAI,CAAC;kBAAA;oBAF9D0C,IAAI,GAAAQ,SAAA,CAAA1F,IAAA;oBAGVP,GAAG,CAACL,IAAI,CAAC8F,IAAI,CAAC;kBAAC;kBAAA;oBAAA,OAAAQ,SAAA,CAAAtF,IAAA;gBAAA;cAAA,GAAAoF,QAAA;YAAA,CAChB;YAAA,iBAAAG,IAAA,EAAAC,IAAA;cAAA,OAAAL,KAAA,CAAA3H,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAC;;UAEF;UACAK,GAAG,CAACyE,IAAI,CAAC,aAAa;YAAA,IAAAkD,KAAA,OAAA/H,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAA8H,SAAOtG,GAAG,EAAEC,GAAG;cAAA,IAAAsG,QAAA,EAAAC,IAAA;cAAA,OAAAjI,YAAA,YAAAS,IAAA,UAAAyH,UAAAC,SAAA;gBAAA,kBAAAA,SAAA,CAAAvH,IAAA,GAAAuH,SAAA,CAAAtH,IAAA;kBAAA;oBACrCqB,OAAO,CAACC,GAAG,CAACV,GAAG,CAACgD,IAAI,CAAC;oBAEfuD,QAAQ,GAAG;sBACfI,MAAM,EAAE,IAAI1I,QAAQ,CAAC+B,GAAG,CAACgD,IAAI,CAAC2D,MAAM,CAAC;sBACrCC,IAAI,EAAE5G,GAAG,CAACgD,IAAI,CAAC6D,KAAK;sBACpB1C,IAAI,EAAEnE,GAAG,CAACgD,IAAI,CAAC8D,KAAK;sBACpBC,YAAY,EAAE/G,GAAG,CAACgD,IAAI,CAAC+D,YAAY;sBACnCC,IAAI,EAAEhH,GAAG,CAACgD,IAAI,CAACgE,IAAI;sBACnBC,EAAE,EAAEjH,GAAG,CAACgD,IAAI,CAACiE,EAAE;sBACfC,SAAS,EAAElH,GAAG,CAACgD,IAAI,CAACkE,SAAS;sBAC7BC,SAAS,EAAEnH,GAAG,CAACgD,IAAI,CAACmE;oBACtB,CAAC;oBAAAT,SAAA,CAAAtH,IAAA;oBAAA,OAEkBL,EAAE,CAACsB,UAAU,CAAC,OAAO,CAAC;kBAAA;oBAAnCmG,IAAI,GAAAE,SAAA,CAAAlG,IAAA;oBACVgG,IAAI,CAAC3B,SAAS,CAAC0B,QAAQ,CAAC;oBACxBtG,GAAG,CAAC6E,MAAM,CAAC,GAAG,CAAC,CAACnE,IAAI,CAAC,UAAU,CAAC;kBAAC;kBAAA;oBAAA,OAAA+F,SAAA,CAAA9F,IAAA;gBAAA;cAAA,GAAA0F,QAAA;YAAA,CAClC;YAAA,iBAAAc,IAAA,EAAAC,IAAA;cAAA,OAAAhB,KAAA,CAAAjI,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAC;;UAEF;UACAK,GAAG,CAACmB,GAAG,CAAC,kBAAkB;YAAA,IAAAyH,MAAA,OAAAhJ,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAA+I,UAAOvH,GAAG,EAAEC,GAAG;cAAA,IAAAuH,IAAA;cAAA,OAAAjJ,YAAA,YAAAS,IAAA,UAAAyI,WAAAC,UAAA;gBAAA,kBAAAA,UAAA,CAAAvI,IAAA,GAAAuI,UAAA,CAAAtI,IAAA;kBAAA;oBAAAsI,UAAA,CAAAtI,IAAA;oBAAA,OACtBL,EAAE,CAACsB,UAAU,CAAC,OAAO,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;kBAAA;oBAAtDiH,IAAI,GAAAE,UAAA,CAAAlH,IAAA;oBACVP,GAAG,CAACU,IAAI,CAAC6G,IAAI,CAAC;kBAAC;kBAAA;oBAAA,OAAAE,UAAA,CAAA9G,IAAA;gBAAA;cAAA,GAAA2G,SAAA;YAAA,CAChB;YAAA,iBAAAI,IAAA,EAAAC,IAAA;cAAA,OAAAN,MAAA,CAAAlJ,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAC;;UAEF;UACAK,GAAG,CAACmB,GAAG,CAAC,sBAAsB;YAAA,IAAAgI,MAAA,OAAAvJ,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAsJ,UAAO9H,GAAG,EAAEC,GAAG;cAAA,IAAA8H,QAAA;cAAA,OAAAxJ,YAAA,YAAAS,IAAA,UAAAgJ,WAAAC,UAAA;gBAAA,kBAAAA,UAAA,CAAA9I,IAAA,GAAA8I,UAAA,CAAA7I,IAAA;kBAAA;oBAAA6I,UAAA,CAAA7I,IAAA;oBAAA,OACtBL,EAAE,CACtBsB,UAAU,CAAC,OAAO,CAAC,CACnBC,IAAI,CAAC;sBAAEqG,MAAM,EAAE,IAAI1I,QAAQ,CAAC+B,GAAG,CAACsC,MAAM,CAACC,EAAE;oBAAE,CAAC,CAAC,CAC7ChC,OAAO,CAAC,CAAC;kBAAA;oBAHNwH,QAAQ,GAAAE,UAAA,CAAAzH,IAAA;oBAIdP,GAAG,CAACU,IAAI,CAACoH,QAAQ,CAAC;kBAAC;kBAAA;oBAAA,OAAAE,UAAA,CAAArH,IAAA;gBAAA;cAAA,GAAAkH,SAAA;YAAA,CACpB;YAAA,iBAAAI,IAAA,EAAAC,IAAA;cAAA,OAAAN,MAAA,CAAAzJ,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAC;;UAEF;UACAK,GAAG,CAACmB,GAAG,CAAC,kBAAkB;YAAA,IAAAuI,MAAA,OAAA9J,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAA6J,UAAOrI,GAAG,EAAEC,GAAG;cAAA,IAAA8H,QAAA;cAAA,OAAAxJ,YAAA,YAAAS,IAAA,UAAAsJ,WAAAC,UAAA;gBAAA,kBAAAA,UAAA,CAAApJ,IAAA,GAAAoJ,UAAA,CAAAnJ,IAAA;kBAAA;oBAAAmJ,UAAA,CAAAnJ,IAAA;oBAAA,OAClBL,EAAE,CACtBsB,UAAU,CAAC,OAAO,CAAC,CACnB+B,OAAO,CAAC;sBAAEC,GAAG,EAAE,IAAIpE,QAAQ,CAAC+B,GAAG,CAACsC,MAAM,CAACC,EAAE;oBAAE,CAAC,CAAC;kBAAA;oBAF1CwF,QAAQ,GAAAQ,UAAA,CAAA/H,IAAA;oBAGd;oBACAP,GAAG,CAACL,IAAI,CAACmI,QAAQ,CAAC;kBAAC;kBAAA;oBAAA,OAAAQ,UAAA,CAAA3H,IAAA;gBAAA;cAAA,GAAAyH,SAAA;YAAA,CACpB;YAAA,iBAAAG,IAAA,EAAAC,IAAA;cAAA,OAAAL,MAAA,CAAAhK,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAC;;UAEF;UACAK,GAAG,CAACgE,GAAG,CAAC,eAAe;YAAA,IAAAgG,MAAA,OAAApK,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAAmK,UAAO3I,GAAG,EAAEC,GAAG;cAAA,IAAA2I,IAAA;cAAA,OAAArK,YAAA,YAAAS,IAAA,UAAA6J,WAAAC,UAAA;gBAAA,kBAAAA,UAAA,CAAA3J,IAAA,GAAA2J,UAAA,CAAA1J,IAAA;kBAAA;oBAAA0J,UAAA,CAAA1J,IAAA;oBAAA,OACnBL,EAAE,CAClBsB,UAAU,CAAC,OAAO,CAAC,CACnB0C,iBAAiB,CAAC;sBAAEV,GAAG,EAAE,IAAIpE,QAAQ,CAAC+B,GAAG,CAACsC,MAAM,CAACC,EAAE;oBAAE,CAAC,EAAEvC,GAAG,CAACgD,IAAI,CAAC;kBAAA;oBAF9D4F,IAAI,GAAAE,UAAA,CAAAtI,IAAA;oBAGVP,GAAG,CAACL,IAAI,CAACgJ,IAAI,CAAC;kBAAC;kBAAA;oBAAA,OAAAE,UAAA,CAAAlI,IAAA;gBAAA;cAAA,GAAA+H,SAAA;YAAA,CAChB;YAAA,iBAAAI,IAAA,EAAAC,IAAA;cAAA,OAAAN,MAAA,CAAAtK,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAC;;UAEF;UACAK,GAAG,CAACyE,IAAI,CAAC,YAAY;YAAA,IAAA8F,MAAA,OAAA3K,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAA0K,UAAOlJ,GAAG,EAAEC,GAAG;cAAA,IAAAyF,IAAA,EAAAyD,KAAA,EAAAC,aAAA,EAAAC,KAAA,EAAAC,KAAA;cAAA,OAAA/K,YAAA,YAAAS,IAAA,UAAAuK,WAAAC,UAAA;gBAAA,kBAAAA,UAAA,CAAArK,IAAA,GAAAqK,UAAA,CAAApK,IAAA;kBAAA;oBAChCsG,IAAI,GAAG1F,GAAG,CAACgD,IAAI;oBACnBvC,OAAO,CAACC,GAAG,CAACgF,IAAI,CAAC;oBAAC8D,UAAA,CAAArK,IAAA;oBAAAqK,UAAA,CAAApK,IAAA;oBAAA,OAGIL,EAAE,CACnBsB,UAAU,CAAC,OAAO,CAAC,CACnB+B,OAAO,CAAC;sBAAEqH,QAAQ,EAAEzJ,GAAG,CAACgD,IAAI,CAACyG;oBAAS,CAAC,CAAC;kBAAA;oBAFrCN,KAAK,GAAAK,UAAA,CAAAhJ,IAAA;oBAAA,IAGN2I,KAAK;sBAAAK,UAAA,CAAApK,IAAA;sBAAA;oBAAA;oBACRa,GAAG,CAAC6E,MAAM,CAAC,GAAG,CAAC,CAACnE,IAAI,CAAC,uBAAuB,CAAC;oBAAC,OAAA6I,UAAA,CAAAE,MAAA;kBAAA;oBAGhDjJ,OAAO,CAACC,GAAG,CAACV,GAAG,CAACgD,IAAI,CAAC2G,QAAQ,CAAC;oBAC9BlJ,OAAO,CAACC,GAAG,CAACyI,KAAK,CAACQ,QAAQ,CAAC;oBAACH,UAAA,CAAApK,IAAA;oBAAA,OACArB,MAAM,CAAC6L,OAAO,CACxC5J,GAAG,CAACgD,IAAI,CAAC2G,QAAQ,EACjBR,KAAK,CAACQ,QACR,CAAC;kBAAA;oBAHKP,aAAa,GAAAI,UAAA,CAAAhJ,IAAA;oBAAA,KAIf4I,aAAa;sBAAAI,UAAA,CAAApK,IAAA;sBAAA;oBAAA;oBACf;oBACMsG,KAAI,GAAG;sBACXnD,EAAE,EAAE4G,KAAK,CAAC9G,GAAG;sBACboH,QAAQ,EAAEN,KAAK,CAACM,QAAQ;sBACxBI,IAAI,EAAEV,KAAK,CAACW;oBACd,CAAC;oBAEKR,KAAK,GAAGtL,GAAG,CAAC+L,IAAI,CAACrE,KAAI,EAAE,qBAAqB,EAAE;sBAClDsE,SAAS,EAAE;oBACb,CAAC,CAAC;oBAEFtE,KAAI,CAAC4D,KAAK,GAAGA,KAAK;oBAClB7I,OAAO,CAACC,GAAG,CAACyI,KAAK,CAAC9G,GAAG,CAAC;oBACtB5B,OAAO,CAACC,GAAG,CAAC4I,KAAK,CAAC;oBAClB7I,OAAO,CAACC,GAAG,CAACgF,KAAI,CAACmE,IAAI,CAAC;oBAAC,OAAAL,UAAA,CAAAE,MAAA,WAChBzJ,GAAG,CAAC6E,MAAM,CAAC,GAAG,CAAC,CAAClF,IAAI,CAAC8F,KAAI,CAAC;kBAAA;oBAGjCzF,GAAG,CAAC6E,MAAM,CAAC,GAAG,CAAC,CAACnE,IAAI,CAAC,iBAAiB,CAAC;kBAAC;oBAAA6I,UAAA,CAAApK,IAAA;oBAAA;kBAAA;oBAAAoK,UAAA,CAAArK,IAAA;oBAAAqK,UAAA,CAAAS,EAAA,GAAAT,UAAA;oBAG1CvJ,GAAG,CAAC6E,MAAM,CAAC,GAAG,CAAC,CAACnE,IAAI,CAAC,uBAAuB,CAAC;kBAAC;kBAAA;oBAAA,OAAA6I,UAAA,CAAA5I,IAAA;gBAAA;cAAA,GAAAsI,SAAA;YAAA,CAEjD;YAAA,iBAAAgB,IAAA,EAAAC,IAAA;cAAA,OAAAlB,MAAA,CAAA7K,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAC;;UAEF;UACAK,GAAG,CAACyE,IAAI,CAAC,eAAe;YAAA,IAAAiH,MAAA,OAAA9L,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAE,SAAA6L,UAAOrK,GAAG,EAAEC,GAAG;cAAA,IAAAqK,QAAA,EAAAC,SAAA,EAAAC,UAAA,EAAAC,cAAA,EAAAtF,KAAA;cAAA,OAAA5G,YAAA,YAAAS,IAAA,UAAA0L,WAAAC,UAAA;gBAAA,kBAAAA,UAAA,CAAAxL,IAAA,GAAAwL,UAAA,CAAAvL,IAAA;kBAAA;oBACvCqB,OAAO,CAACC,GAAG,CAACV,GAAG,CAACgD,IAAI,CAAC;oBAEfsH,QAAQ,GAAG;sBACfb,QAAQ,EAAEzJ,GAAG,CAACgD,IAAI,CAACyG,QAAQ;sBAC3BE,QAAQ,EAAE3J,GAAG,CAACgD,IAAI,CAAC2G,QAAQ;sBAC3BiB,gBAAgB,EAAE5K,GAAG,CAACgD,IAAI,CAAC4H,gBAAgB;sBAC3CC,KAAK,EAAE7K,GAAG,CAACgD,IAAI,CAAC6H,KAAK;sBACrBf,QAAQ,EAAE,KAAK;sBACfgB,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC;oBACvC,CAAC;oBAAAL,UAAA,CAAAvL,IAAA;oBAAA,OAEuBL,EAAE,CACvBsB,UAAU,CAAC,OAAO,CAAC,CACnB+B,OAAO,CAAC;sBAAEqH,QAAQ,EAAEzJ,GAAG,CAACgD,IAAI,CAACyG;oBAAS,CAAC,CAAC;kBAAA;oBAFrCc,SAAS,GAAAI,UAAA,CAAAnK,IAAA;oBAAA,KAGX+J,SAAS;sBAAAI,UAAA,CAAAvL,IAAA;sBAAA;oBAAA;oBACXa,GAAG,CAACU,IAAI,CAAC,kDAAkD,CAAC;oBAACgK,UAAA,CAAAvL,IAAA;oBAAA;kBAAA;oBAE7D;oBACMoL,UAAU,GAAG,EAAE;oBAAAG,UAAA,CAAAvL,IAAA;oBAAA,OACQrB,MAAM,CAACkN,IAAI,CAACX,QAAQ,CAACX,QAAQ,EAAEa,UAAU,CAAC;kBAAA;oBAAjEC,cAAc,GAAAE,UAAA,CAAAnK,IAAA;oBACpB8J,QAAQ,CAACX,QAAQ,GAAGc,cAAc;oBAACE,UAAA,CAAAvL,IAAA;oBAAA,OAEfL,EAAE,CAACsB,UAAU,CAAC,OAAO,CAAC;kBAAA;oBAApC8E,KAAK,GAAAwF,UAAA,CAAAnK,IAAA;oBACX2E,KAAK,CAACN,SAAS,CAACyF,QAAQ,CAAC;oBACzBrK,GAAG,CAAC6E,MAAM,CAAC,GAAG,CAAC,CAACnE,IAAI,CAAC,iBAAiB,CAAC;kBAAC;kBAAA;oBAAA,OAAAgK,UAAA,CAAA/J,IAAA;gBAAA;cAAA,GAAAyJ,SAAA;YAAA,CAE3C;YAAA,iBAAAa,IAAA,EAAAC,IAAA;cAAA,OAAAf,MAAA,CAAAhM,KAAA,OAAAC,SAAA;YAAA;UAAA,IAAC;;UAEF;UACA;UACA;;UAEAK,GAAG,CAAC0M,MAAM,CAACxM,IAAI,EAAE,YAAM;YACrB6B,OAAO,CAACC,GAAG,6BAAA2K,MAAA,CAA6BzM,IAAI,CAAE,CAAC;UACjD,CAAC,CAAC;QAAC;QAAA;UAAA,OAAAM,UAAA,CAAA0B,IAAA;MAAA;IAAA,GAAAnC,SAAA;EAAA,CACJ;EAAA,OAAAN,MAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAEDH,KAAK,CAAC,CAAC"}},"mtime":1710317631418}}