{"{\"assumptions\":{},\"sourceRoot\":\"/Users/nicolechan/Desktop/FYP_Test/back-end/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/nicolechan/Desktop/FYP_Test/back-end\",\"filename\":\"/Users/nicolechan/Desktop/FYP_Test/back-end/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/nicolechan/Desktop/FYP_Test/back-end\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.6:development":{"value":{"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _express = _interopRequireDefault(require(\"express\"));\nvar _mongodb = require(\"mongodb\");\nvar bodyParser = require(\"body-parser\");\nvar bcrypt = require(\"bcrypt\");\nvar jwt = require(\"jsonwebtoken\");\nvar ObjectId = require(\"mongodb\").ObjectId;\nfunction start() {\n  return _start.apply(this, arguments);\n}\nfunction _start() {\n  _start = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee19() {\n    var app, router, port, url, client, ObjectId, path, MAX_SIZE, multer, nodeMailer, html, uploads, db, staticPath;\n    return _regenerator[\"default\"].wrap(function _callee19$(_context19) {\n      while (1) switch (_context19.prev = _context19.next) {\n        case 0:\n          app = (0, _express[\"default\"])();\n          router = _express[\"default\"].Router();\n          port = 3000;\n          url = \"mongodb+srv://nicolecst:7fUWUtSb@cluster0.j43pz4m.mongodb.net/\";\n          client = new _mongodb.MongoClient(url);\n          ObjectId = require(\"mongodb\").ObjectId;\n          path = require(\"path\");\n          MAX_SIZE = 100000000;\n          multer = require(\"multer\");\n          nodeMailer = require(\"nodemailer\");\n          html = \"\\n    <h1>Hello World!!<h1/>\\n    <p>Have a nice day!<p/>\\n  \";\n          uploads = multer({\n            dest: \"src/uploads\",\n            limits: {\n              fileSize: MAX_SIZE\n            }\n          });\n          _context19.next = 14;\n          return client.connect();\n        case 14:\n          db = client.db(\"itineraryPlanner\");\n          app.use(bodyParser.urlencoded({\n            extended: true\n          }));\n          app.use(bodyParser.json());\n          staticPath = path.join(__dirname, \"uploads\"); // Replace 'uploads' with the actual relative path to your image directory\n          app.use(_express[\"default\"][\"static\"](staticPath));\n          app.post(\"/api/upload\", uploads.single(\"file\"), function (req, res) {\n            res.json({\n              file: req.file\n            });\n          });\n\n          //send email\n          app.get(\"/api/sendmail\", /*#__PURE__*/function () {\n            var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res, next) {\n              var testAccount, transporter, info;\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return nodeMailer.createTestAccount();\n                  case 2:\n                    testAccount = _context.sent;\n                    // create reusable transporter object using the default SMTP transport\n                    transporter = nodeMailer.createTransport({\n                      host: \"smtp.gmail.com\",\n                      port: 465,\n                      secure: true,\n                      // true for 465, false for other ports\n                      auth: {\n                        user: \"etripofficialsite@gmail.com\",\n                        // generated ethereal user\n                        pass: \"eucm kjnz xnpu llos\" // generated ethereal password\n                      }\n                    }); // send mail with defined transport object\n                    _context.next = 6;\n                    return transporter.sendMail({\n                      from: '\"Fred Foo 👻\" <etripofficialsite@gmail.com>',\n                      // sender address\n                      to: \"nicolechan1217st@gmail.com\",\n                      // list of receivers\n                      subject: \"Hello ✔\",\n                      // Subject line\n                      text: \"Hello world?\",\n                      // plain text body\n                      html: req.query.message // html body\n                    });\n                  case 6:\n                    info = _context.sent;\n                    console.log(req.query.message);\n                    return _context.abrupt(\"return\", res.json({\n                      message: \"mail sent\",\n                      info: info,\n                      previewUrl: nodeMailer.getTestMessageUrl(info)\n                    }));\n                  case 9:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n            return function (_x, _x2, _x3) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n\n          //home page listing all activities\n          app.get(\"/api/\", /*#__PURE__*/function () {\n            var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res) {\n              var activities;\n              return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n                while (1) switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return db.collection(\"Activities\").find({}).toArray();\n                  case 2:\n                    activities = _context2.sent;\n                    console.log(\"hello\");\n                    res.send(activities);\n                  case 5:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }, _callee2);\n            }));\n            return function (_x4, _x5) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n\n          //all activities with pagination\n          app.get(\"/api/allAct\", /*#__PURE__*/function () {\n            var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(req, res) {\n              var page, limit, activities;\n              return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n                while (1) switch (_context3.prev = _context3.next) {\n                  case 0:\n                    page = parseInt(req.query.page) || 1; // Current page number\n                    limit = parseInt(req.query.limit) || 10; // Items per page\n                    _context3.next = 4;\n                    return db.collection(\"Activities\").find({}).toArray();\n                  case 4:\n                    activities = _context3.sent;\n                    // Calculate starting and ending indices for pagination\n                    // const startIndex = (page - 1) * limit;\n                    // const endIndex = page * limit;\n\n                    // const paginatedItems = activities.slice(startIndex, endIndex);\n\n                    console.log(\"hello\");\n                    // res.send(activities);\n                    res.json({\n                      totalItems: activities.length,\n                      currentPage: page,\n                      totalPages: Math.ceil(activities.length / limit),\n                      activities: activities\n                    });\n                  case 7:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }, _callee3);\n            }));\n            return function (_x6, _x7) {\n              return _ref3.apply(this, arguments);\n            };\n          }());\n\n          //getting one activity\n          app.get(\"/api/activities/:id\", /*#__PURE__*/function () {\n            var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res) {\n              var activity;\n              return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n                while (1) switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.next = 2;\n                    return db.collection(\"Activities\").findOne({\n                      _id: new ObjectId(req.params.id)\n                    });\n                  case 2:\n                    activity = _context4.sent;\n                    res.send(activity);\n                  case 4:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }, _callee4);\n            }));\n            return function (_x8, _x9) {\n              return _ref4.apply(this, arguments);\n            };\n          }());\n\n          //Update activities\n          app.put(\"/api/activities/:id\", /*#__PURE__*/function () {\n            var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(req, res) {\n              var activity;\n              return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n                while (1) switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.next = 2;\n                    return db.collection(\"Activities\").findOneAndReplace({\n                      _id: new ObjectId(req.params.id)\n                    }, req.body);\n                  case 2:\n                    activity = _context5.sent;\n                    res.json(activity);\n                  case 4:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }, _callee5);\n            }));\n            return function (_x10, _x11) {\n              return _ref5.apply(this, arguments);\n            };\n          }());\n\n          //Add new activities\n          app.post(\"/api/addAct\", uploads.single(\"file\"), /*#__PURE__*/function () {\n            var _ref6 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(req, res) {\n              var actdata, existAct, activity;\n              return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n                while (1) switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _context6.prev = 0;\n                    console.log(req.body);\n                    actdata = {\n                      Act_name: req.body.actName,\n                      Location: req.body.location,\n                      Area: req.body.area,\n                      District: req.body.district,\n                      Type: req.body.type,\n                      Category: req.body.category,\n                      Charge: req.body.charge,\n                      Info: req.body.info,\n                      Description: req.body.description,\n                      file: req.file,\n                      // Store the uploaded file in the actdata object\n                      Approved: false\n                    };\n                    console.log(actdata.file);\n                    console.log(\"filename\" + actdata.file.filename);\n                    _context6.next = 7;\n                    return db.collection(\"Activities\").findOne({\n                      Act_name: req.body.actName\n                    });\n                  case 7:\n                    existAct = _context6.sent;\n                    if (!existAct) {\n                      _context6.next = 12;\n                      break;\n                    }\n                    res.send(\"Activity already exists, please use a different name\");\n                    _context6.next = 16;\n                    break;\n                  case 12:\n                    _context6.next = 14;\n                    return db.collection(\"Activities\").insertOne(actdata);\n                  case 14:\n                    activity = _context6.sent;\n                    res.status(201).send(\"Thanks for your proposal!\");\n                  case 16:\n                    _context6.next = 22;\n                    break;\n                  case 18:\n                    _context6.prev = 18;\n                    _context6.t0 = _context6[\"catch\"](0);\n                    console.error(_context6.t0);\n                    res.status(500).send(\"An error occurred while processing the request\");\n                  case 22:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }, _callee6, null, [[0, 18]]);\n            }));\n            return function (_x12, _x13) {\n              return _ref6.apply(this, arguments);\n            };\n          }());\n\n          //Get all users\n          app.get(\"/api/users\", /*#__PURE__*/function () {\n            var _ref7 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(req, res) {\n              var users;\n              return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n                while (1) switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _context7.next = 2;\n                    return db.collection(\"Users\").find({}).toArray();\n                  case 2:\n                    users = _context7.sent;\n                    res.send(users);\n                  case 4:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }, _callee7);\n            }));\n            return function (_x14, _x15) {\n              return _ref7.apply(this, arguments);\n            };\n          }());\n\n          //Get one user details\n          app.get(\"/api/users/:id\", /*#__PURE__*/function () {\n            var _ref8 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(req, res) {\n              var user;\n              return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n                while (1) switch (_context8.prev = _context8.next) {\n                  case 0:\n                    _context8.next = 2;\n                    return db.collection(\"Users\").findOne({\n                      _id: new ObjectId(req.params.id)\n                    });\n                  case 2:\n                    user = _context8.sent;\n                    console.log(user._id);\n                    res.json(user);\n                  case 5:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }, _callee8);\n            }));\n            return function (_x16, _x17) {\n              return _ref8.apply(this, arguments);\n            };\n          }());\n\n          //Update user detail\n          app.put(\"/api/users/:id\", /*#__PURE__*/function () {\n            var _ref9 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(req, res) {\n              var user;\n              return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n                while (1) switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _context9.next = 2;\n                    return db.collection(\"Users\").findOneAndReplace({\n                      _id: new ObjectId(req.params.id)\n                    }, req.body);\n                  case 2:\n                    user = _context9.sent;\n                    res.json(user);\n                  case 4:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }, _callee9);\n            }));\n            return function (_x18, _x19) {\n              return _ref9.apply(this, arguments);\n            };\n          }());\n\n          //Create Itinerary\n          app.post(\"/api/create\", /*#__PURE__*/function () {\n            var _ref10 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(req, res) {\n              var itinData, plan;\n              return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n                while (1) switch (_context10.prev = _context10.next) {\n                  case 0:\n                    console.log(req.body);\n                    itinData = {\n                      author: new ObjectId(req.body.author),\n                      authorName: req.body.authorName,\n                      name: req.body.iname,\n                      type: req.body.itype,\n                      participants: req.body.participants,\n                      from: req.body.from,\n                      to: req.body.to,\n                      dailyItin: req.body.dailyItin,\n                      is_public: req.body.is_public\n                    };\n                    _context10.next = 4;\n                    return db.collection(\"Plans\");\n                  case 4:\n                    plan = _context10.sent;\n                    plan.insertOne(itinData);\n                    res.status(201).send(\"Created!\");\n                  case 7:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }, _callee10);\n            }));\n            return function (_x20, _x21) {\n              return _ref10.apply(this, arguments);\n            };\n          }());\n\n          //View All Itineray History\n          app.get(\"/api/itinHistory\", /*#__PURE__*/function () {\n            var _ref11 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(req, res) {\n              var itin;\n              return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n                while (1) switch (_context11.prev = _context11.next) {\n                  case 0:\n                    _context11.next = 2;\n                    return db.collection(\"Plans\").find({}).toArray();\n                  case 2:\n                    itin = _context11.sent;\n                    res.send(itin);\n                  case 4:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }, _callee11);\n            }));\n            return function (_x22, _x23) {\n              return _ref11.apply(this, arguments);\n            };\n          }());\n\n          //View All Itinerary\n          app.get(\"/api/itinHistory\", /*#__PURE__*/function () {\n            var _ref12 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee12(req, res) {\n              var itinHist;\n              return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n                while (1) switch (_context12.prev = _context12.next) {\n                  case 0:\n                    _context12.next = 2;\n                    return db.collection(\"Plans\").find({\n                      is_public: true\n                    }).toArray();\n                  case 2:\n                    itinHist = _context12.sent;\n                    res.send(itinHist);\n                  case 4:\n                  case \"end\":\n                    return _context12.stop();\n                }\n              }, _callee12);\n            }));\n            return function (_x24, _x25) {\n              return _ref12.apply(this, arguments);\n            };\n          }());\n\n          //Send Itinerary Details to Email\n          app.get(\"/api/sendItin\", /*#__PURE__*/function () {\n            var _ref13 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee13(req, res, next) {\n              var transporter, dataArray, processNested, messageHTML, info;\n              return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n                while (1) switch (_context13.prev = _context13.next) {\n                  case 0:\n                    processNested = function _processNested(data, d) {\n                      var result = \"\";\n                      data.forEach(function (item) {\n                        if (Array.isArray(item)) {\n                          result += processNested(item, d); // Recursively process the nested array\n                        } else if ((0, _typeof2[\"default\"])(item) === \"object\" && item !== null) {\n                          // Process the object and extract the details\n                          var itin = item.itin;\n                          var act_name = itin.act_name,\n                            location = itin.location,\n                            day = itin.day,\n                            startTime = itin.startTime,\n                            endTime = itin.endTime,\n                            memo = itin.memo;\n\n                          // Construct the desired output using the extracted details\n                          if (day == d) {\n                            result += \"\\n            <li>Activity: \".concat(act_name, \"</li>\\n            <li>Location: \").concat(location, \"</li>\\n            <li>Day: \").concat(day, \"</li>\\n            <li>Start Time: \").concat(startTime, \"</li>\\n            <li>End Time: \").concat(endTime, \"</li>\\n            <li>Memo: \").concat(memo, \"</li>\\n            <hr width=\\\"100%\\\" size=\\\"2\\\">\\n          \");\n                          }\n                        }\n                      });\n                      return result;\n                    };\n                    // create reusable transporter object using the default SMTP transport\n                    transporter = nodeMailer.createTransport({\n                      host: \"smtp.gmail.com\",\n                      port: 465,\n                      secure: true,\n                      // true for 465, false for other ports\n                      auth: {\n                        user: \"etripofficialsite@gmail.com\",\n                        // generated ethereal user\n                        pass: \"eucm kjnz xnpu llos\" // generated ethereal password\n                      }\n                    });\n                    dataArray = JSON.parse(req.query.message); // Recursive function to process nested arrays and objects\n                    messageHTML = \"\\n    <html>\\n    <head>\\n      <style>\\n      table, th, td{\\n        border: 1px solid;\\n      }\\n      </style>\\n    </head>\\n    <body>\\n      <div class=\\\"container\\\">\\n        <h1>Your Itinerary Plan</h1>\\n        <table>\\n          <tr>\\n            <th>Day 1</th>\\n          \\n    \";\n                    messageHTML += processNested(dataArray, 1);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 2</th>\";\n                    messageHTML += processNested(dataArray, 2);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 3</th>\";\n                    messageHTML += processNested(dataArray, 3);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 4</th>\";\n                    messageHTML += processNested(dataArray, 4);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 5</th>\";\n                    messageHTML += processNested(dataArray, 5);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 6</th>\";\n                    messageHTML += processNested(dataArray, 6);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 7</th>\";\n                    messageHTML += processNested(dataArray, 7);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 8</th>\";\n                    messageHTML += processNested(dataArray, 8);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 9</th>\";\n                    messageHTML += processNested(dataArray, 9);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 10</th>\";\n                    messageHTML += processNested(dataArray, 10);\n                    messageHTML += \"\\n        </tr>\\n        </table>\\n      </div>\\n    </body>\\n  </html>\\n\";\n\n                    // send mail with defined transport object\n                    _context13.next = 26;\n                    return transporter.sendMail({\n                      from: '\"E-Trip 🚨\" <etripofficialsite@gmail.com>',\n                      // sender address\n                      to: req.query.email,\n                      // list of receivers\n                      subject: \"Your Itinerary Plan\",\n                      // Subject line\n                      text: \"Hello world?\",\n                      // plain text body\n                      html: messageHTML // html body\n                    });\n                  case 26:\n                    info = _context13.sent;\n                    console.log(req.query.message);\n                    return _context13.abrupt(\"return\", res.json({\n                      message: \"mail sent\",\n                      info: info,\n                      previewUrl: nodeMailer.getTestMessageUrl(info)\n                    }));\n                  case 29:\n                  case \"end\":\n                    return _context13.stop();\n                }\n              }, _callee13);\n            }));\n            return function (_x26, _x27, _x28) {\n              return _ref13.apply(this, arguments);\n            };\n          }());\n\n          //View Itineray History of an author\n          app.get(\"/api/itinHistory/:id\", /*#__PURE__*/function () {\n            var _ref14 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee14(req, res) {\n              var itinHist;\n              return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n                while (1) switch (_context14.prev = _context14.next) {\n                  case 0:\n                    _context14.next = 2;\n                    return db.collection(\"Plans\").find({\n                      author: new ObjectId(req.params.id)\n                    }).toArray();\n                  case 2:\n                    itinHist = _context14.sent;\n                    res.send(itinHist);\n                  case 4:\n                  case \"end\":\n                    return _context14.stop();\n                }\n              }, _callee14);\n            }));\n            return function (_x29, _x30) {\n              return _ref14.apply(this, arguments);\n            };\n          }());\n\n          //View one Itinerary History\n          app.get(\"/api/history/:id\", /*#__PURE__*/function () {\n            var _ref15 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee15(req, res) {\n              var itinHist;\n              return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n                while (1) switch (_context15.prev = _context15.next) {\n                  case 0:\n                    _context15.next = 2;\n                    return db.collection(\"Plans\").findOne({\n                      _id: new ObjectId(req.params.id)\n                    });\n                  case 2:\n                    itinHist = _context15.sent;\n                    // console.log(itinHist);\n                    res.json(itinHist);\n                  case 4:\n                  case \"end\":\n                    return _context15.stop();\n                }\n              }, _callee15);\n            }));\n            return function (_x31, _x32) {\n              return _ref15.apply(this, arguments);\n            };\n          }());\n\n          //Rate Itinerary\n          app.put(\"/api/rate/:id\", /*#__PURE__*/function () {\n            var _ref16 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee16(req, res) {\n              var rateUpdate, rate;\n              return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n                while (1) switch (_context16.prev = _context16.next) {\n                  case 0:\n                    rateUpdate = {\n                      author: new ObjectId(req.body.author),\n                      authorName: req.body.authorName,\n                      name: req.body.name,\n                      type: req.body.type,\n                      participants: req.body.participants,\n                      from: req.body.from,\n                      to: req.body.to,\n                      dailyItin: req.body.dailyItin,\n                      is_public: req.body.is_public,\n                      selectedRate: req.body.selectedRate,\n                      comment: req.body.comment\n                    };\n                    _context16.next = 3;\n                    return db.collection(\"Plans\").findOneAndReplace({\n                      _id: new ObjectId(req.params.id)\n                    }, rateUpdate);\n                  case 3:\n                    rate = _context16.sent;\n                    res.json(rate);\n                  case 5:\n                  case \"end\":\n                    return _context16.stop();\n                }\n              }, _callee16);\n            }));\n            return function (_x33, _x34) {\n              return _ref16.apply(this, arguments);\n            };\n          }());\n\n          //Login Page\n          app.post(\"/api/login\", /*#__PURE__*/function () {\n            var _ref17 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee17(req, res) {\n              var user, check, passwordMatch, _user, token;\n              return _regenerator[\"default\"].wrap(function _callee17$(_context17) {\n                while (1) switch (_context17.prev = _context17.next) {\n                  case 0:\n                    user = req.body;\n                    console.log(user);\n                    _context17.prev = 2;\n                    _context17.next = 5;\n                    return db.collection(\"Users\").findOne({\n                      username: req.body.username\n                    });\n                  case 5:\n                    check = _context17.sent;\n                    if (check) {\n                      _context17.next = 9;\n                      break;\n                    }\n                    res.status(201).send(\"User does not exists!\");\n                    return _context17.abrupt(\"return\");\n                  case 9:\n                    console.log(req.body.password);\n                    console.log(check.password);\n                    _context17.next = 13;\n                    return bcrypt.compare(req.body.password, check.password);\n                  case 13:\n                    passwordMatch = _context17.sent;\n                    if (!passwordMatch) {\n                      _context17.next = 24;\n                      break;\n                    }\n                    //user token\n                    _user = {\n                      id: check._id,\n                      username: check.username,\n                      role: check.is_Admin,\n                      email: check.email\n                    };\n                    token = jwt.sign(_user, \"process.env.JWT_KEY\", {\n                      expiresIn: \"2h\"\n                    });\n                    _user.token = token;\n                    console.log(check._id);\n                    console.log(token);\n                    console.log(_user.role);\n                    return _context17.abrupt(\"return\", res.status(200).json(_user));\n                  case 24:\n                    res.status(201).send(\"Wrong password!\");\n                  case 25:\n                    _context17.next = 30;\n                    break;\n                  case 27:\n                    _context17.prev = 27;\n                    _context17.t0 = _context17[\"catch\"](2);\n                    res.status(201).send(\"Incorrect Information\");\n                  case 30:\n                  case \"end\":\n                    return _context17.stop();\n                }\n              }, _callee17, null, [[2, 27]]);\n            }));\n            return function (_x35, _x36) {\n              return _ref17.apply(this, arguments);\n            };\n          }());\n\n          //Register Page\n          app.post(\"/api/register\", /*#__PURE__*/function () {\n            var _ref18 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee18(req, res) {\n              var userdata, existUser, saltRounds, hashedPassword, users, transporter;\n              return _regenerator[\"default\"].wrap(function _callee18$(_context18) {\n                while (1) switch (_context18.prev = _context18.next) {\n                  case 0:\n                    console.log(req.body);\n                    userdata = {\n                      username: req.body.username,\n                      password: req.body.password,\n                      confirm_password: req.body.confirm_password,\n                      email: req.body.email,\n                      is_Admin: false,\n                      createdAt: new Date().toLocaleString()\n                    };\n                    _context18.next = 4;\n                    return db.collection(\"Users\").findOne({\n                      username: req.body.username\n                    });\n                  case 4:\n                    existUser = _context18.sent;\n                    if (!existUser) {\n                      _context18.next = 9;\n                      break;\n                    }\n                    res.send(\"User already exists, please use a different name\");\n                    _context18.next = 22;\n                    break;\n                  case 9:\n                    //hash password\n                    saltRounds = 10;\n                    _context18.next = 12;\n                    return bcrypt.hash(userdata.password, saltRounds);\n                  case 12:\n                    hashedPassword = _context18.sent;\n                    userdata.password = hashedPassword;\n                    _context18.next = 16;\n                    return db.collection(\"Users\");\n                  case 16:\n                    users = _context18.sent;\n                    users.insertOne(userdata);\n                    transporter = nodeMailer.createTransport({\n                      host: \"smtp.gmail.com\",\n                      port: 465,\n                      secure: true,\n                      // true for 465, false for other ports\n                      auth: {\n                        user: \"etripofficialsite@gmail.com\",\n                        // generated ethereal user\n                        pass: \"eucm kjnz xnpu llos\" // generated ethereal password\n                      }\n                    });\n                    _context18.next = 21;\n                    return transporter.sendMail({\n                      from: '\"E-Trip 🚨\" <etripofficialsite@gmail.com>',\n                      // sender address\n                      to: req.body.email,\n                      // list of receivers\n                      subject: \"Welcome to E-trip\",\n                      // Subject line\n                      text: \"Hello world?\",\n                      // plain text body\n                      html: \"<h1>Welcome to E-trip! Start to plan your trip to HK with us!!!🪄</h1>\" // html body\n                    });\n                  case 21:\n                    res.status(201).send(\"Account created\");\n\n                    // send mail with defined transport object\n\n                    // console.log(req.query.message);\n                    // return res.json({\n                    //   message: \"mail sent\",\n                    //   info: info,\n                    //   previewUrl: nodeMailer.getTestMessageUrl(info),\n                    // });\n                  case 22:\n                  case \"end\":\n                    return _context18.stop();\n                }\n              }, _callee18);\n            }));\n            return function (_x37, _x38) {\n              return _ref18.apply(this, arguments);\n            };\n          }());\n          app.listen(port, function () {\n            console.log(\"Server listening to port \".concat(port));\n          });\n        case 39:\n        case \"end\":\n          return _context19.stop();\n      }\n    }, _callee19);\n  }));\n  return _start.apply(this, arguments);\n}\nstart();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_express","_interopRequireDefault","require","_mongodb","bodyParser","bcrypt","jwt","ObjectId","start","_start","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee19","app","router","port","url","client","path","MAX_SIZE","multer","nodeMailer","html","uploads","db","staticPath","wrap","_callee19$","_context19","prev","next","express","Router","MongoClient","dest","limits","fileSize","connect","use","urlencoded","extended","json","join","__dirname","post","single","req","res","file","get","_ref","_callee","testAccount","transporter","info","_callee$","_context","createTestAccount","sent","createTransport","host","secure","auth","user","pass","sendMail","from","to","subject","text","query","message","console","log","abrupt","previewUrl","getTestMessageUrl","stop","_x","_x2","_x3","_ref2","_callee2","activities","_callee2$","_context2","collection","find","toArray","send","_x4","_x5","_ref3","_callee3","page","limit","_callee3$","_context3","parseInt","totalItems","length","currentPage","totalPages","Math","ceil","_x6","_x7","_ref4","_callee4","activity","_callee4$","_context4","findOne","_id","params","id","_x8","_x9","put","_ref5","_callee5","_callee5$","_context5","findOneAndReplace","body","_x10","_x11","_ref6","_callee6","actdata","existAct","_callee6$","_context6","Act_name","actName","Location","location","Area","area","District","district","Type","type","Category","category","Charge","charge","Info","Description","description","Approved","filename","insertOne","status","t0","error","_x12","_x13","_ref7","_callee7","users","_callee7$","_context7","_x14","_x15","_ref8","_callee8","_callee8$","_context8","_x16","_x17","_ref9","_callee9","_callee9$","_context9","_x18","_x19","_ref10","_callee10","itinData","plan","_callee10$","_context10","author","authorName","name","iname","itype","participants","dailyItin","is_public","_x20","_x21","_ref11","_callee11","itin","_callee11$","_context11","_x22","_x23","_ref12","_callee12","itinHist","_callee12$","_context12","_x24","_x25","_ref13","_callee13","dataArray","processNested","messageHTML","_callee13$","_context13","_processNested","data","d","result","forEach","item","Array","isArray","_typeof2","act_name","day","startTime","endTime","memo","concat","JSON","parse","email","_x26","_x27","_x28","_ref14","_callee14","_callee14$","_context14","_x29","_x30","_ref15","_callee15","_callee15$","_context15","_x31","_x32","_ref16","_callee16","rateUpdate","rate","_callee16$","_context16","selectedRate","comment","_x33","_x34","_ref17","_callee17","check","passwordMatch","_user","token","_callee17$","_context17","username","password","compare","role","is_Admin","sign","expiresIn","_x35","_x36","_ref18","_callee18","userdata","existUser","saltRounds","hashedPassword","_callee18$","_context18","confirm_password","createdAt","Date","toLocaleString","hash","_x37","_x38","listen"],"sourceRoot":"/Users/nicolechan/Desktop/FYP_Test/back-end/src/","sources":["server.js"],"sourcesContent":["import express from \"express\";\nvar bodyParser = require(\"body-parser\");\nconst bcrypt = require(\"bcrypt\");\nconst jwt = require(\"jsonwebtoken\");\nimport { MongoClient } from \"mongodb\";\nvar ObjectId = require(\"mongodb\").ObjectId;\n\nasync function start() {\n  const app = express();\n  const router = express.Router();\n  const port = 3000;\n\n  const url = \"mongodb+srv://nicolecst:7fUWUtSb@cluster0.j43pz4m.mongodb.net/\";\n  const client = new MongoClient(url);\n  const ObjectId = require(\"mongodb\").ObjectId;\n  const path = require(\"path\");\n\n  const MAX_SIZE = 100000000;\n  const multer = require(\"multer\");\n  const nodeMailer = require(\"nodemailer\");\n\n  const html = `\n    <h1>Hello World!!<h1/>\n    <p>Have a nice day!<p/>\n  `;\n\n  const uploads = multer({\n    dest: \"src/uploads\",\n    limits: {\n      fileSize: MAX_SIZE,\n    },\n  });\n\n  await client.connect();\n  const db = client.db(\"itineraryPlanner\");\n\n  app.use(bodyParser.urlencoded({ extended: true }));\n  app.use(bodyParser.json());\n  const staticPath = path.join(__dirname, \"uploads\"); // Replace 'uploads' with the actual relative path to your image directory\n  app.use(express.static(staticPath));\n\n  app.post(\"/api/upload\", uploads.single(\"file\"), (req, res) => {\n    res.json({ file: req.file });\n  });\n\n  //send email\n  app.get(\"/api/sendmail\", async function (req, res, next) {\n    // Generate test SMTP service account from ethereal.email\n    // Only needed if you don't have a real mail account for testing\n    let testAccount = await nodeMailer.createTestAccount();\n\n    // create reusable transporter object using the default SMTP transport\n    let transporter = nodeMailer.createTransport({\n      host: \"smtp.gmail.com\",\n      port: 465,\n      secure: true, // true for 465, false for other ports\n      auth: {\n        user: \"etripofficialsite@gmail.com\", // generated ethereal user\n        pass: \"eucm kjnz xnpu llos\", // generated ethereal password\n      },\n    });\n\n    // send mail with defined transport object\n    let info = await transporter.sendMail({\n      from: '\"Fred Foo 👻\" <etripofficialsite@gmail.com>', // sender address\n      to: \"nicolechan1217st@gmail.com\", // list of receivers\n      subject: \"Hello ✔\", // Subject line\n      text: \"Hello world?\", // plain text body\n      html: req.query.message, // html body\n    });\n\n    console.log(req.query.message);\n    return res.json({\n      message: \"mail sent\",\n      info: info,\n      previewUrl: nodeMailer.getTestMessageUrl(info),\n    });\n  });\n\n  //home page listing all activities\n  app.get(\"/api/\", async (req, res) => {\n    const activities = await db.collection(\"Activities\").find({}).toArray();\n    console.log(\"hello\");\n    res.send(activities);\n  });\n\n  //all activities with pagination\n  app.get(\"/api/allAct\", async (req, res) => {\n    const page = parseInt(req.query.page) || 1; // Current page number\n    const limit = parseInt(req.query.limit) || 10; // Items per page\n\n    const activities = await db.collection(\"Activities\").find({}).toArray();\n\n    // Calculate starting and ending indices for pagination\n    // const startIndex = (page - 1) * limit;\n    // const endIndex = page * limit;\n\n    // const paginatedItems = activities.slice(startIndex, endIndex);\n\n    console.log(\"hello\");\n    // res.send(activities);\n    res.json({\n      totalItems: activities.length,\n      currentPage: page,\n      totalPages: Math.ceil(activities.length / limit),\n      activities: activities,\n    });\n  });\n\n  //getting one activity\n  app.get(\"/api/activities/:id\", async (req, res) => {\n    const activity = await db\n      .collection(\"Activities\")\n      .findOne({ _id: new ObjectId(req.params.id) });\n    res.send(activity);\n  });\n\n  //Update activities\n  app.put(\"/api/activities/:id\", async (req, res) => {\n    const activity = await db\n      .collection(\"Activities\")\n      .findOneAndReplace({ _id: new ObjectId(req.params.id) }, req.body);\n    res.json(activity);\n  });\n\n  //Add new activities\n  app.post(\"/api/addAct\", uploads.single(\"file\"), async (req, res) => {\n    try {\n      console.log(req.body);\n\n      const actdata = {\n        Act_name: req.body.actName,\n        Location: req.body.location,\n        Area: req.body.area,\n        District: req.body.district,\n        Type: req.body.type,\n        Category: req.body.category,\n        Charge: req.body.charge,\n        Info: req.body.info,\n        Description: req.body.description,\n        file: req.file, // Store the uploaded file in the actdata object\n        Approved: false,\n      };\n      console.log(actdata.file);\n      console.log(\"filename\" + actdata.file.filename);\n\n      const existAct = await db\n        .collection(\"Activities\")\n        .findOne({ Act_name: req.body.actName });\n      if (existAct) {\n        res.send(\"Activity already exists, please use a different name\");\n      } else {\n        const activity = await db.collection(\"Activities\").insertOne(actdata);\n        res.status(201).send(\"Thanks for your proposal!\");\n      }\n    } catch (error) {\n      console.error(error);\n      res.status(500).send(\"An error occurred while processing the request\");\n    }\n  });\n\n  //Get all users\n  app.get(\"/api/users\", async (req, res) => {\n    const users = await db.collection(\"Users\").find({}).toArray();\n    res.send(users);\n  });\n\n  //Get one user details\n  app.get(\"/api/users/:id\", async (req, res) => {\n    // console.log(req.params.id)\n    const user = await db\n      .collection(\"Users\")\n      .findOne({ _id: new ObjectId(req.params.id) });\n    console.log(user._id);\n    res.json(user);\n  });\n\n  //Update user detail\n  app.put(\"/api/users/:id\", async (req, res) => {\n    const user = await db\n      .collection(\"Users\")\n      .findOneAndReplace({ _id: new ObjectId(req.params.id) }, req.body);\n    res.json(user);\n  });\n\n  //Create Itinerary\n  app.post(\"/api/create\", async (req, res) => {\n    console.log(req.body);\n\n    const itinData = {\n      author: new ObjectId(req.body.author),\n      authorName: req.body.authorName,\n      name: req.body.iname,\n      type: req.body.itype,\n      participants: req.body.participants,\n      from: req.body.from,\n      to: req.body.to,\n      dailyItin: req.body.dailyItin,\n      is_public: req.body.is_public,\n    };\n\n    const plan = await db.collection(\"Plans\");\n    plan.insertOne(itinData);\n    res.status(201).send(\"Created!\");\n  });\n\n  //View All Itineray History\n  app.get(\"/api/itinHistory\", async (req, res) => {\n    const itin = await db.collection(\"Plans\").find({}).toArray();\n    res.send(itin);\n  });\n\n  //View All Itinerary\n  app.get(\"/api/itinHistory\", async (req, res) => {\n    const itinHist = await db\n      .collection(\"Plans\")\n      .find({ is_public: true })\n      .toArray();\n    res.send(itinHist);\n  });\n\n  //Send Itinerary Details to Email\n  app.get(\"/api/sendItin\", async function (req, res, next) {\n    // create reusable transporter object using the default SMTP transport\n    let transporter = nodeMailer.createTransport({\n      host: \"smtp.gmail.com\",\n      port: 465,\n      secure: true, // true for 465, false for other ports\n      auth: {\n        user: \"etripofficialsite@gmail.com\", // generated ethereal user\n        pass: \"eucm kjnz xnpu llos\", // generated ethereal password\n      },\n    });\n\n    const dataArray = JSON.parse(req.query.message);\n\n    // Recursive function to process nested arrays and objects\n    function processNested(data, d) {\n      let result = \"\";\n\n      data.forEach((item) => {\n        if (Array.isArray(item)) {\n          result += processNested(item, d); // Recursively process the nested array\n        } else if (typeof item === \"object\" && item !== null) {\n          // Process the object and extract the details\n          const { itin } = item;\n          const { act_name, location, day, startTime, endTime, memo } = itin;\n\n          // Construct the desired output using the extracted details\n          if(day==d){\n          result += `\n            <li>Activity: ${act_name}</li>\n            <li>Location: ${location}</li>\n            <li>Day: ${day}</li>\n            <li>Start Time: ${startTime}</li>\n            <li>End Time: ${endTime}</li>\n            <li>Memo: ${memo}</li>\n            <hr width=\"100%\" size=\"2\">\n          `;\n        }\n      }\n      });\n\n      return result;\n    }\n\n    let messageHTML = `\n    <html>\n    <head>\n      <style>\n      table, th, td{\n        border: 1px solid;\n      }\n      </style>\n    </head>\n    <body>\n      <div class=\"container\">\n        <h1>Your Itinerary Plan</h1>\n        <table>\n          <tr>\n            <th>Day 1</th>\n          \n    `;\n    messageHTML += processNested(dataArray,1);\n\n    messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 2</th>`;\n            messageHTML += processNested(dataArray,2);\n\n            messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 3</th>`;\n            messageHTML += processNested(dataArray,3);\n\n            messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 4</th>`;\n            messageHTML += processNested(dataArray,4);\n\n            messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 5</th>`;\n            messageHTML += processNested(dataArray,5);\n\n            messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 6</th>`;\n            messageHTML += processNested(dataArray,6);\n\n            messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 7</th>`;\n            messageHTML += processNested(dataArray,7);\n\n            messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 8</th>`;\n            messageHTML += processNested(dataArray,8);\n\n            messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 9</th>`;\n            messageHTML += processNested(dataArray,9);\n\n            messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 10</th>`;\n            messageHTML += processNested(dataArray,10);\n\n            messageHTML += `\n        </tr>\n        </table>\n      </div>\n    </body>\n  </html>\n`;\n\n    // send mail with defined transport object\n    let info = await transporter.sendMail({\n      from: '\"E-Trip 🚨\" <etripofficialsite@gmail.com>', // sender address\n      to: req.query.email, // list of receivers\n      subject: \"Your Itinerary Plan\", // Subject line\n      text: \"Hello world?\", // plain text body\n      html: messageHTML, // html body\n    });\n\n    console.log(req.query.message);\n    return res.json({\n      message: \"mail sent\",\n      info: info,\n      previewUrl: nodeMailer.getTestMessageUrl(info),\n    });\n  });\n\n  //View Itineray History of an author\n  app.get(\"/api/itinHistory/:id\", async (req, res) => {\n    const itinHist = await db\n      .collection(\"Plans\")\n      .find({ author: new ObjectId(req.params.id) })\n      .toArray();\n    res.send(itinHist);\n  });\n\n  //View one Itinerary History\n  app.get(\"/api/history/:id\", async (req, res) => {\n    const itinHist = await db\n      .collection(\"Plans\")\n      .findOne({ _id: new ObjectId(req.params.id) });\n    // console.log(itinHist);\n    res.json(itinHist);\n  });\n\n  //Rate Itinerary\n  app.put(\"/api/rate/:id\", async (req, res) => {\n    const rateUpdate = {\n      author: new ObjectId(req.body.author),\n      authorName: req.body.authorName,\n      name: req.body.name,\n      type: req.body.type,\n      participants: req.body.participants,\n      from: req.body.from,\n      to: req.body.to,\n      dailyItin: req.body.dailyItin,\n      is_public: req.body.is_public,\n      selectedRate: req.body.selectedRate,\n      comment: req.body.comment,\n    };\n\n    const rate = await db\n      .collection(\"Plans\")\n      .findOneAndReplace({ _id: new ObjectId(req.params.id) }, rateUpdate);\n    res.json(rate);\n  });\n\n  //Login Page\n  app.post(\"/api/login\", async (req, res) => {\n    let user = req.body;\n    console.log(user);\n\n    try {\n      const check = await db\n        .collection(\"Users\")\n        .findOne({ username: req.body.username });\n      if (!check) {\n        res.status(201).send(\"User does not exists!\");\n        return;\n      }\n      console.log(req.body.password);\n      console.log(check.password);\n      const passwordMatch = await bcrypt.compare(\n        req.body.password,\n        check.password\n      );\n      if (passwordMatch) {\n        //user token\n        const user = {\n          id: check._id,\n          username: check.username,\n          role: check.is_Admin,\n          email: check.email,\n        };\n\n        const token = jwt.sign(user, \"process.env.JWT_KEY\", {\n          expiresIn: \"2h\",\n        });\n\n        user.token = token;\n        console.log(check._id);\n        console.log(token);\n        console.log(user.role);\n        return res.status(200).json(user);\n        // res.status(200).send(\"Successful Login\", token);\n      } else {\n        res.status(201).send(\"Wrong password!\");\n      }\n    } catch {\n      res.status(201).send(\"Incorrect Information\");\n    }\n  });\n\n  //Register Page\n  app.post(\"/api/register\", async (req, res) => {\n    console.log(req.body);\n\n    const userdata = {\n      username: req.body.username,\n      password: req.body.password,\n      confirm_password: req.body.confirm_password,\n      email: req.body.email,\n      is_Admin: false,\n      createdAt: new Date().toLocaleString(),\n    };\n\n    const existUser = await db\n      .collection(\"Users\")\n      .findOne({ username: req.body.username });\n    if (existUser) {\n      res.send(\"User already exists, please use a different name\");\n    } else {\n      //hash password\n      const saltRounds = 10;\n      const hashedPassword = await bcrypt.hash(userdata.password, saltRounds);\n      userdata.password = hashedPassword;\n\n      const users = await db.collection(\"Users\");\n      users.insertOne(userdata);\n\n      let transporter = nodeMailer.createTransport({\n        host: \"smtp.gmail.com\",\n        port: 465,\n        secure: true, // true for 465, false for other ports\n        auth: {\n          user: \"etripofficialsite@gmail.com\", // generated ethereal user\n          pass: \"eucm kjnz xnpu llos\", // generated ethereal password\n        },\n      });\n      await transporter.sendMail({\n        from: '\"E-Trip 🚨\" <etripofficialsite@gmail.com>', // sender address\n        to: req.body.email, // list of receivers\n        subject: \"Welcome to E-trip\", // Subject line\n        text: \"Hello world?\", // plain text body\n        html: \"<h1>Welcome to E-trip! Start to plan your trip to HK with us!!!🪄</h1>\", // html body\n      });\n\n      res.status(201).send(\"Account created\");\n\n      // send mail with defined transport object\n\n      // console.log(req.query.message);\n      // return res.json({\n      //   message: \"mail sent\",\n      //   info: info,\n      //   previewUrl: nodeMailer.getTestMessageUrl(info),\n      // });\n    }\n  });\n\n  app.listen(port, () => {\n    console.log(`Server listening to port ${port}`);\n  });\n}\n\nstart();\n"],"mappings":"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"}},"mtime":1711874356878}}