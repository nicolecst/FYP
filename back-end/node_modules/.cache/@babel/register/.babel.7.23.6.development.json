{"{\"assumptions\":{},\"sourceRoot\":\"/Users/nicolechan/Desktop/FYP_Test/back-end/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/nicolechan/Desktop/FYP_Test/back-end\",\"filename\":\"/Users/nicolechan/Desktop/FYP_Test/back-end/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/nicolechan/Desktop/FYP_Test/back-end\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.6:development":{"value":{"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _express = _interopRequireDefault(require(\"express\"));\nvar _mongodb = require(\"mongodb\");\nvar bodyParser = require(\"body-parser\");\nvar bcrypt = require(\"bcrypt\");\nvar jwt = require(\"jsonwebtoken\");\nvar ObjectId = require(\"mongodb\").ObjectId;\nfunction start() {\n  return _start.apply(this, arguments);\n}\nfunction _start() {\n  _start = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee17() {\n    var app, router, port, url, client, ObjectId, path, MAX_SIZE, multer, uploads, db, staticPath;\n    return _regenerator[\"default\"].wrap(function _callee17$(_context17) {\n      while (1) switch (_context17.prev = _context17.next) {\n        case 0:\n          app = (0, _express[\"default\"])();\n          router = _express[\"default\"].Router();\n          port = 3000;\n          url = \"mongodb+srv://nicolecst:7fUWUtSb@cluster0.j43pz4m.mongodb.net/\";\n          client = new _mongodb.MongoClient(url);\n          ObjectId = require(\"mongodb\").ObjectId;\n          path = require('path');\n          MAX_SIZE = 100000000;\n          multer = require('multer');\n          uploads = multer({\n            dest: 'src/uploads',\n            limits: {\n              fileSize: MAX_SIZE\n            }\n          });\n          _context17.next = 12;\n          return client.connect();\n        case 12:\n          db = client.db(\"itineraryPlanner\");\n          app.use(bodyParser.urlencoded({\n            extended: true\n          }));\n          app.use(bodyParser.json());\n          staticPath = path.join(__dirname, 'uploads'); // Replace 'uploads' with the actual relative path to your image directory\n          app.use(_express[\"default\"][\"static\"](staticPath));\n          app.post(\"/api/upload\", uploads.single('file'), function (req, res) {\n            res.json({\n              file: req.file\n            });\n          });\n\n          //home page listing all activities\n          app.get(\"/api/\", /*#__PURE__*/function () {\n            var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res) {\n              var activities;\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return db.collection(\"Activities\").find({}).toArray();\n                  case 2:\n                    activities = _context.sent;\n                    console.log(\"hello\");\n                    res.send(activities);\n                  case 5:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n            return function (_x, _x2) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n\n          //all activities with pagination\n          app.get(\"/api/allAct\", /*#__PURE__*/function () {\n            var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res) {\n              var page, limit, activities;\n              return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n                while (1) switch (_context2.prev = _context2.next) {\n                  case 0:\n                    page = parseInt(req.query.page) || 1; // Current page number\n                    limit = parseInt(req.query.limit) || 10; // Items per page\n                    _context2.next = 4;\n                    return db.collection(\"Activities\").find({}).toArray();\n                  case 4:\n                    activities = _context2.sent;\n                    // Calculate starting and ending indices for pagination\n                    // const startIndex = (page - 1) * limit;\n                    // const endIndex = page * limit;\n\n                    // const paginatedItems = activities.slice(startIndex, endIndex);\n\n                    console.log(\"hello\");\n                    // res.send(activities);\n                    res.json({\n                      totalItems: activities.length,\n                      currentPage: page,\n                      totalPages: Math.ceil(activities.length / limit),\n                      activities: activities\n                    });\n                  case 7:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }, _callee2);\n            }));\n            return function (_x3, _x4) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n\n          //getting one activity\n          app.get(\"/api/activities/:id\", /*#__PURE__*/function () {\n            var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(req, res) {\n              var activity;\n              return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n                while (1) switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return db.collection(\"Activities\").findOne({\n                      _id: new ObjectId(req.params.id)\n                    });\n                  case 2:\n                    activity = _context3.sent;\n                    res.send(activity);\n                  case 4:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }, _callee3);\n            }));\n            return function (_x5, _x6) {\n              return _ref3.apply(this, arguments);\n            };\n          }());\n\n          //Update activities\n          app.put(\"/api/activities/:id\", /*#__PURE__*/function () {\n            var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res) {\n              var activity;\n              return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n                while (1) switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.next = 2;\n                    return db.collection(\"Activities\").findOneAndReplace({\n                      _id: new ObjectId(req.params.id)\n                    }, req.body);\n                  case 2:\n                    activity = _context4.sent;\n                    res.json(activity);\n                  case 4:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }, _callee4);\n            }));\n            return function (_x7, _x8) {\n              return _ref4.apply(this, arguments);\n            };\n          }());\n\n          //Add new activities\n          app.post(\"/api/addAct\", uploads.single('file'), /*#__PURE__*/function () {\n            var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(req, res) {\n              var actdata, existAct, activity;\n              return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n                while (1) switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.prev = 0;\n                    console.log(req.body);\n                    actdata = {\n                      Act_name: req.body.actName,\n                      Location: req.body.location,\n                      Area: req.body.area,\n                      District: req.body.district,\n                      Type: req.body.type,\n                      Category: req.body.category,\n                      Charge: req.body.charge,\n                      Info: req.body.info,\n                      Description: req.body.description,\n                      file: req.file,\n                      // Store the uploaded file in the actdata object\n                      Approved: false\n                    };\n                    console.log(actdata.file);\n                    console.log(\"filename\" + actdata.file.filename);\n                    _context5.next = 7;\n                    return db.collection(\"Activities\").findOne({\n                      Act_name: req.body.actName\n                    });\n                  case 7:\n                    existAct = _context5.sent;\n                    if (!existAct) {\n                      _context5.next = 12;\n                      break;\n                    }\n                    res.send(\"Activity already exists, please use a different name\");\n                    _context5.next = 16;\n                    break;\n                  case 12:\n                    _context5.next = 14;\n                    return db.collection(\"Activities\").insertOne(actdata);\n                  case 14:\n                    activity = _context5.sent;\n                    res.status(201).send(\"Thanks for your proposal!\");\n                  case 16:\n                    _context5.next = 22;\n                    break;\n                  case 18:\n                    _context5.prev = 18;\n                    _context5.t0 = _context5[\"catch\"](0);\n                    console.error(_context5.t0);\n                    res.status(500).send(\"An error occurred while processing the request\");\n                  case 22:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }, _callee5, null, [[0, 18]]);\n            }));\n            return function (_x9, _x10) {\n              return _ref5.apply(this, arguments);\n            };\n          }());\n\n          //Get all users\n          app.get(\"/api/users\", /*#__PURE__*/function () {\n            var _ref6 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(req, res) {\n              var users;\n              return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n                while (1) switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _context6.next = 2;\n                    return db.collection(\"Users\").find({}).toArray();\n                  case 2:\n                    users = _context6.sent;\n                    res.send(users);\n                  case 4:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }, _callee6);\n            }));\n            return function (_x11, _x12) {\n              return _ref6.apply(this, arguments);\n            };\n          }());\n\n          //Get one user details\n          app.get(\"/api/users/:id\", /*#__PURE__*/function () {\n            var _ref7 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(req, res) {\n              var user;\n              return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n                while (1) switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _context7.next = 2;\n                    return db.collection(\"Users\").findOne({\n                      _id: new ObjectId(req.params.id)\n                    });\n                  case 2:\n                    user = _context7.sent;\n                    console.log(user._id);\n                    res.json(user);\n                  case 5:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }, _callee7);\n            }));\n            return function (_x13, _x14) {\n              return _ref7.apply(this, arguments);\n            };\n          }());\n\n          //Update user detail\n          app.put(\"/api/users/:id\", /*#__PURE__*/function () {\n            var _ref8 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(req, res) {\n              var user;\n              return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n                while (1) switch (_context8.prev = _context8.next) {\n                  case 0:\n                    _context8.next = 2;\n                    return db.collection(\"Users\").findOneAndReplace({\n                      _id: new ObjectId(req.params.id)\n                    }, req.body);\n                  case 2:\n                    user = _context8.sent;\n                    res.json(user);\n                  case 4:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }, _callee8);\n            }));\n            return function (_x15, _x16) {\n              return _ref8.apply(this, arguments);\n            };\n          }());\n\n          //Create Itinerary\n          app.post(\"/api/create\", /*#__PURE__*/function () {\n            var _ref9 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(req, res) {\n              var itinData, plan;\n              return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n                while (1) switch (_context9.prev = _context9.next) {\n                  case 0:\n                    console.log(req.body);\n                    itinData = {\n                      author: new ObjectId(req.body.author),\n                      authorName: req.body.authorName,\n                      name: req.body.iname,\n                      type: req.body.itype,\n                      participants: req.body.participants,\n                      from: req.body.from,\n                      to: req.body.to,\n                      dailyItin: req.body.dailyItin,\n                      is_public: req.body.is_public\n                    };\n                    _context9.next = 4;\n                    return db.collection(\"Plans\");\n                  case 4:\n                    plan = _context9.sent;\n                    plan.insertOne(itinData);\n                    res.status(201).send(\"Created!\");\n                  case 7:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }, _callee9);\n            }));\n            return function (_x17, _x18) {\n              return _ref9.apply(this, arguments);\n            };\n          }());\n\n          //View All Itineray History\n          app.get(\"/api/itinHistory\", /*#__PURE__*/function () {\n            var _ref10 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(req, res) {\n              var itin;\n              return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n                while (1) switch (_context10.prev = _context10.next) {\n                  case 0:\n                    _context10.next = 2;\n                    return db.collection(\"Plans\").find({}).toArray();\n                  case 2:\n                    itin = _context10.sent;\n                    res.send(itin);\n                  case 4:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }, _callee10);\n            }));\n            return function (_x19, _x20) {\n              return _ref10.apply(this, arguments);\n            };\n          }());\n\n          //View All Itinerary\n          app.get(\"/api/itinHistory\", /*#__PURE__*/function () {\n            var _ref11 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(req, res) {\n              var itinHist;\n              return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n                while (1) switch (_context11.prev = _context11.next) {\n                  case 0:\n                    _context11.next = 2;\n                    return db.collection(\"Plans\").find({\n                      is_public: true\n                    }).toArray();\n                  case 2:\n                    itinHist = _context11.sent;\n                    res.send(itinHist);\n                  case 4:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }, _callee11);\n            }));\n            return function (_x21, _x22) {\n              return _ref11.apply(this, arguments);\n            };\n          }());\n\n          //View Itineray History of an author\n          app.get(\"/api/itinHistory/:id\", /*#__PURE__*/function () {\n            var _ref12 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee12(req, res) {\n              var itinHist;\n              return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n                while (1) switch (_context12.prev = _context12.next) {\n                  case 0:\n                    _context12.next = 2;\n                    return db.collection(\"Plans\").find({\n                      author: new ObjectId(req.params.id)\n                    }).toArray();\n                  case 2:\n                    itinHist = _context12.sent;\n                    res.send(itinHist);\n                  case 4:\n                  case \"end\":\n                    return _context12.stop();\n                }\n              }, _callee12);\n            }));\n            return function (_x23, _x24) {\n              return _ref12.apply(this, arguments);\n            };\n          }());\n\n          //View one Itinerary History\n          app.get(\"/api/history/:id\", /*#__PURE__*/function () {\n            var _ref13 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee13(req, res) {\n              var itinHist;\n              return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n                while (1) switch (_context13.prev = _context13.next) {\n                  case 0:\n                    _context13.next = 2;\n                    return db.collection(\"Plans\").findOne({\n                      _id: new ObjectId(req.params.id)\n                    });\n                  case 2:\n                    itinHist = _context13.sent;\n                    // console.log(itinHist);\n                    res.json(itinHist);\n                  case 4:\n                  case \"end\":\n                    return _context13.stop();\n                }\n              }, _callee13);\n            }));\n            return function (_x25, _x26) {\n              return _ref13.apply(this, arguments);\n            };\n          }());\n\n          //Rate Itinerary\n          app.put(\"/api/rate/:id\", /*#__PURE__*/function () {\n            var _ref14 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee14(req, res) {\n              var rate;\n              return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n                while (1) switch (_context14.prev = _context14.next) {\n                  case 0:\n                    _context14.next = 2;\n                    return db.collection(\"Plans\").findOneAndReplace({\n                      _id: new ObjectId(req.params.id)\n                    }, req.body);\n                  case 2:\n                    rate = _context14.sent;\n                    res.json(rate);\n                  case 4:\n                  case \"end\":\n                    return _context14.stop();\n                }\n              }, _callee14);\n            }));\n            return function (_x27, _x28) {\n              return _ref14.apply(this, arguments);\n            };\n          }());\n\n          //Login Page\n          app.post(\"/api/login\", /*#__PURE__*/function () {\n            var _ref15 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee15(req, res) {\n              var user, check, passwordMatch, _user, token;\n              return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n                while (1) switch (_context15.prev = _context15.next) {\n                  case 0:\n                    user = req.body;\n                    console.log(user);\n                    _context15.prev = 2;\n                    _context15.next = 5;\n                    return db.collection(\"Users\").findOne({\n                      username: req.body.username\n                    });\n                  case 5:\n                    check = _context15.sent;\n                    if (check) {\n                      _context15.next = 9;\n                      break;\n                    }\n                    res.status(201).send(\"User does not exists!\");\n                    return _context15.abrupt(\"return\");\n                  case 9:\n                    console.log(req.body.password);\n                    console.log(check.password);\n                    _context15.next = 13;\n                    return bcrypt.compare(req.body.password, check.password);\n                  case 13:\n                    passwordMatch = _context15.sent;\n                    if (!passwordMatch) {\n                      _context15.next = 24;\n                      break;\n                    }\n                    //user token\n                    _user = {\n                      id: check._id,\n                      username: check.username,\n                      role: check.is_Admin\n                    };\n                    token = jwt.sign(_user, \"process.env.JWT_KEY\", {\n                      expiresIn: \"2h\"\n                    });\n                    _user.token = token;\n                    console.log(check._id);\n                    console.log(token);\n                    console.log(_user.role);\n                    return _context15.abrupt(\"return\", res.status(200).json(_user));\n                  case 24:\n                    res.status(201).send(\"Wrong password!\");\n                  case 25:\n                    _context15.next = 30;\n                    break;\n                  case 27:\n                    _context15.prev = 27;\n                    _context15.t0 = _context15[\"catch\"](2);\n                    res.status(201).send(\"Incorrect Information\");\n                  case 30:\n                  case \"end\":\n                    return _context15.stop();\n                }\n              }, _callee15, null, [[2, 27]]);\n            }));\n            return function (_x29, _x30) {\n              return _ref15.apply(this, arguments);\n            };\n          }());\n\n          //Register Page\n          app.post(\"/api/register\", /*#__PURE__*/function () {\n            var _ref16 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee16(req, res) {\n              var userdata, existUser, saltRounds, hashedPassword, users;\n              return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n                while (1) switch (_context16.prev = _context16.next) {\n                  case 0:\n                    console.log(req.body);\n                    userdata = {\n                      username: req.body.username,\n                      password: req.body.password,\n                      confirm_password: req.body.confirm_password,\n                      email: req.body.email,\n                      is_Admin: false,\n                      createdAt: new Date().toLocaleString()\n                    };\n                    _context16.next = 4;\n                    return db.collection(\"Users\").findOne({\n                      username: req.body.username\n                    });\n                  case 4:\n                    existUser = _context16.sent;\n                    if (!existUser) {\n                      _context16.next = 9;\n                      break;\n                    }\n                    res.send(\"User already exists, please use a different name\");\n                    _context16.next = 19;\n                    break;\n                  case 9:\n                    //hash password\n                    saltRounds = 10;\n                    _context16.next = 12;\n                    return bcrypt.hash(userdata.password, saltRounds);\n                  case 12:\n                    hashedPassword = _context16.sent;\n                    userdata.password = hashedPassword;\n                    _context16.next = 16;\n                    return db.collection(\"Users\");\n                  case 16:\n                    users = _context16.sent;\n                    users.insertOne(userdata);\n                    res.status(201).send(\"Account created\");\n                  case 19:\n                  case \"end\":\n                    return _context16.stop();\n                }\n              }, _callee16);\n            }));\n            return function (_x31, _x32) {\n              return _ref16.apply(this, arguments);\n            };\n          }());\n\n          // app.get(\"/api/home\", async (req, res) => {\n          //   res.send(\"home\");\n          // });\n\n          app.listen(port, function () {\n            console.log(\"Server listening to port \".concat(port));\n          });\n        case 35:\n        case \"end\":\n          return _context17.stop();\n      }\n    }, _callee17);\n  }));\n  return _start.apply(this, arguments);\n}\nstart();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_express","_interopRequireDefault","require","_mongodb","bodyParser","bcrypt","jwt","ObjectId","start","_start","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee17","app","router","port","url","client","path","MAX_SIZE","multer","uploads","db","staticPath","wrap","_callee17$","_context17","prev","next","express","Router","MongoClient","dest","limits","fileSize","connect","use","urlencoded","extended","json","join","__dirname","post","single","req","res","file","get","_ref","_callee","activities","_callee$","_context","collection","find","toArray","sent","console","log","send","stop","_x","_x2","_ref2","_callee2","page","limit","_callee2$","_context2","parseInt","query","totalItems","length","currentPage","totalPages","Math","ceil","_x3","_x4","_ref3","_callee3","activity","_callee3$","_context3","findOne","_id","params","id","_x5","_x6","put","_ref4","_callee4","_callee4$","_context4","findOneAndReplace","body","_x7","_x8","_ref5","_callee5","actdata","existAct","_callee5$","_context5","Act_name","actName","Location","location","Area","area","District","district","Type","type","Category","category","Charge","charge","Info","info","Description","description","Approved","filename","insertOne","status","t0","error","_x9","_x10","_ref6","_callee6","users","_callee6$","_context6","_x11","_x12","_ref7","_callee7","user","_callee7$","_context7","_x13","_x14","_ref8","_callee8","_callee8$","_context8","_x15","_x16","_ref9","_callee9","itinData","plan","_callee9$","_context9","author","authorName","name","iname","itype","participants","from","to","dailyItin","is_public","_x17","_x18","_ref10","_callee10","itin","_callee10$","_context10","_x19","_x20","_ref11","_callee11","itinHist","_callee11$","_context11","_x21","_x22","_ref12","_callee12","_callee12$","_context12","_x23","_x24","_ref13","_callee13","_callee13$","_context13","_x25","_x26","_ref14","_callee14","rate","_callee14$","_context14","_x27","_x28","_ref15","_callee15","check","passwordMatch","_user","token","_callee15$","_context15","username","abrupt","password","compare","role","is_Admin","sign","expiresIn","_x29","_x30","_ref16","_callee16","userdata","existUser","saltRounds","hashedPassword","_callee16$","_context16","confirm_password","email","createdAt","Date","toLocaleString","hash","_x31","_x32","listen","concat"],"sourceRoot":"/Users/nicolechan/Desktop/FYP_Test/back-end/src/","sources":["server.js"],"sourcesContent":["import express from \"express\";\nvar bodyParser = require(\"body-parser\");\nconst bcrypt = require(\"bcrypt\");\nconst jwt = require(\"jsonwebtoken\");\nimport { MongoClient } from \"mongodb\";\nvar ObjectId = require(\"mongodb\").ObjectId;\n\nasync function start() {\n  const app = express();\n  const router = express.Router();\n  const port = 3000;\n\n  const url = \"mongodb+srv://nicolecst:7fUWUtSb@cluster0.j43pz4m.mongodb.net/\";\n  const client = new MongoClient(url);\n  const ObjectId = require(\"mongodb\").ObjectId;\n  const path = require('path');\n\n  const MAX_SIZE = 100000000;\n  const multer = require('multer');\n\n  const uploads = multer({\n    dest: 'src/uploads',\n    limits:{\n      fileSize: MAX_SIZE\n    }\n  });\n\n  await client.connect();\n  const db = client.db(\"itineraryPlanner\");\n\n  app.use(bodyParser.urlencoded({ extended: true }));\n  app.use(bodyParser.json());\n  const staticPath = path.join(__dirname, 'uploads');  // Replace 'uploads' with the actual relative path to your image directory\n  app.use(express.static(staticPath));\n\n  app.post(\"/api/upload\", uploads.single('file'),(req, res)=>{\n    res.json({file: req.file});\n  })\n\n  //home page listing all activities\n  app.get(\"/api/\", async (req, res) => {\n    const activities = await db.collection(\"Activities\").find({}).toArray();\n    console.log(\"hello\");\n    res.send(activities);\n  });\n\n  //all activities with pagination\n  app.get(\"/api/allAct\", async (req, res) => {\n    const page = parseInt(req.query.page) || 1; // Current page number\n    const limit = parseInt(req.query.limit) || 10; // Items per page\n\n    const activities = await db.collection(\"Activities\").find({}).toArray();\n\n    // Calculate starting and ending indices for pagination\n    // const startIndex = (page - 1) * limit;\n    // const endIndex = page * limit;\n\n    // const paginatedItems = activities.slice(startIndex, endIndex);\n\n    console.log(\"hello\");\n    // res.send(activities);\n    res.json({\n      totalItems: activities.length,\n      currentPage: page,\n      totalPages: Math.ceil(activities.length / limit),\n      activities: activities,\n    });\n  });\n\n  //getting one activity\n  app.get(\"/api/activities/:id\", async (req, res) => {\n    const activity = await db\n      .collection(\"Activities\")\n      .findOne({ _id: new ObjectId(req.params.id) });\n    res.send(activity);\n  });\n\n  //Update activities\n  app.put(\"/api/activities/:id\", async (req, res) => {\n    const activity = await db\n      .collection(\"Activities\")\n      .findOneAndReplace({ _id: new ObjectId(req.params.id) }, req.body);\n    res.json(activity);\n  });\n\n  //Add new activities\n  app.post(\"/api/addAct\", uploads.single('file'),async (req, res) => {\n    try {\n      console.log(req.body);\n  \n      const actdata = {\n        Act_name: req.body.actName,\n        Location: req.body.location,\n        Area: req.body.area,\n        District: req.body.district,\n        Type: req.body.type,\n        Category: req.body.category,\n        Charge: req.body.charge,\n        Info: req.body.info,\n        Description: req.body.description,\n        file: req.file, // Store the uploaded file in the actdata object\n        Approved: false,\n      };\n      console.log(actdata.file);\n      console.log(\"filename\"+ actdata.file.filename);\n  \n      const existAct = await db.collection(\"Activities\").findOne({ Act_name: req.body.actName });\n      if (existAct) {\n        res.send(\"Activity already exists, please use a different name\");\n      } else {\n        const activity = await db.collection(\"Activities\").insertOne(actdata);\n        res.status(201).send(\"Thanks for your proposal!\");\n      }\n    } catch (error) {\n      console.error(error);\n      res.status(500).send(\"An error occurred while processing the request\");\n    }\n  });\n\n  //Get all users\n  app.get(\"/api/users\", async (req, res) => {\n    const users = await db.collection(\"Users\").find({}).toArray();\n    res.send(users);\n  });\n\n  //Get one user details\n  app.get(\"/api/users/:id\", async (req, res) => {\n    // console.log(req.params.id)\n    const user = await db\n      .collection(\"Users\")\n      .findOne({ _id: new ObjectId(req.params.id) });\n    console.log(user._id);\n    res.json(user);\n  });\n\n  //Update user detail\n  app.put(\"/api/users/:id\", async (req, res) => {\n    const user = await db\n      .collection(\"Users\")\n      .findOneAndReplace({ _id: new ObjectId(req.params.id) }, req.body);\n    res.json(user);\n  });\n\n  //Create Itinerary\n  app.post(\"/api/create\", async (req, res) => {\n    console.log(req.body);\n\n    const itinData = {\n      author: new ObjectId(req.body.author),\n      authorName: req.body.authorName,\n      name: req.body.iname,\n      type: req.body.itype,\n      participants: req.body.participants,\n      from: req.body.from,\n      to: req.body.to,\n      dailyItin: req.body.dailyItin,\n      is_public: req.body.is_public,\n    };\n\n    const plan = await db.collection(\"Plans\");\n    plan.insertOne(itinData);\n    res.status(201).send(\"Created!\");\n  });\n\n  //View All Itineray History\n  app.get(\"/api/itinHistory\", async (req, res) => {\n    const itin = await db.collection(\"Plans\").find({}).toArray();\n    res.send(itin);\n  });\n\n    //View All Itinerary\n    app.get(\"/api/itinHistory\", async (req, res) => {\n      const itinHist = await db\n        .collection(\"Plans\")\n        .find({is_public: true})\n        .toArray();\n      res.send(itinHist);\n    });\n\n  //View Itineray History of an author\n  app.get(\"/api/itinHistory/:id\", async (req, res) => {\n    const itinHist = await db\n      .collection(\"Plans\")\n      .find({ author: new ObjectId(req.params.id) })\n      .toArray();\n    res.send(itinHist);\n  });\n\n  //View one Itinerary History\n  app.get(\"/api/history/:id\", async (req, res) => {\n    const itinHist = await db\n      .collection(\"Plans\")\n      .findOne({ _id: new ObjectId(req.params.id) });\n    // console.log(itinHist);\n    res.json(itinHist);\n  });\n\n  //Rate Itinerary\n  app.put(\"/api/rate/:id\", async (req, res) => {\n    const rate = await db\n      .collection(\"Plans\")\n      .findOneAndReplace({ _id: new ObjectId(req.params.id) }, req.body);\n    res.json(rate);\n  });\n\n  //Login Page\n  app.post(\"/api/login\", async (req, res) => {\n    let user = req.body;\n    console.log(user);\n\n    try {\n      const check = await db\n        .collection(\"Users\")\n        .findOne({ username: req.body.username });\n      if (!check) {\n        res.status(201).send(\"User does not exists!\");\n        return;\n      }\n      console.log(req.body.password);\n      console.log(check.password);\n      const passwordMatch = await bcrypt.compare(\n        req.body.password,\n        check.password\n      );\n      if (passwordMatch) {\n        //user token\n        const user = {\n          id: check._id,\n          username: check.username,\n          role: check.is_Admin,\n        };\n\n        const token = jwt.sign(user, \"process.env.JWT_KEY\", {\n          expiresIn: \"2h\",\n        });\n\n        user.token = token;\n        console.log(check._id);\n        console.log(token);\n        console.log(user.role);\n        return res.status(200).json(user);\n        // res.status(200).send(\"Successful Login\", token);\n      } else {\n        res.status(201).send(\"Wrong password!\");\n      }\n    } catch {\n      res.status(201).send(\"Incorrect Information\");\n    }\n  });\n\n  //Register Page\n  app.post(\"/api/register\", async (req, res) => {\n    console.log(req.body);\n\n    const userdata = {\n      username: req.body.username,\n      password: req.body.password,\n      confirm_password: req.body.confirm_password,\n      email: req.body.email,\n      is_Admin: false,\n      createdAt: new Date().toLocaleString(),\n    };\n\n    const existUser = await db\n      .collection(\"Users\")\n      .findOne({ username: req.body.username });\n    if (existUser) {\n      res.send(\"User already exists, please use a different name\");\n    } else {\n      //hash password\n      const saltRounds = 10;\n      const hashedPassword = await bcrypt.hash(userdata.password, saltRounds);\n      userdata.password = hashedPassword;\n\n      const users = await db.collection(\"Users\");\n      users.insertOne(userdata);\n      res.status(201).send(\"Account created\");\n    }\n  });\n\n  // app.get(\"/api/home\", async (req, res) => {\n  //   res.send(\"home\");\n  // });\n\n  app.listen(port, () => {\n    console.log(`Server listening to port ${port}`);\n  });\n}\n\nstart();\n"],"mappings":"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"}},"mtime":1710753859053}}