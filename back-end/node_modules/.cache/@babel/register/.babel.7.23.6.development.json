{"{\"assumptions\":{},\"sourceRoot\":\"/Users/nicolechan/Desktop/FYP_Test/back-end/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/nicolechan/Desktop/FYP_Test/back-end\",\"filename\":\"/Users/nicolechan/Desktop/FYP_Test/back-end/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/nicolechan/Desktop/FYP_Test/back-end\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.6:development":{"value":{"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _express = _interopRequireDefault(require(\"express\"));\nvar _mongodb = require(\"mongodb\");\nvar bodyParser = require(\"body-parser\");\nvar bcrypt = require(\"bcrypt\");\nvar jwt = require(\"jsonwebtoken\");\nvar ObjectId = require(\"mongodb\").ObjectId;\nfunction start() {\n  return _start.apply(this, arguments);\n}\nfunction _start() {\n  _start = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee21() {\n    var app, router, port, url, client, ObjectId, path, MAX_SIZE, multer, nodeMailer, html, uploads, db, staticPath;\n    return _regenerator[\"default\"].wrap(function _callee21$(_context21) {\n      while (1) switch (_context21.prev = _context21.next) {\n        case 0:\n          app = (0, _express[\"default\"])();\n          router = _express[\"default\"].Router();\n          port = 3000;\n          url = \"mongodb+srv://nicolecst:7fUWUtSb@cluster0.j43pz4m.mongodb.net/\";\n          client = new _mongodb.MongoClient(url);\n          ObjectId = require(\"mongodb\").ObjectId;\n          path = require(\"path\");\n          MAX_SIZE = 100000000;\n          multer = require(\"multer\");\n          nodeMailer = require(\"nodemailer\");\n          html = \"\\n    <h1>Hello World!!<h1/>\\n    <p>Have a nice day!<p/>\\n  \";\n          uploads = multer({\n            dest: \"src/uploads\",\n            limits: {\n              fileSize: MAX_SIZE\n            }\n          });\n          _context21.next = 14;\n          return client.connect();\n        case 14:\n          db = client.db(\"itineraryPlanner\");\n          app.use(bodyParser.urlencoded({\n            extended: true\n          }));\n          app.use(bodyParser.json());\n          staticPath = path.join(__dirname, \"uploads\"); // Replace 'uploads' with the actual relative path to your image directory\n          app.use(_express[\"default\"][\"static\"](staticPath));\n          app.post(\"/api/upload\", uploads.single(\"file\"), function (req, res) {\n            res.json({\n              file: req.file\n            });\n          });\n\n          //send email\n          app.get(\"/api/sendmail\", /*#__PURE__*/function () {\n            var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res, next) {\n              var testAccount, transporter, info;\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return nodeMailer.createTestAccount();\n                  case 2:\n                    testAccount = _context.sent;\n                    // create reusable transporter object using the default SMTP transport\n                    transporter = nodeMailer.createTransport({\n                      host: \"smtp.gmail.com\",\n                      port: 465,\n                      secure: true,\n                      // true for 465, false for other ports\n                      auth: {\n                        user: \"etripofficialsite@gmail.com\",\n                        // generated ethereal user\n                        pass: \"eucm kjnz xnpu llos\" // generated ethereal password\n                      }\n                    }); // send mail with defined transport object\n                    _context.next = 6;\n                    return transporter.sendMail({\n                      from: '\"Fred Foo 👻\" <etripofficialsite@gmail.com>',\n                      // sender address\n                      to: \"nicolechan1217st@gmail.com\",\n                      // list of receivers\n                      subject: \"Hello ✔\",\n                      // Subject line\n                      text: \"Hello world?\",\n                      // plain text body\n                      html: req.query.message // html body\n                    });\n                  case 6:\n                    info = _context.sent;\n                    console.log(req.query.message);\n                    return _context.abrupt(\"return\", res.json({\n                      message: \"mail sent\",\n                      info: info,\n                      previewUrl: nodeMailer.getTestMessageUrl(info)\n                    }));\n                  case 9:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n            return function (_x, _x2, _x3) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n\n          //home page listing all activities\n          app.get(\"/api/\", /*#__PURE__*/function () {\n            var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res) {\n              var activities;\n              return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n                while (1) switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return db.collection(\"Activities\").find({}).toArray();\n                  case 2:\n                    activities = _context2.sent;\n                    console.log(\"hello\");\n                    res.send(activities);\n                  case 5:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }, _callee2);\n            }));\n            return function (_x4, _x5) {\n              return _ref2.apply(this, arguments);\n            };\n          }());\n\n          //all activities with pagination\n          app.get(\"/api/allAct\", /*#__PURE__*/function () {\n            var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(req, res) {\n              var page, limit, activities;\n              return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n                while (1) switch (_context3.prev = _context3.next) {\n                  case 0:\n                    page = parseInt(req.query.page) || 1; // Current page number\n                    limit = parseInt(req.query.limit) || 10; // Items per page\n                    _context3.next = 4;\n                    return db.collection(\"Activities\").find({}).toArray();\n                  case 4:\n                    activities = _context3.sent;\n                    // Calculate starting and ending indices for pagination\n                    // const startIndex = (page - 1) * limit;\n                    // const endIndex = page * limit;\n\n                    // const paginatedItems = activities.slice(startIndex, endIndex);\n\n                    console.log(\"hello\");\n                    // res.send(activities);\n                    res.json({\n                      totalItems: activities.length,\n                      currentPage: page,\n                      totalPages: Math.ceil(activities.length / limit),\n                      activities: activities\n                    });\n                  case 7:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }, _callee3);\n            }));\n            return function (_x6, _x7) {\n              return _ref3.apply(this, arguments);\n            };\n          }());\n\n          //getting one activity\n          app.get(\"/api/activities/:id\", /*#__PURE__*/function () {\n            var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res) {\n              var activity;\n              return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n                while (1) switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.next = 2;\n                    return db.collection(\"Activities\").findOne({\n                      _id: new ObjectId(req.params.id)\n                    });\n                  case 2:\n                    activity = _context4.sent;\n                    res.send(activity);\n                  case 4:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }, _callee4);\n            }));\n            return function (_x8, _x9) {\n              return _ref4.apply(this, arguments);\n            };\n          }());\n\n          //Update activities\n          app.put(\"/api/activities/:id\", /*#__PURE__*/function () {\n            var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(req, res) {\n              var activity;\n              return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n                while (1) switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.next = 2;\n                    return db.collection(\"Activities\").findOneAndReplace({\n                      _id: new ObjectId(req.params.id)\n                    }, req.body);\n                  case 2:\n                    activity = _context5.sent;\n                    res.json(activity);\n                  case 4:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }, _callee5);\n            }));\n            return function (_x10, _x11) {\n              return _ref5.apply(this, arguments);\n            };\n          }());\n\n          //Add new activities\n          app.post(\"/api/addAct\", uploads.single(\"file\"), /*#__PURE__*/function () {\n            var _ref6 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(req, res) {\n              var actdata, existAct;\n              return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n                while (1) switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _context6.prev = 0;\n                    console.log(req.body);\n                    actdata = {\n                      Act_name: req.body.actName,\n                      Location: req.body.location,\n                      Area: req.body.area,\n                      District: req.body.district,\n                      Type: req.body.type.split(\",\"),\n                      Category: req.body.category,\n                      Charge: req.body.charge,\n                      Info: req.body.info,\n                      Description: req.body.description,\n                      // file: req.file, // Store the uploaded file in the actdata object\n                      Approved: false\n                    }; // console.log(actdata.file);\n                    // console.log(\"filename\" + actdata.file.filename);\n                    _context6.next = 5;\n                    return db.collection(\"Activities\").findOne({\n                      Act_name: req.body.actName\n                    });\n                  case 5:\n                    existAct = _context6.sent;\n                    if (!existAct) {\n                      _context6.next = 10;\n                      break;\n                    }\n                    res.send(\"Activity already exists, please use a different name\");\n                    _context6.next = 13;\n                    break;\n                  case 10:\n                    _context6.next = 12;\n                    return db.collection(\"Activities\").insertOne(actdata);\n                  case 12:\n                    res.status(201).send(\"Thanks for your proposal!\");\n                  case 13:\n                    _context6.next = 19;\n                    break;\n                  case 15:\n                    _context6.prev = 15;\n                    _context6.t0 = _context6[\"catch\"](0);\n                    console.error(_context6.t0);\n                    res.status(500).send(\"An error occurred while processing the request\");\n                  case 19:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }, _callee6, null, [[0, 15]]);\n            }));\n            return function (_x12, _x13) {\n              return _ref6.apply(this, arguments);\n            };\n          }());\n\n          //Delete activity\n          app[\"delete\"](\"/api/deletAct/:id\", /*#__PURE__*/function () {\n            var _ref7 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(req, res) {\n              return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n                while (1) switch (_context7.prev = _context7.next) {\n                  case 0:\n                    console.log('delete act testing');\n                    _context7.next = 3;\n                    return db.collection(\"Activities\").findOneAndDelete({\n                      _id: new ObjectId(req.params.id)\n                    });\n                  case 3:\n                    res.status(200).send(\"Activity Deleted!\");\n                  case 4:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }, _callee7);\n            }));\n            return function (_x14, _x15) {\n              return _ref7.apply(this, arguments);\n            };\n          }());\n\n          //Get all users\n          app.get(\"/api/users\", /*#__PURE__*/function () {\n            var _ref8 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(req, res) {\n              var users;\n              return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n                while (1) switch (_context8.prev = _context8.next) {\n                  case 0:\n                    _context8.next = 2;\n                    return db.collection(\"Users\").find({}).toArray();\n                  case 2:\n                    users = _context8.sent;\n                    res.send(users);\n                  case 4:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }, _callee8);\n            }));\n            return function (_x16, _x17) {\n              return _ref8.apply(this, arguments);\n            };\n          }());\n\n          //Get one user details\n          app.get(\"/api/users/:id\", /*#__PURE__*/function () {\n            var _ref9 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(req, res) {\n              var user;\n              return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n                while (1) switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _context9.next = 2;\n                    return db.collection(\"Users\").findOne({\n                      _id: new ObjectId(req.params.id)\n                    });\n                  case 2:\n                    user = _context9.sent;\n                    console.log(user._id);\n                    res.json(user);\n                  case 5:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }, _callee9);\n            }));\n            return function (_x18, _x19) {\n              return _ref9.apply(this, arguments);\n            };\n          }());\n\n          //Update user detail\n          app.put(\"/api/users/:id\", /*#__PURE__*/function () {\n            var _ref10 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(req, res) {\n              var user;\n              return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n                while (1) switch (_context10.prev = _context10.next) {\n                  case 0:\n                    _context10.next = 2;\n                    return db.collection(\"Users\").findOneAndReplace({\n                      _id: new ObjectId(req.params.id)\n                    }, req.body);\n                  case 2:\n                    user = _context10.sent;\n                    res.json(user);\n                  case 4:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }, _callee10);\n            }));\n            return function (_x20, _x21) {\n              return _ref10.apply(this, arguments);\n            };\n          }());\n\n          //Create Itinerary\n          app.post(\"/api/create\", /*#__PURE__*/function () {\n            var _ref11 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(req, res) {\n              var itinData, plan;\n              return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n                while (1) switch (_context11.prev = _context11.next) {\n                  case 0:\n                    console.log(req.body);\n                    itinData = {\n                      author: new ObjectId(req.body.author),\n                      authorName: req.body.authorName,\n                      name: req.body.iname,\n                      type: req.body.itype,\n                      participants: req.body.participants,\n                      from: req.body.from,\n                      to: req.body.to,\n                      dailyItin: req.body.dailyItin,\n                      is_public: req.body.is_public,\n                      createdAt: req.body.createdDate\n                    };\n                    _context11.next = 4;\n                    return db.collection(\"Plans\");\n                  case 4:\n                    plan = _context11.sent;\n                    plan.insertOne(itinData);\n                    res.status(201).send(\"Created!\");\n                  case 7:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }, _callee11);\n            }));\n            return function (_x22, _x23) {\n              return _ref11.apply(this, arguments);\n            };\n          }());\n\n          //View All Itineray History\n          app.get(\"/api/itinHistory\", /*#__PURE__*/function () {\n            var _ref12 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee12(req, res) {\n              var itin;\n              return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n                while (1) switch (_context12.prev = _context12.next) {\n                  case 0:\n                    _context12.next = 2;\n                    return db.collection(\"Plans\").find({}).toArray();\n                  case 2:\n                    itin = _context12.sent;\n                    res.send(itin);\n                  case 4:\n                  case \"end\":\n                    return _context12.stop();\n                }\n              }, _callee12);\n            }));\n            return function (_x24, _x25) {\n              return _ref12.apply(this, arguments);\n            };\n          }());\n\n          //View All Itinerary\n          app.get(\"/api/itinHistory\", /*#__PURE__*/function () {\n            var _ref13 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee13(req, res) {\n              var itinHist;\n              return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n                while (1) switch (_context13.prev = _context13.next) {\n                  case 0:\n                    _context13.next = 2;\n                    return db.collection(\"Plans\").find({\n                      is_public: true\n                    }).toArray();\n                  case 2:\n                    itinHist = _context13.sent;\n                    res.send(itinHist);\n                  case 4:\n                  case \"end\":\n                    return _context13.stop();\n                }\n              }, _callee13);\n            }));\n            return function (_x26, _x27) {\n              return _ref13.apply(this, arguments);\n            };\n          }());\n\n          //Send Itinerary Details to Email\n          app.get(\"/api/sendItin\", /*#__PURE__*/function () {\n            var _ref14 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee14(req, res, next) {\n              var transporter, dataArray, processNested, messageHTML, info;\n              return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n                while (1) switch (_context14.prev = _context14.next) {\n                  case 0:\n                    processNested = function _processNested(data, d) {\n                      var result = \"\";\n                      data.forEach(function (item) {\n                        if (Array.isArray(item)) {\n                          result += processNested(item, d); // Recursively process the nested array\n                        } else if ((0, _typeof2[\"default\"])(item) === \"object\" && item !== null) {\n                          // Process the object and extract the details\n                          var itin = item.itin;\n                          var act_name = itin.act_name,\n                            location = itin.location,\n                            day = itin.day,\n                            startTime = itin.startTime,\n                            endTime = itin.endTime,\n                            memo = itin.memo;\n\n                          // Construct the desired output using the extracted details\n                          if (day == d) {\n                            result += \"\\n            <li>Activity: \".concat(act_name, \"</li>\\n            <li>Location: \").concat(location, \"</li>\\n            <li>Day: \").concat(day, \"</li>\\n            <li>Start Time: \").concat(startTime, \"</li>\\n            <li>End Time: \").concat(endTime, \"</li>\\n            <li>Memo: \").concat(memo, \"</li>\\n            <hr width=\\\"100%\\\" size=\\\"2\\\">\\n          \");\n                          }\n                        }\n                      });\n                      return result;\n                    };\n                    // create reusable transporter object using the default SMTP transport\n                    transporter = nodeMailer.createTransport({\n                      host: \"smtp.gmail.com\",\n                      port: 465,\n                      secure: true,\n                      // true for 465, false for other ports\n                      auth: {\n                        user: \"etripofficialsite@gmail.com\",\n                        // generated ethereal user\n                        pass: \"eucm kjnz xnpu llos\" // generated ethereal password\n                      }\n                    });\n                    dataArray = JSON.parse(req.query.message); // Recursive function to process nested arrays and objects\n                    messageHTML = \"\\n    <html>\\n    <head>\\n      <style>\\n      table, th, td{\\n        border: 1px solid;\\n      }\\n      </style>\\n    </head>\\n    <body>\\n      <div class=\\\"container\\\">\\n        <h1>Your Itinerary Plan</h1>\\n        <table>\\n          <tr>\\n            <th>Day 1</th>\\n          \\n    \";\n                    messageHTML += processNested(dataArray, 1);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 2</th>\";\n                    messageHTML += processNested(dataArray, 2);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 3</th>\";\n                    messageHTML += processNested(dataArray, 3);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 4</th>\";\n                    messageHTML += processNested(dataArray, 4);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 5</th>\";\n                    messageHTML += processNested(dataArray, 5);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 6</th>\";\n                    messageHTML += processNested(dataArray, 6);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 7</th>\";\n                    messageHTML += processNested(dataArray, 7);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 8</th>\";\n                    messageHTML += processNested(dataArray, 8);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 9</th>\";\n                    messageHTML += processNested(dataArray, 9);\n                    messageHTML += \"\\n        </tr>\\n        <tr>\\n            <th>Day 10</th>\";\n                    messageHTML += processNested(dataArray, 10);\n                    messageHTML += \"\\n        </tr>\\n        </table>\\n      </div>\\n    </body>\\n  </html>\\n\";\n\n                    // send mail with defined transport object\n                    _context14.next = 26;\n                    return transporter.sendMail({\n                      from: '\"E-Trip 🚨\" <etripofficialsite@gmail.com>',\n                      // sender address\n                      to: req.query.email,\n                      // list of receivers\n                      subject: \"Your Itinerary Plan\",\n                      // Subject line\n                      text: \"Hello world?\",\n                      // plain text body\n                      html: messageHTML // html body\n                    });\n                  case 26:\n                    info = _context14.sent;\n                    console.log(req.query.message);\n                    return _context14.abrupt(\"return\", res.json({\n                      message: \"mail sent\",\n                      info: info,\n                      previewUrl: nodeMailer.getTestMessageUrl(info)\n                    }));\n                  case 29:\n                  case \"end\":\n                    return _context14.stop();\n                }\n              }, _callee14);\n            }));\n            return function (_x28, _x29, _x30) {\n              return _ref14.apply(this, arguments);\n            };\n          }());\n\n          //View Itineray History of an author\n          app.get(\"/api/itinHistory/:id\", /*#__PURE__*/function () {\n            var _ref15 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee15(req, res) {\n              var itinHist;\n              return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n                while (1) switch (_context15.prev = _context15.next) {\n                  case 0:\n                    _context15.next = 2;\n                    return db.collection(\"Plans\").find({\n                      author: new ObjectId(req.params.id)\n                    }).toArray();\n                  case 2:\n                    itinHist = _context15.sent;\n                    res.send(itinHist);\n                  case 4:\n                  case \"end\":\n                    return _context15.stop();\n                }\n              }, _callee15);\n            }));\n            return function (_x31, _x32) {\n              return _ref15.apply(this, arguments);\n            };\n          }());\n\n          //View one Itinerary History\n          app.get(\"/api/history/:id\", /*#__PURE__*/function () {\n            var _ref16 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee16(req, res) {\n              var itinHist;\n              return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n                while (1) switch (_context16.prev = _context16.next) {\n                  case 0:\n                    _context16.next = 2;\n                    return db.collection(\"Plans\").findOne({\n                      _id: new ObjectId(req.params.id)\n                    });\n                  case 2:\n                    itinHist = _context16.sent;\n                    // console.log(itinHist);\n                    res.json(itinHist);\n                  case 4:\n                  case \"end\":\n                    return _context16.stop();\n                }\n              }, _callee16);\n            }));\n            return function (_x33, _x34) {\n              return _ref16.apply(this, arguments);\n            };\n          }());\n\n          //Rate Itinerary\n          app.put(\"/api/rate/:id\", /*#__PURE__*/function () {\n            var _ref17 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee17(req, res) {\n              var rateUpdate, rate;\n              return _regenerator[\"default\"].wrap(function _callee17$(_context17) {\n                while (1) switch (_context17.prev = _context17.next) {\n                  case 0:\n                    rateUpdate = {\n                      author: new ObjectId(req.body.author),\n                      authorName: req.body.authorName,\n                      name: req.body.name,\n                      type: req.body.type,\n                      participants: req.body.participants,\n                      from: req.body.from,\n                      to: req.body.to,\n                      dailyItin: req.body.dailyItin,\n                      is_public: req.body.is_public,\n                      selectedRate: req.body.selectedRate,\n                      comment: req.body.comment\n                    };\n                    _context17.next = 3;\n                    return db.collection(\"Plans\").findOneAndReplace({\n                      _id: new ObjectId(req.params.id)\n                    }, rateUpdate);\n                  case 3:\n                    rate = _context17.sent;\n                    res.json(rate);\n                  case 5:\n                  case \"end\":\n                    return _context17.stop();\n                }\n              }, _callee17);\n            }));\n            return function (_x35, _x36) {\n              return _ref17.apply(this, arguments);\n            };\n          }());\n          app[\"delete\"](\"/api/delItin/:id\", /*#__PURE__*/function () {\n            var _ref18 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee18(req, res) {\n              return _regenerator[\"default\"].wrap(function _callee18$(_context18) {\n                while (1) switch (_context18.prev = _context18.next) {\n                  case 0:\n                    _context18.next = 2;\n                    return db.collection(\"Plans\").findOneAndDelete({\n                      _id: new ObjectId(req.params.id)\n                    });\n                  case 2:\n                    res.status(200).send(\"Itinerary Deleted!\");\n                  case 3:\n                  case \"end\":\n                    return _context18.stop();\n                }\n              }, _callee18);\n            }));\n            return function (_x37, _x38) {\n              return _ref18.apply(this, arguments);\n            };\n          }());\n\n          //Login Page\n          app.post(\"/api/login\", /*#__PURE__*/function () {\n            var _ref19 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee19(req, res) {\n              var user, check, passwordMatch, _user, token;\n              return _regenerator[\"default\"].wrap(function _callee19$(_context19) {\n                while (1) switch (_context19.prev = _context19.next) {\n                  case 0:\n                    user = req.body;\n                    console.log(user);\n                    _context19.prev = 2;\n                    _context19.next = 5;\n                    return db.collection(\"Users\").findOne({\n                      username: req.body.username\n                    });\n                  case 5:\n                    check = _context19.sent;\n                    if (check) {\n                      _context19.next = 9;\n                      break;\n                    }\n                    res.status(201).send(\"User does not exists!\");\n                    return _context19.abrupt(\"return\");\n                  case 9:\n                    console.log(req.body.password);\n                    console.log(check.password);\n                    _context19.next = 13;\n                    return bcrypt.compare(req.body.password, check.password);\n                  case 13:\n                    passwordMatch = _context19.sent;\n                    if (!passwordMatch) {\n                      _context19.next = 24;\n                      break;\n                    }\n                    //user token\n                    _user = {\n                      id: check._id,\n                      username: check.username,\n                      role: check.is_Admin,\n                      email: check.email\n                    };\n                    token = jwt.sign(_user, \"process.env.JWT_KEY\", {\n                      expiresIn: \"2h\"\n                    });\n                    _user.token = token;\n                    console.log(check._id);\n                    console.log(token);\n                    console.log(_user.role);\n                    return _context19.abrupt(\"return\", res.status(200).json(_user));\n                  case 24:\n                    res.status(201).send(\"Wrong password!\");\n                  case 25:\n                    _context19.next = 30;\n                    break;\n                  case 27:\n                    _context19.prev = 27;\n                    _context19.t0 = _context19[\"catch\"](2);\n                    res.status(201).send(\"Incorrect Information\");\n                  case 30:\n                  case \"end\":\n                    return _context19.stop();\n                }\n              }, _callee19, null, [[2, 27]]);\n            }));\n            return function (_x39, _x40) {\n              return _ref19.apply(this, arguments);\n            };\n          }());\n\n          //Register Page\n          app.post(\"/api/register\", /*#__PURE__*/function () {\n            var _ref20 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee20(req, res) {\n              var userdata, existUser, saltRounds, hashedPassword, users, transporter;\n              return _regenerator[\"default\"].wrap(function _callee20$(_context20) {\n                while (1) switch (_context20.prev = _context20.next) {\n                  case 0:\n                    console.log(req.body);\n                    userdata = {\n                      username: req.body.username,\n                      password: req.body.password,\n                      confirm_password: req.body.confirm_password,\n                      email: req.body.email,\n                      is_Admin: false,\n                      createdAt: new Date().toLocaleString()\n                    };\n                    _context20.next = 4;\n                    return db.collection(\"Users\").findOne({\n                      username: req.body.username\n                    });\n                  case 4:\n                    existUser = _context20.sent;\n                    if (!existUser) {\n                      _context20.next = 9;\n                      break;\n                    }\n                    res.send(\"User already exists, please use a different name\");\n                    _context20.next = 22;\n                    break;\n                  case 9:\n                    //hash password\n                    saltRounds = 10;\n                    _context20.next = 12;\n                    return bcrypt.hash(userdata.password, saltRounds);\n                  case 12:\n                    hashedPassword = _context20.sent;\n                    userdata.password = hashedPassword;\n                    _context20.next = 16;\n                    return db.collection(\"Users\");\n                  case 16:\n                    users = _context20.sent;\n                    users.insertOne(userdata);\n                    transporter = nodeMailer.createTransport({\n                      host: \"smtp.gmail.com\",\n                      port: 465,\n                      secure: true,\n                      // true for 465, false for other ports\n                      auth: {\n                        user: \"etripofficialsite@gmail.com\",\n                        // generated ethereal user\n                        pass: \"eucm kjnz xnpu llos\" // generated ethereal password\n                      }\n                    });\n                    _context20.next = 21;\n                    return transporter.sendMail({\n                      from: '\"E-Trip 🚨\" <etripofficialsite@gmail.com>',\n                      // sender address\n                      to: req.body.email,\n                      // list of receivers\n                      subject: \"Welcome to E-trip\",\n                      // Subject line\n                      text: \"Hello world?\",\n                      // plain text body\n                      html: \"<h1>Welcome to E-trip! Start to plan your trip to HK with us!!!🪄</h1>\" // html body\n                    });\n                  case 21:\n                    res.status(201).send(\"Account created\");\n\n                    // send mail with defined transport object\n\n                    // console.log(req.query.message);\n                    // return res.json({\n                    //   message: \"mail sent\",\n                    //   info: info,\n                    //   previewUrl: nodeMailer.getTestMessageUrl(info),\n                    // });\n                  case 22:\n                  case \"end\":\n                    return _context20.stop();\n                }\n              }, _callee20);\n            }));\n            return function (_x41, _x42) {\n              return _ref20.apply(this, arguments);\n            };\n          }());\n          app.listen(port, function () {\n            console.log(\"Server listening to port \".concat(port));\n          });\n        case 41:\n        case \"end\":\n          return _context21.stop();\n      }\n    }, _callee21);\n  }));\n  return _start.apply(this, arguments);\n}\nstart();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX21vbmdvZGIiLCJib2R5UGFyc2VyIiwiYmNyeXB0Iiwiand0IiwiT2JqZWN0SWQiLCJzdGFydCIsIl9zdGFydCIsImFwcGx5IiwiYXJndW1lbnRzIiwiX2FzeW5jVG9HZW5lcmF0b3IyIiwiX3JlZ2VuZXJhdG9yIiwibWFyayIsIl9jYWxsZWUyMSIsImFwcCIsInJvdXRlciIsInBvcnQiLCJ1cmwiLCJjbGllbnQiLCJwYXRoIiwiTUFYX1NJWkUiLCJtdWx0ZXIiLCJub2RlTWFpbGVyIiwiaHRtbCIsInVwbG9hZHMiLCJkYiIsInN0YXRpY1BhdGgiLCJ3cmFwIiwiX2NhbGxlZTIxJCIsIl9jb250ZXh0MjEiLCJwcmV2IiwibmV4dCIsImV4cHJlc3MiLCJSb3V0ZXIiLCJNb25nb0NsaWVudCIsImRlc3QiLCJsaW1pdHMiLCJmaWxlU2l6ZSIsImNvbm5lY3QiLCJ1c2UiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwiam9pbiIsIl9fZGlybmFtZSIsInBvc3QiLCJzaW5nbGUiLCJyZXEiLCJyZXMiLCJmaWxlIiwiZ2V0IiwiX3JlZiIsIl9jYWxsZWUiLCJ0ZXN0QWNjb3VudCIsInRyYW5zcG9ydGVyIiwiaW5mbyIsIl9jYWxsZWUkIiwiX2NvbnRleHQiLCJjcmVhdGVUZXN0QWNjb3VudCIsInNlbnQiLCJjcmVhdGVUcmFuc3BvcnQiLCJob3N0Iiwic2VjdXJlIiwiYXV0aCIsInVzZXIiLCJwYXNzIiwic2VuZE1haWwiLCJmcm9tIiwidG8iLCJzdWJqZWN0IiwidGV4dCIsInF1ZXJ5IiwibWVzc2FnZSIsImNvbnNvbGUiLCJsb2ciLCJhYnJ1cHQiLCJwcmV2aWV3VXJsIiwiZ2V0VGVzdE1lc3NhZ2VVcmwiLCJzdG9wIiwiX3giLCJfeDIiLCJfeDMiLCJfcmVmMiIsIl9jYWxsZWUyIiwiYWN0aXZpdGllcyIsIl9jYWxsZWUyJCIsIl9jb250ZXh0MiIsImNvbGxlY3Rpb24iLCJmaW5kIiwidG9BcnJheSIsInNlbmQiLCJfeDQiLCJfeDUiLCJfcmVmMyIsIl9jYWxsZWUzIiwicGFnZSIsImxpbWl0IiwiX2NhbGxlZTMkIiwiX2NvbnRleHQzIiwicGFyc2VJbnQiLCJ0b3RhbEl0ZW1zIiwibGVuZ3RoIiwiY3VycmVudFBhZ2UiLCJ0b3RhbFBhZ2VzIiwiTWF0aCIsImNlaWwiLCJfeDYiLCJfeDciLCJfcmVmNCIsIl9jYWxsZWU0IiwiYWN0aXZpdHkiLCJfY2FsbGVlNCQiLCJfY29udGV4dDQiLCJmaW5kT25lIiwiX2lkIiwicGFyYW1zIiwiaWQiLCJfeDgiLCJfeDkiLCJwdXQiLCJfcmVmNSIsIl9jYWxsZWU1IiwiX2NhbGxlZTUkIiwiX2NvbnRleHQ1IiwiZmluZE9uZUFuZFJlcGxhY2UiLCJib2R5IiwiX3gxMCIsIl94MTEiLCJfcmVmNiIsIl9jYWxsZWU2IiwiYWN0ZGF0YSIsImV4aXN0QWN0IiwiX2NhbGxlZTYkIiwiX2NvbnRleHQ2IiwiQWN0X25hbWUiLCJhY3ROYW1lIiwiTG9jYXRpb24iLCJsb2NhdGlvbiIsIkFyZWEiLCJhcmVhIiwiRGlzdHJpY3QiLCJkaXN0cmljdCIsIlR5cGUiLCJ0eXBlIiwic3BsaXQiLCJDYXRlZ29yeSIsImNhdGVnb3J5IiwiQ2hhcmdlIiwiY2hhcmdlIiwiSW5mbyIsIkRlc2NyaXB0aW9uIiwiZGVzY3JpcHRpb24iLCJBcHByb3ZlZCIsImluc2VydE9uZSIsInN0YXR1cyIsInQwIiwiZXJyb3IiLCJfeDEyIiwiX3gxMyIsIl9yZWY3IiwiX2NhbGxlZTciLCJfY2FsbGVlNyQiLCJfY29udGV4dDciLCJmaW5kT25lQW5kRGVsZXRlIiwiX3gxNCIsIl94MTUiLCJfcmVmOCIsIl9jYWxsZWU4IiwidXNlcnMiLCJfY2FsbGVlOCQiLCJfY29udGV4dDgiLCJfeDE2IiwiX3gxNyIsIl9yZWY5IiwiX2NhbGxlZTkiLCJfY2FsbGVlOSQiLCJfY29udGV4dDkiLCJfeDE4IiwiX3gxOSIsIl9yZWYxMCIsIl9jYWxsZWUxMCIsIl9jYWxsZWUxMCQiLCJfY29udGV4dDEwIiwiX3gyMCIsIl94MjEiLCJfcmVmMTEiLCJfY2FsbGVlMTEiLCJpdGluRGF0YSIsInBsYW4iLCJfY2FsbGVlMTEkIiwiX2NvbnRleHQxMSIsImF1dGhvciIsImF1dGhvck5hbWUiLCJuYW1lIiwiaW5hbWUiLCJpdHlwZSIsInBhcnRpY2lwYW50cyIsImRhaWx5SXRpbiIsImlzX3B1YmxpYyIsImNyZWF0ZWRBdCIsImNyZWF0ZWREYXRlIiwiX3gyMiIsIl94MjMiLCJfcmVmMTIiLCJfY2FsbGVlMTIiLCJpdGluIiwiX2NhbGxlZTEyJCIsIl9jb250ZXh0MTIiLCJfeDI0IiwiX3gyNSIsIl9yZWYxMyIsIl9jYWxsZWUxMyIsIml0aW5IaXN0IiwiX2NhbGxlZTEzJCIsIl9jb250ZXh0MTMiLCJfeDI2IiwiX3gyNyIsIl9yZWYxNCIsIl9jYWxsZWUxNCIsImRhdGFBcnJheSIsInByb2Nlc3NOZXN0ZWQiLCJtZXNzYWdlSFRNTCIsIl9jYWxsZWUxNCQiLCJfY29udGV4dDE0IiwiX3Byb2Nlc3NOZXN0ZWQiLCJkYXRhIiwiZCIsInJlc3VsdCIsImZvckVhY2giLCJpdGVtIiwiQXJyYXkiLCJpc0FycmF5IiwiX3R5cGVvZjIiLCJhY3RfbmFtZSIsImRheSIsInN0YXJ0VGltZSIsImVuZFRpbWUiLCJtZW1vIiwiY29uY2F0IiwiSlNPTiIsInBhcnNlIiwiZW1haWwiLCJfeDI4IiwiX3gyOSIsIl94MzAiLCJfcmVmMTUiLCJfY2FsbGVlMTUiLCJfY2FsbGVlMTUkIiwiX2NvbnRleHQxNSIsIl94MzEiLCJfeDMyIiwiX3JlZjE2IiwiX2NhbGxlZTE2IiwiX2NhbGxlZTE2JCIsIl9jb250ZXh0MTYiLCJfeDMzIiwiX3gzNCIsIl9yZWYxNyIsIl9jYWxsZWUxNyIsInJhdGVVcGRhdGUiLCJyYXRlIiwiX2NhbGxlZTE3JCIsIl9jb250ZXh0MTciLCJzZWxlY3RlZFJhdGUiLCJjb21tZW50IiwiX3gzNSIsIl94MzYiLCJfcmVmMTgiLCJfY2FsbGVlMTgiLCJfY2FsbGVlMTgkIiwiX2NvbnRleHQxOCIsIl94MzciLCJfeDM4IiwiX3JlZjE5IiwiX2NhbGxlZTE5IiwiY2hlY2siLCJwYXNzd29yZE1hdGNoIiwiX3VzZXIiLCJ0b2tlbiIsIl9jYWxsZWUxOSQiLCJfY29udGV4dDE5IiwidXNlcm5hbWUiLCJwYXNzd29yZCIsImNvbXBhcmUiLCJyb2xlIiwiaXNfQWRtaW4iLCJzaWduIiwiZXhwaXJlc0luIiwiX3gzOSIsIl94NDAiLCJfcmVmMjAiLCJfY2FsbGVlMjAiLCJ1c2VyZGF0YSIsImV4aXN0VXNlciIsInNhbHRSb3VuZHMiLCJoYXNoZWRQYXNzd29yZCIsIl9jYWxsZWUyMCQiLCJfY29udGV4dDIwIiwiY29uZmlybV9wYXNzd29yZCIsIkRhdGUiLCJ0b0xvY2FsZVN0cmluZyIsImhhc2giLCJfeDQxIiwiX3g0MiIsImxpc3RlbiJdLCJzb3VyY2VSb290IjoiL1VzZXJzL25pY29sZWNoYW4vRGVza3RvcC9GWVBfVGVzdC9iYWNrLWVuZC9zcmMvIiwic291cmNlcyI6WyJzZXJ2ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcbnZhciBib2R5UGFyc2VyID0gcmVxdWlyZShcImJvZHktcGFyc2VyXCIpO1xuY29uc3QgYmNyeXB0ID0gcmVxdWlyZShcImJjcnlwdFwiKTtcbmNvbnN0IGp3dCA9IHJlcXVpcmUoXCJqc29ud2VidG9rZW5cIik7XG5pbXBvcnQgeyBNb25nb0NsaWVudCB9IGZyb20gXCJtb25nb2RiXCI7XG52YXIgT2JqZWN0SWQgPSByZXF1aXJlKFwibW9uZ29kYlwiKS5PYmplY3RJZDtcblxuYXN5bmMgZnVuY3Rpb24gc3RhcnQoKSB7XG4gIGNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbiAgY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbiAgY29uc3QgcG9ydCA9IDMwMDA7XG5cbiAgY29uc3QgdXJsID0gXCJtb25nb2RiK3NydjovL25pY29sZWNzdDo3ZlVXVXRTYkBjbHVzdGVyMC5qNDNwejRtLm1vbmdvZGIubmV0L1wiO1xuICBjb25zdCBjbGllbnQgPSBuZXcgTW9uZ29DbGllbnQodXJsKTtcbiAgY29uc3QgT2JqZWN0SWQgPSByZXF1aXJlKFwibW9uZ29kYlwiKS5PYmplY3RJZDtcbiAgY29uc3QgcGF0aCA9IHJlcXVpcmUoXCJwYXRoXCIpO1xuXG4gIGNvbnN0IE1BWF9TSVpFID0gMTAwMDAwMDAwO1xuICBjb25zdCBtdWx0ZXIgPSByZXF1aXJlKFwibXVsdGVyXCIpO1xuICBjb25zdCBub2RlTWFpbGVyID0gcmVxdWlyZShcIm5vZGVtYWlsZXJcIik7XG5cbiAgY29uc3QgaHRtbCA9IGBcbiAgICA8aDE+SGVsbG8gV29ybGQhITxoMS8+XG4gICAgPHA+SGF2ZSBhIG5pY2UgZGF5ITxwLz5cbiAgYDtcblxuICBjb25zdCB1cGxvYWRzID0gbXVsdGVyKHtcbiAgICBkZXN0OiBcInNyYy91cGxvYWRzXCIsXG4gICAgbGltaXRzOiB7XG4gICAgICBmaWxlU2l6ZTogTUFYX1NJWkUsXG4gICAgfSxcbiAgfSk7XG5cbiAgYXdhaXQgY2xpZW50LmNvbm5lY3QoKTtcbiAgY29uc3QgZGIgPSBjbGllbnQuZGIoXCJpdGluZXJhcnlQbGFubmVyXCIpO1xuXG4gIGFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuICBhcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbiAgY29uc3Qgc3RhdGljUGF0aCA9IHBhdGguam9pbihfX2Rpcm5hbWUsIFwidXBsb2Fkc1wiKTsgLy8gUmVwbGFjZSAndXBsb2Fkcycgd2l0aCB0aGUgYWN0dWFsIHJlbGF0aXZlIHBhdGggdG8geW91ciBpbWFnZSBkaXJlY3RvcnlcbiAgYXBwLnVzZShleHByZXNzLnN0YXRpYyhzdGF0aWNQYXRoKSk7XG5cbiAgYXBwLnBvc3QoXCIvYXBpL3VwbG9hZFwiLCB1cGxvYWRzLnNpbmdsZShcImZpbGVcIiksIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5qc29uKHsgZmlsZTogcmVxLmZpbGUgfSk7XG4gIH0pO1xuXG4gIC8vc2VuZCBlbWFpbFxuICBhcHAuZ2V0KFwiL2FwaS9zZW5kbWFpbFwiLCBhc3luYyBmdW5jdGlvbiAocmVxLCByZXMsIG5leHQpIHtcbiAgICAvLyBHZW5lcmF0ZSB0ZXN0IFNNVFAgc2VydmljZSBhY2NvdW50IGZyb20gZXRoZXJlYWwuZW1haWxcbiAgICAvLyBPbmx5IG5lZWRlZCBpZiB5b3UgZG9uJ3QgaGF2ZSBhIHJlYWwgbWFpbCBhY2NvdW50IGZvciB0ZXN0aW5nXG4gICAgbGV0IHRlc3RBY2NvdW50ID0gYXdhaXQgbm9kZU1haWxlci5jcmVhdGVUZXN0QWNjb3VudCgpO1xuXG4gICAgLy8gY3JlYXRlIHJldXNhYmxlIHRyYW5zcG9ydGVyIG9iamVjdCB1c2luZyB0aGUgZGVmYXVsdCBTTVRQIHRyYW5zcG9ydFxuICAgIGxldCB0cmFuc3BvcnRlciA9IG5vZGVNYWlsZXIuY3JlYXRlVHJhbnNwb3J0KHtcbiAgICAgIGhvc3Q6IFwic210cC5nbWFpbC5jb21cIixcbiAgICAgIHBvcnQ6IDQ2NSxcbiAgICAgIHNlY3VyZTogdHJ1ZSwgLy8gdHJ1ZSBmb3IgNDY1LCBmYWxzZSBmb3Igb3RoZXIgcG9ydHNcbiAgICAgIGF1dGg6IHtcbiAgICAgICAgdXNlcjogXCJldHJpcG9mZmljaWFsc2l0ZUBnbWFpbC5jb21cIiwgLy8gZ2VuZXJhdGVkIGV0aGVyZWFsIHVzZXJcbiAgICAgICAgcGFzczogXCJldWNtIGtqbnogeG5wdSBsbG9zXCIsIC8vIGdlbmVyYXRlZCBldGhlcmVhbCBwYXNzd29yZFxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIC8vIHNlbmQgbWFpbCB3aXRoIGRlZmluZWQgdHJhbnNwb3J0IG9iamVjdFxuICAgIGxldCBpbmZvID0gYXdhaXQgdHJhbnNwb3J0ZXIuc2VuZE1haWwoe1xuICAgICAgZnJvbTogJ1wiRnJlZCBGb28g8J+Ru1wiIDxldHJpcG9mZmljaWFsc2l0ZUBnbWFpbC5jb20+JywgLy8gc2VuZGVyIGFkZHJlc3NcbiAgICAgIHRvOiBcIm5pY29sZWNoYW4xMjE3c3RAZ21haWwuY29tXCIsIC8vIGxpc3Qgb2YgcmVjZWl2ZXJzXG4gICAgICBzdWJqZWN0OiBcIkhlbGxvIOKclFwiLCAvLyBTdWJqZWN0IGxpbmVcbiAgICAgIHRleHQ6IFwiSGVsbG8gd29ybGQ/XCIsIC8vIHBsYWluIHRleHQgYm9keVxuICAgICAgaHRtbDogcmVxLnF1ZXJ5Lm1lc3NhZ2UsIC8vIGh0bWwgYm9keVxuICAgIH0pO1xuXG4gICAgY29uc29sZS5sb2cocmVxLnF1ZXJ5Lm1lc3NhZ2UpO1xuICAgIHJldHVybiByZXMuanNvbih7XG4gICAgICBtZXNzYWdlOiBcIm1haWwgc2VudFwiLFxuICAgICAgaW5mbzogaW5mbyxcbiAgICAgIHByZXZpZXdVcmw6IG5vZGVNYWlsZXIuZ2V0VGVzdE1lc3NhZ2VVcmwoaW5mbyksXG4gICAgfSk7XG4gIH0pO1xuXG4gIC8vaG9tZSBwYWdlIGxpc3RpbmcgYWxsIGFjdGl2aXRpZXNcbiAgYXBwLmdldChcIi9hcGkvXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IGFjdGl2aXRpZXMgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwiQWN0aXZpdGllc1wiKS5maW5kKHt9KS50b0FycmF5KCk7XG4gICAgY29uc29sZS5sb2coXCJoZWxsb1wiKTtcbiAgICByZXMuc2VuZChhY3Rpdml0aWVzKTtcbiAgfSk7XG5cbiAgLy9hbGwgYWN0aXZpdGllcyB3aXRoIHBhZ2luYXRpb25cbiAgYXBwLmdldChcIi9hcGkvYWxsQWN0XCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHBhZ2UgPSBwYXJzZUludChyZXEucXVlcnkucGFnZSkgfHwgMTsgLy8gQ3VycmVudCBwYWdlIG51bWJlclxuICAgIGNvbnN0IGxpbWl0ID0gcGFyc2VJbnQocmVxLnF1ZXJ5LmxpbWl0KSB8fCAxMDsgLy8gSXRlbXMgcGVyIHBhZ2VcblxuICAgIGNvbnN0IGFjdGl2aXRpZXMgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwiQWN0aXZpdGllc1wiKS5maW5kKHt9KS50b0FycmF5KCk7XG5cbiAgICAvLyBDYWxjdWxhdGUgc3RhcnRpbmcgYW5kIGVuZGluZyBpbmRpY2VzIGZvciBwYWdpbmF0aW9uXG4gICAgLy8gY29uc3Qgc3RhcnRJbmRleCA9IChwYWdlIC0gMSkgKiBsaW1pdDtcbiAgICAvLyBjb25zdCBlbmRJbmRleCA9IHBhZ2UgKiBsaW1pdDtcblxuICAgIC8vIGNvbnN0IHBhZ2luYXRlZEl0ZW1zID0gYWN0aXZpdGllcy5zbGljZShzdGFydEluZGV4LCBlbmRJbmRleCk7XG5cbiAgICBjb25zb2xlLmxvZyhcImhlbGxvXCIpO1xuICAgIC8vIHJlcy5zZW5kKGFjdGl2aXRpZXMpO1xuICAgIHJlcy5qc29uKHtcbiAgICAgIHRvdGFsSXRlbXM6IGFjdGl2aXRpZXMubGVuZ3RoLFxuICAgICAgY3VycmVudFBhZ2U6IHBhZ2UsXG4gICAgICB0b3RhbFBhZ2VzOiBNYXRoLmNlaWwoYWN0aXZpdGllcy5sZW5ndGggLyBsaW1pdCksXG4gICAgICBhY3Rpdml0aWVzOiBhY3Rpdml0aWVzLFxuICAgIH0pO1xuICB9KTtcblxuICAvL2dldHRpbmcgb25lIGFjdGl2aXR5XG4gIGFwcC5nZXQoXCIvYXBpL2FjdGl2aXRpZXMvOmlkXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IGFjdGl2aXR5ID0gYXdhaXQgZGJcbiAgICAgIC5jb2xsZWN0aW9uKFwiQWN0aXZpdGllc1wiKVxuICAgICAgLmZpbmRPbmUoeyBfaWQ6IG5ldyBPYmplY3RJZChyZXEucGFyYW1zLmlkKSB9KTtcbiAgICByZXMuc2VuZChhY3Rpdml0eSk7XG4gIH0pO1xuXG4gIC8vVXBkYXRlIGFjdGl2aXRpZXNcbiAgYXBwLnB1dChcIi9hcGkvYWN0aXZpdGllcy86aWRcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgYWN0aXZpdHkgPSBhd2FpdCBkYlxuICAgICAgLmNvbGxlY3Rpb24oXCJBY3Rpdml0aWVzXCIpXG4gICAgICAuZmluZE9uZUFuZFJlcGxhY2UoeyBfaWQ6IG5ldyBPYmplY3RJZChyZXEucGFyYW1zLmlkKSB9LCByZXEuYm9keSk7XG4gICAgcmVzLmpzb24oYWN0aXZpdHkpO1xuICB9KTtcblxuICAvL0FkZCBuZXcgYWN0aXZpdGllc1xuICBhcHAucG9zdChcIi9hcGkvYWRkQWN0XCIsdXBsb2Fkcy5zaW5nbGUoXCJmaWxlXCIpLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc29sZS5sb2cocmVxLmJvZHkpO1xuXG4gICAgICBjb25zdCBhY3RkYXRhID0ge1xuICAgICAgICBBY3RfbmFtZTogcmVxLmJvZHkuYWN0TmFtZSxcbiAgICAgICAgTG9jYXRpb246IHJlcS5ib2R5LmxvY2F0aW9uLFxuICAgICAgICBBcmVhOiByZXEuYm9keS5hcmVhLFxuICAgICAgICBEaXN0cmljdDogcmVxLmJvZHkuZGlzdHJpY3QsXG4gICAgICAgIFR5cGU6IHJlcS5ib2R5LnR5cGUuc3BsaXQoXCIsXCIpLFxuICAgICAgICBDYXRlZ29yeTogcmVxLmJvZHkuY2F0ZWdvcnksXG4gICAgICAgIENoYXJnZTogcmVxLmJvZHkuY2hhcmdlLFxuICAgICAgICBJbmZvOiByZXEuYm9keS5pbmZvLFxuICAgICAgICBEZXNjcmlwdGlvbjogcmVxLmJvZHkuZGVzY3JpcHRpb24sXG4gICAgICAgIC8vIGZpbGU6IHJlcS5maWxlLCAvLyBTdG9yZSB0aGUgdXBsb2FkZWQgZmlsZSBpbiB0aGUgYWN0ZGF0YSBvYmplY3RcbiAgICAgICAgQXBwcm92ZWQ6IGZhbHNlLFxuICAgICAgfTtcbiAgICAgIC8vIGNvbnNvbGUubG9nKGFjdGRhdGEuZmlsZSk7XG4gICAgICAvLyBjb25zb2xlLmxvZyhcImZpbGVuYW1lXCIgKyBhY3RkYXRhLmZpbGUuZmlsZW5hbWUpO1xuXG4gICAgICBjb25zdCBleGlzdEFjdCA9IGF3YWl0IGRiXG4gICAgICAgIC5jb2xsZWN0aW9uKFwiQWN0aXZpdGllc1wiKVxuICAgICAgICAuZmluZE9uZSh7IEFjdF9uYW1lOiByZXEuYm9keS5hY3ROYW1lIH0pO1xuICAgICAgaWYgKGV4aXN0QWN0KSB7XG4gICAgICAgIHJlcy5zZW5kKFwiQWN0aXZpdHkgYWxyZWFkeSBleGlzdHMsIHBsZWFzZSB1c2UgYSBkaWZmZXJlbnQgbmFtZVwiKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJBY3Rpdml0aWVzXCIpLmluc2VydE9uZShhY3RkYXRhKTtcbiAgICAgICAgcmVzLnN0YXR1cygyMDEpLnNlbmQoXCJUaGFua3MgZm9yIHlvdXIgcHJvcG9zYWwhXCIpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKFwiQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgcHJvY2Vzc2luZyB0aGUgcmVxdWVzdFwiKTtcbiAgICB9XG4gIH0pO1xuXG4gIC8vRGVsZXRlIGFjdGl2aXR5XG4gIGFwcC5kZWxldGUoXCIvYXBpL2RlbGV0QWN0LzppZFwiLCBhc3luYyhyZXEsIHJlcyk9PntcblxuICAgIGNvbnNvbGUubG9nKCdkZWxldGUgYWN0IHRlc3RpbmcnKVxuICAgIGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJBY3Rpdml0aWVzXCIpLmZpbmRPbmVBbmREZWxldGUoe19pZDogbmV3IE9iamVjdElkKHJlcS5wYXJhbXMuaWQpfSlcblxuICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKFwiQWN0aXZpdHkgRGVsZXRlZCFcIilcbiAgfSlcblxuICAvL0dldCBhbGwgdXNlcnNcbiAgYXBwLmdldChcIi9hcGkvdXNlcnNcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgdXNlcnMgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwiVXNlcnNcIikuZmluZCh7fSkudG9BcnJheSgpO1xuICAgIHJlcy5zZW5kKHVzZXJzKTtcbiAgfSk7XG5cbiAgLy9HZXQgb25lIHVzZXIgZGV0YWlsc1xuICBhcHAuZ2V0KFwiL2FwaS91c2Vycy86aWRcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgLy8gY29uc29sZS5sb2cocmVxLnBhcmFtcy5pZClcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgZGJcbiAgICAgIC5jb2xsZWN0aW9uKFwiVXNlcnNcIilcbiAgICAgIC5maW5kT25lKHsgX2lkOiBuZXcgT2JqZWN0SWQocmVxLnBhcmFtcy5pZCkgfSk7XG4gICAgY29uc29sZS5sb2codXNlci5faWQpO1xuICAgIHJlcy5qc29uKHVzZXIpO1xuICB9KTtcblxuICAvL1VwZGF0ZSB1c2VyIGRldGFpbFxuICBhcHAucHV0KFwiL2FwaS91c2Vycy86aWRcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgdXNlciA9IGF3YWl0IGRiXG4gICAgICAuY29sbGVjdGlvbihcIlVzZXJzXCIpXG4gICAgICAuZmluZE9uZUFuZFJlcGxhY2UoeyBfaWQ6IG5ldyBPYmplY3RJZChyZXEucGFyYW1zLmlkKSB9LCByZXEuYm9keSk7XG4gICAgcmVzLmpzb24odXNlcik7XG4gIH0pO1xuXG4gIC8vQ3JlYXRlIEl0aW5lcmFyeVxuICBhcHAucG9zdChcIi9hcGkvY3JlYXRlXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnNvbGUubG9nKHJlcS5ib2R5KTtcblxuICAgIGNvbnN0IGl0aW5EYXRhID0ge1xuICAgICAgYXV0aG9yOiBuZXcgT2JqZWN0SWQocmVxLmJvZHkuYXV0aG9yKSxcbiAgICAgIGF1dGhvck5hbWU6IHJlcS5ib2R5LmF1dGhvck5hbWUsXG4gICAgICBuYW1lOiByZXEuYm9keS5pbmFtZSxcbiAgICAgIHR5cGU6IHJlcS5ib2R5Lml0eXBlLFxuICAgICAgcGFydGljaXBhbnRzOiByZXEuYm9keS5wYXJ0aWNpcGFudHMsXG4gICAgICBmcm9tOiByZXEuYm9keS5mcm9tLFxuICAgICAgdG86IHJlcS5ib2R5LnRvLFxuICAgICAgZGFpbHlJdGluOiByZXEuYm9keS5kYWlseUl0aW4sXG4gICAgICBpc19wdWJsaWM6IHJlcS5ib2R5LmlzX3B1YmxpYyxcbiAgICAgIGNyZWF0ZWRBdDogcmVxLmJvZHkuY3JlYXRlZERhdGUsXG4gICAgfTtcblxuICAgIGNvbnN0IHBsYW4gPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwiUGxhbnNcIik7XG4gICAgcGxhbi5pbnNlcnRPbmUoaXRpbkRhdGEpO1xuICAgIHJlcy5zdGF0dXMoMjAxKS5zZW5kKFwiQ3JlYXRlZCFcIik7XG4gIH0pO1xuXG4gIC8vVmlldyBBbGwgSXRpbmVyYXkgSGlzdG9yeVxuICBhcHAuZ2V0KFwiL2FwaS9pdGluSGlzdG9yeVwiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCBpdGluID0gYXdhaXQgZGIuY29sbGVjdGlvbihcIlBsYW5zXCIpLmZpbmQoe30pLnRvQXJyYXkoKTtcbiAgICByZXMuc2VuZChpdGluKTtcbiAgfSk7XG5cbiAgLy9WaWV3IEFsbCBJdGluZXJhcnlcbiAgYXBwLmdldChcIi9hcGkvaXRpbkhpc3RvcnlcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgaXRpbkhpc3QgPSBhd2FpdCBkYlxuICAgICAgLmNvbGxlY3Rpb24oXCJQbGFuc1wiKVxuICAgICAgLmZpbmQoeyBpc19wdWJsaWM6IHRydWUgfSlcbiAgICAgIC50b0FycmF5KCk7XG4gICAgcmVzLnNlbmQoaXRpbkhpc3QpO1xuICB9KTtcblxuICAvL1NlbmQgSXRpbmVyYXJ5IERldGFpbHMgdG8gRW1haWxcbiAgYXBwLmdldChcIi9hcGkvc2VuZEl0aW5cIiwgYXN5bmMgZnVuY3Rpb24gKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgLy8gY3JlYXRlIHJldXNhYmxlIHRyYW5zcG9ydGVyIG9iamVjdCB1c2luZyB0aGUgZGVmYXVsdCBTTVRQIHRyYW5zcG9ydFxuICAgIGxldCB0cmFuc3BvcnRlciA9IG5vZGVNYWlsZXIuY3JlYXRlVHJhbnNwb3J0KHtcbiAgICAgIGhvc3Q6IFwic210cC5nbWFpbC5jb21cIixcbiAgICAgIHBvcnQ6IDQ2NSxcbiAgICAgIHNlY3VyZTogdHJ1ZSwgLy8gdHJ1ZSBmb3IgNDY1LCBmYWxzZSBmb3Igb3RoZXIgcG9ydHNcbiAgICAgIGF1dGg6IHtcbiAgICAgICAgdXNlcjogXCJldHJpcG9mZmljaWFsc2l0ZUBnbWFpbC5jb21cIiwgLy8gZ2VuZXJhdGVkIGV0aGVyZWFsIHVzZXJcbiAgICAgICAgcGFzczogXCJldWNtIGtqbnogeG5wdSBsbG9zXCIsIC8vIGdlbmVyYXRlZCBldGhlcmVhbCBwYXNzd29yZFxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIGNvbnN0IGRhdGFBcnJheSA9IEpTT04ucGFyc2UocmVxLnF1ZXJ5Lm1lc3NhZ2UpO1xuXG4gICAgLy8gUmVjdXJzaXZlIGZ1bmN0aW9uIHRvIHByb2Nlc3MgbmVzdGVkIGFycmF5cyBhbmQgb2JqZWN0c1xuICAgIGZ1bmN0aW9uIHByb2Nlc3NOZXN0ZWQoZGF0YSwgZCkge1xuICAgICAgbGV0IHJlc3VsdCA9IFwiXCI7XG5cbiAgICAgIGRhdGEuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShpdGVtKSkge1xuICAgICAgICAgIHJlc3VsdCArPSBwcm9jZXNzTmVzdGVkKGl0ZW0sIGQpOyAvLyBSZWN1cnNpdmVseSBwcm9jZXNzIHRoZSBuZXN0ZWQgYXJyYXlcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgaXRlbSA9PT0gXCJvYmplY3RcIiAmJiBpdGVtICE9PSBudWxsKSB7XG4gICAgICAgICAgLy8gUHJvY2VzcyB0aGUgb2JqZWN0IGFuZCBleHRyYWN0IHRoZSBkZXRhaWxzXG4gICAgICAgICAgY29uc3QgeyBpdGluIH0gPSBpdGVtO1xuICAgICAgICAgIGNvbnN0IHsgYWN0X25hbWUsIGxvY2F0aW9uLCBkYXksIHN0YXJ0VGltZSwgZW5kVGltZSwgbWVtbyB9ID0gaXRpbjtcblxuICAgICAgICAgIC8vIENvbnN0cnVjdCB0aGUgZGVzaXJlZCBvdXRwdXQgdXNpbmcgdGhlIGV4dHJhY3RlZCBkZXRhaWxzXG4gICAgICAgICAgaWYoZGF5PT1kKXtcbiAgICAgICAgICByZXN1bHQgKz0gYFxuICAgICAgICAgICAgPGxpPkFjdGl2aXR5OiAke2FjdF9uYW1lfTwvbGk+XG4gICAgICAgICAgICA8bGk+TG9jYXRpb246ICR7bG9jYXRpb259PC9saT5cbiAgICAgICAgICAgIDxsaT5EYXk6ICR7ZGF5fTwvbGk+XG4gICAgICAgICAgICA8bGk+U3RhcnQgVGltZTogJHtzdGFydFRpbWV9PC9saT5cbiAgICAgICAgICAgIDxsaT5FbmQgVGltZTogJHtlbmRUaW1lfTwvbGk+XG4gICAgICAgICAgICA8bGk+TWVtbzogJHttZW1vfTwvbGk+XG4gICAgICAgICAgICA8aHIgd2lkdGg9XCIxMDAlXCIgc2l6ZT1cIjJcIj5cbiAgICAgICAgICBgO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICBsZXQgbWVzc2FnZUhUTUwgPSBgXG4gICAgPGh0bWw+XG4gICAgPGhlYWQ+XG4gICAgICA8c3R5bGU+XG4gICAgICB0YWJsZSwgdGgsIHRke1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZDtcbiAgICAgIH1cbiAgICAgIDwvc3R5bGU+XG4gICAgPC9oZWFkPlxuICAgIDxib2R5PlxuICAgICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lclwiPlxuICAgICAgICA8aDE+WW91ciBJdGluZXJhcnkgUGxhbjwvaDE+XG4gICAgICAgIDx0YWJsZT5cbiAgICAgICAgICA8dHI+XG4gICAgICAgICAgICA8dGg+RGF5IDE8L3RoPlxuICAgICAgICAgIFxuICAgIGA7XG4gICAgbWVzc2FnZUhUTUwgKz0gcHJvY2Vzc05lc3RlZChkYXRhQXJyYXksMSk7XG5cbiAgICBtZXNzYWdlSFRNTCArPSBgXG4gICAgICAgIDwvdHI+XG4gICAgICAgIDx0cj5cbiAgICAgICAgICAgIDx0aD5EYXkgMjwvdGg+YDtcbiAgICAgICAgICAgIG1lc3NhZ2VIVE1MICs9IHByb2Nlc3NOZXN0ZWQoZGF0YUFycmF5LDIpO1xuXG4gICAgICAgICAgICBtZXNzYWdlSFRNTCArPSBgXG4gICAgICAgIDwvdHI+XG4gICAgICAgIDx0cj5cbiAgICAgICAgICAgIDx0aD5EYXkgMzwvdGg+YDtcbiAgICAgICAgICAgIG1lc3NhZ2VIVE1MICs9IHByb2Nlc3NOZXN0ZWQoZGF0YUFycmF5LDMpO1xuXG4gICAgICAgICAgICBtZXNzYWdlSFRNTCArPSBgXG4gICAgICAgIDwvdHI+XG4gICAgICAgIDx0cj5cbiAgICAgICAgICAgIDx0aD5EYXkgNDwvdGg+YDtcbiAgICAgICAgICAgIG1lc3NhZ2VIVE1MICs9IHByb2Nlc3NOZXN0ZWQoZGF0YUFycmF5LDQpO1xuXG4gICAgICAgICAgICBtZXNzYWdlSFRNTCArPSBgXG4gICAgICAgIDwvdHI+XG4gICAgICAgIDx0cj5cbiAgICAgICAgICAgIDx0aD5EYXkgNTwvdGg+YDtcbiAgICAgICAgICAgIG1lc3NhZ2VIVE1MICs9IHByb2Nlc3NOZXN0ZWQoZGF0YUFycmF5LDUpO1xuXG4gICAgICAgICAgICBtZXNzYWdlSFRNTCArPSBgXG4gICAgICAgIDwvdHI+XG4gICAgICAgIDx0cj5cbiAgICAgICAgICAgIDx0aD5EYXkgNjwvdGg+YDtcbiAgICAgICAgICAgIG1lc3NhZ2VIVE1MICs9IHByb2Nlc3NOZXN0ZWQoZGF0YUFycmF5LDYpO1xuXG4gICAgICAgICAgICBtZXNzYWdlSFRNTCArPSBgXG4gICAgICAgIDwvdHI+XG4gICAgICAgIDx0cj5cbiAgICAgICAgICAgIDx0aD5EYXkgNzwvdGg+YDtcbiAgICAgICAgICAgIG1lc3NhZ2VIVE1MICs9IHByb2Nlc3NOZXN0ZWQoZGF0YUFycmF5LDcpO1xuXG4gICAgICAgICAgICBtZXNzYWdlSFRNTCArPSBgXG4gICAgICAgIDwvdHI+XG4gICAgICAgIDx0cj5cbiAgICAgICAgICAgIDx0aD5EYXkgODwvdGg+YDtcbiAgICAgICAgICAgIG1lc3NhZ2VIVE1MICs9IHByb2Nlc3NOZXN0ZWQoZGF0YUFycmF5LDgpO1xuXG4gICAgICAgICAgICBtZXNzYWdlSFRNTCArPSBgXG4gICAgICAgIDwvdHI+XG4gICAgICAgIDx0cj5cbiAgICAgICAgICAgIDx0aD5EYXkgOTwvdGg+YDtcbiAgICAgICAgICAgIG1lc3NhZ2VIVE1MICs9IHByb2Nlc3NOZXN0ZWQoZGF0YUFycmF5LDkpO1xuXG4gICAgICAgICAgICBtZXNzYWdlSFRNTCArPSBgXG4gICAgICAgIDwvdHI+XG4gICAgICAgIDx0cj5cbiAgICAgICAgICAgIDx0aD5EYXkgMTA8L3RoPmA7XG4gICAgICAgICAgICBtZXNzYWdlSFRNTCArPSBwcm9jZXNzTmVzdGVkKGRhdGFBcnJheSwxMCk7XG5cbiAgICAgICAgICAgIG1lc3NhZ2VIVE1MICs9IGBcbiAgICAgICAgPC90cj5cbiAgICAgICAgPC90YWJsZT5cbiAgICAgIDwvZGl2PlxuICAgIDwvYm9keT5cbiAgPC9odG1sPlxuYDtcblxuICAgIC8vIHNlbmQgbWFpbCB3aXRoIGRlZmluZWQgdHJhbnNwb3J0IG9iamVjdFxuICAgIGxldCBpbmZvID0gYXdhaXQgdHJhbnNwb3J0ZXIuc2VuZE1haWwoe1xuICAgICAgZnJvbTogJ1wiRS1UcmlwIPCfmqhcIiA8ZXRyaXBvZmZpY2lhbHNpdGVAZ21haWwuY29tPicsIC8vIHNlbmRlciBhZGRyZXNzXG4gICAgICB0bzogcmVxLnF1ZXJ5LmVtYWlsLCAvLyBsaXN0IG9mIHJlY2VpdmVyc1xuICAgICAgc3ViamVjdDogXCJZb3VyIEl0aW5lcmFyeSBQbGFuXCIsIC8vIFN1YmplY3QgbGluZVxuICAgICAgdGV4dDogXCJIZWxsbyB3b3JsZD9cIiwgLy8gcGxhaW4gdGV4dCBib2R5XG4gICAgICBodG1sOiBtZXNzYWdlSFRNTCwgLy8gaHRtbCBib2R5XG4gICAgfSk7XG5cbiAgICBjb25zb2xlLmxvZyhyZXEucXVlcnkubWVzc2FnZSk7XG4gICAgcmV0dXJuIHJlcy5qc29uKHtcbiAgICAgIG1lc3NhZ2U6IFwibWFpbCBzZW50XCIsXG4gICAgICBpbmZvOiBpbmZvLFxuICAgICAgcHJldmlld1VybDogbm9kZU1haWxlci5nZXRUZXN0TWVzc2FnZVVybChpbmZvKSxcbiAgICB9KTtcbiAgfSk7XG5cbiAgLy9WaWV3IEl0aW5lcmF5IEhpc3Rvcnkgb2YgYW4gYXV0aG9yXG4gIGFwcC5nZXQoXCIvYXBpL2l0aW5IaXN0b3J5LzppZFwiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCBpdGluSGlzdCA9IGF3YWl0IGRiXG4gICAgICAuY29sbGVjdGlvbihcIlBsYW5zXCIpXG4gICAgICAuZmluZCh7IGF1dGhvcjogbmV3IE9iamVjdElkKHJlcS5wYXJhbXMuaWQpIH0pXG4gICAgICAudG9BcnJheSgpO1xuICAgIHJlcy5zZW5kKGl0aW5IaXN0KTtcbiAgfSk7XG5cbiAgLy9WaWV3IG9uZSBJdGluZXJhcnkgSGlzdG9yeVxuICBhcHAuZ2V0KFwiL2FwaS9oaXN0b3J5LzppZFwiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCBpdGluSGlzdCA9IGF3YWl0IGRiXG4gICAgICAuY29sbGVjdGlvbihcIlBsYW5zXCIpXG4gICAgICAuZmluZE9uZSh7IF9pZDogbmV3IE9iamVjdElkKHJlcS5wYXJhbXMuaWQpIH0pO1xuICAgIC8vIGNvbnNvbGUubG9nKGl0aW5IaXN0KTtcbiAgICByZXMuanNvbihpdGluSGlzdCk7XG4gIH0pO1xuXG4gIC8vUmF0ZSBJdGluZXJhcnlcbiAgYXBwLnB1dChcIi9hcGkvcmF0ZS86aWRcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgcmF0ZVVwZGF0ZSA9IHtcbiAgICAgIGF1dGhvcjogbmV3IE9iamVjdElkKHJlcS5ib2R5LmF1dGhvciksXG4gICAgICBhdXRob3JOYW1lOiByZXEuYm9keS5hdXRob3JOYW1lLFxuICAgICAgbmFtZTogcmVxLmJvZHkubmFtZSxcbiAgICAgIHR5cGU6IHJlcS5ib2R5LnR5cGUsXG4gICAgICBwYXJ0aWNpcGFudHM6IHJlcS5ib2R5LnBhcnRpY2lwYW50cyxcbiAgICAgIGZyb206IHJlcS5ib2R5LmZyb20sXG4gICAgICB0bzogcmVxLmJvZHkudG8sXG4gICAgICBkYWlseUl0aW46IHJlcS5ib2R5LmRhaWx5SXRpbixcbiAgICAgIGlzX3B1YmxpYzogcmVxLmJvZHkuaXNfcHVibGljLFxuICAgICAgc2VsZWN0ZWRSYXRlOiByZXEuYm9keS5zZWxlY3RlZFJhdGUsXG4gICAgICBjb21tZW50OiByZXEuYm9keS5jb21tZW50LFxuICAgIH07XG5cbiAgICBjb25zdCByYXRlID0gYXdhaXQgZGJcbiAgICAgIC5jb2xsZWN0aW9uKFwiUGxhbnNcIilcbiAgICAgIC5maW5kT25lQW5kUmVwbGFjZSh7IF9pZDogbmV3IE9iamVjdElkKHJlcS5wYXJhbXMuaWQpIH0sIHJhdGVVcGRhdGUpO1xuICAgIHJlcy5qc29uKHJhdGUpO1xuICB9KTtcblxuICBhcHAuZGVsZXRlKFwiL2FwaS9kZWxJdGluLzppZFwiLCBhc3luYyhyZXEsIHJlcyk9PntcbiAgICBhd2FpdCBkYi5jb2xsZWN0aW9uKFwiUGxhbnNcIikuZmluZE9uZUFuZERlbGV0ZSh7X2lkOiBuZXcgT2JqZWN0SWQocmVxLnBhcmFtcy5pZCl9KVxuXG4gICAgcmVzLnN0YXR1cygyMDApLnNlbmQoXCJJdGluZXJhcnkgRGVsZXRlZCFcIilcbiAgfSlcblxuICAvL0xvZ2luIFBhZ2VcbiAgYXBwLnBvc3QoXCIvYXBpL2xvZ2luXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGxldCB1c2VyID0gcmVxLmJvZHk7XG4gICAgY29uc29sZS5sb2codXNlcik7XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgY2hlY2sgPSBhd2FpdCBkYlxuICAgICAgICAuY29sbGVjdGlvbihcIlVzZXJzXCIpXG4gICAgICAgIC5maW5kT25lKHsgdXNlcm5hbWU6IHJlcS5ib2R5LnVzZXJuYW1lIH0pO1xuICAgICAgaWYgKCFjaGVjaykge1xuICAgICAgICByZXMuc3RhdHVzKDIwMSkuc2VuZChcIlVzZXIgZG9lcyBub3QgZXhpc3RzIVwiKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgY29uc29sZS5sb2cocmVxLmJvZHkucGFzc3dvcmQpO1xuICAgICAgY29uc29sZS5sb2coY2hlY2sucGFzc3dvcmQpO1xuICAgICAgY29uc3QgcGFzc3dvcmRNYXRjaCA9IGF3YWl0IGJjcnlwdC5jb21wYXJlKFxuICAgICAgICByZXEuYm9keS5wYXNzd29yZCxcbiAgICAgICAgY2hlY2sucGFzc3dvcmRcbiAgICAgICk7XG4gICAgICBpZiAocGFzc3dvcmRNYXRjaCkge1xuICAgICAgICAvL3VzZXIgdG9rZW5cbiAgICAgICAgY29uc3QgdXNlciA9IHtcbiAgICAgICAgICBpZDogY2hlY2suX2lkLFxuICAgICAgICAgIHVzZXJuYW1lOiBjaGVjay51c2VybmFtZSxcbiAgICAgICAgICByb2xlOiBjaGVjay5pc19BZG1pbixcbiAgICAgICAgICBlbWFpbDogY2hlY2suZW1haWwsXG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc3QgdG9rZW4gPSBqd3Quc2lnbih1c2VyLCBcInByb2Nlc3MuZW52LkpXVF9LRVlcIiwge1xuICAgICAgICAgIGV4cGlyZXNJbjogXCIyaFwiLFxuICAgICAgICB9KTtcblxuICAgICAgICB1c2VyLnRva2VuID0gdG9rZW47XG4gICAgICAgIGNvbnNvbGUubG9nKGNoZWNrLl9pZCk7XG4gICAgICAgIGNvbnNvbGUubG9nKHRva2VuKTtcbiAgICAgICAgY29uc29sZS5sb2codXNlci5yb2xlKTtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHVzZXIpO1xuICAgICAgICAvLyByZXMuc3RhdHVzKDIwMCkuc2VuZChcIlN1Y2Nlc3NmdWwgTG9naW5cIiwgdG9rZW4pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzLnN0YXR1cygyMDEpLnNlbmQoXCJXcm9uZyBwYXNzd29yZCFcIik7XG4gICAgICB9XG4gICAgfSBjYXRjaCB7XG4gICAgICByZXMuc3RhdHVzKDIwMSkuc2VuZChcIkluY29ycmVjdCBJbmZvcm1hdGlvblwiKTtcbiAgICB9XG4gIH0pO1xuXG4gIC8vUmVnaXN0ZXIgUGFnZVxuICBhcHAucG9zdChcIi9hcGkvcmVnaXN0ZXJcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc29sZS5sb2cocmVxLmJvZHkpO1xuXG4gICAgY29uc3QgdXNlcmRhdGEgPSB7XG4gICAgICB1c2VybmFtZTogcmVxLmJvZHkudXNlcm5hbWUsXG4gICAgICBwYXNzd29yZDogcmVxLmJvZHkucGFzc3dvcmQsXG4gICAgICBjb25maXJtX3Bhc3N3b3JkOiByZXEuYm9keS5jb25maXJtX3Bhc3N3b3JkLFxuICAgICAgZW1haWw6IHJlcS5ib2R5LmVtYWlsLFxuICAgICAgaXNfQWRtaW46IGZhbHNlLFxuICAgICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgpLnRvTG9jYWxlU3RyaW5nKCksXG4gICAgfTtcblxuICAgIGNvbnN0IGV4aXN0VXNlciA9IGF3YWl0IGRiXG4gICAgICAuY29sbGVjdGlvbihcIlVzZXJzXCIpXG4gICAgICAuZmluZE9uZSh7IHVzZXJuYW1lOiByZXEuYm9keS51c2VybmFtZSB9KTtcbiAgICBpZiAoZXhpc3RVc2VyKSB7XG4gICAgICByZXMuc2VuZChcIlVzZXIgYWxyZWFkeSBleGlzdHMsIHBsZWFzZSB1c2UgYSBkaWZmZXJlbnQgbmFtZVwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy9oYXNoIHBhc3N3b3JkXG4gICAgICBjb25zdCBzYWx0Um91bmRzID0gMTA7XG4gICAgICBjb25zdCBoYXNoZWRQYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5oYXNoKHVzZXJkYXRhLnBhc3N3b3JkLCBzYWx0Um91bmRzKTtcbiAgICAgIHVzZXJkYXRhLnBhc3N3b3JkID0gaGFzaGVkUGFzc3dvcmQ7XG5cbiAgICAgIGNvbnN0IHVzZXJzID0gYXdhaXQgZGIuY29sbGVjdGlvbihcIlVzZXJzXCIpO1xuICAgICAgdXNlcnMuaW5zZXJ0T25lKHVzZXJkYXRhKTtcblxuICAgICAgbGV0IHRyYW5zcG9ydGVyID0gbm9kZU1haWxlci5jcmVhdGVUcmFuc3BvcnQoe1xuICAgICAgICBob3N0OiBcInNtdHAuZ21haWwuY29tXCIsXG4gICAgICAgIHBvcnQ6IDQ2NSxcbiAgICAgICAgc2VjdXJlOiB0cnVlLCAvLyB0cnVlIGZvciA0NjUsIGZhbHNlIGZvciBvdGhlciBwb3J0c1xuICAgICAgICBhdXRoOiB7XG4gICAgICAgICAgdXNlcjogXCJldHJpcG9mZmljaWFsc2l0ZUBnbWFpbC5jb21cIiwgLy8gZ2VuZXJhdGVkIGV0aGVyZWFsIHVzZXJcbiAgICAgICAgICBwYXNzOiBcImV1Y20ga2pueiB4bnB1IGxsb3NcIiwgLy8gZ2VuZXJhdGVkIGV0aGVyZWFsIHBhc3N3b3JkXG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICAgIGF3YWl0IHRyYW5zcG9ydGVyLnNlbmRNYWlsKHtcbiAgICAgICAgZnJvbTogJ1wiRS1UcmlwIPCfmqhcIiA8ZXRyaXBvZmZpY2lhbHNpdGVAZ21haWwuY29tPicsIC8vIHNlbmRlciBhZGRyZXNzXG4gICAgICAgIHRvOiByZXEuYm9keS5lbWFpbCwgLy8gbGlzdCBvZiByZWNlaXZlcnNcbiAgICAgICAgc3ViamVjdDogXCJXZWxjb21lIHRvIEUtdHJpcFwiLCAvLyBTdWJqZWN0IGxpbmVcbiAgICAgICAgdGV4dDogXCJIZWxsbyB3b3JsZD9cIiwgLy8gcGxhaW4gdGV4dCBib2R5XG4gICAgICAgIGh0bWw6IFwiPGgxPldlbGNvbWUgdG8gRS10cmlwISBTdGFydCB0byBwbGFuIHlvdXIgdHJpcCB0byBISyB3aXRoIHVzISEh8J+qhDwvaDE+XCIsIC8vIGh0bWwgYm9keVxuICAgICAgfSk7XG5cbiAgICAgIHJlcy5zdGF0dXMoMjAxKS5zZW5kKFwiQWNjb3VudCBjcmVhdGVkXCIpO1xuXG4gICAgICAvLyBzZW5kIG1haWwgd2l0aCBkZWZpbmVkIHRyYW5zcG9ydCBvYmplY3RcblxuICAgICAgLy8gY29uc29sZS5sb2cocmVxLnF1ZXJ5Lm1lc3NhZ2UpO1xuICAgICAgLy8gcmV0dXJuIHJlcy5qc29uKHtcbiAgICAgIC8vICAgbWVzc2FnZTogXCJtYWlsIHNlbnRcIixcbiAgICAgIC8vICAgaW5mbzogaW5mbyxcbiAgICAgIC8vICAgcHJldmlld1VybDogbm9kZU1haWxlci5nZXRUZXN0TWVzc2FnZVVybChpbmZvKSxcbiAgICAgIC8vIH0pO1xuICAgIH1cbiAgfSk7XG5cbiAgYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coYFNlcnZlciBsaXN0ZW5pbmcgdG8gcG9ydCAke3BvcnR9YCk7XG4gIH0pO1xufVxuXG5zdGFydCgpO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxRQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFJQSxJQUFBQyxRQUFBLEdBQUFELE9BQUE7QUFIQSxJQUFJRSxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxhQUFhLENBQUM7QUFDdkMsSUFBTUcsTUFBTSxHQUFHSCxPQUFPLENBQUMsUUFBUSxDQUFDO0FBQ2hDLElBQU1JLEdBQUcsR0FBR0osT0FBTyxDQUFDLGNBQWMsQ0FBQztBQUVuQyxJQUFJSyxRQUFRLEdBQUdMLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQ0ssUUFBUTtBQUFDLFNBRTVCQyxLQUFLQSxDQUFBO0VBQUEsT0FBQUMsTUFBQSxDQUFBQyxLQUFBLE9BQUFDLFNBQUE7QUFBQTtBQUFBLFNBQUFGLE9BQUE7RUFBQUEsTUFBQSxPQUFBRyxrQkFBQSwyQkFBQUMsWUFBQSxZQUFBQyxJQUFBLENBQXBCLFNBQUFDLFVBQUE7SUFBQSxJQUFBQyxHQUFBLEVBQUFDLE1BQUEsRUFBQUMsSUFBQSxFQUFBQyxHQUFBLEVBQUFDLE1BQUEsRUFBQWIsUUFBQSxFQUFBYyxJQUFBLEVBQUFDLFFBQUEsRUFBQUMsTUFBQSxFQUFBQyxVQUFBLEVBQUFDLElBQUEsRUFBQUMsT0FBQSxFQUFBQyxFQUFBLEVBQUFDLFVBQUE7SUFBQSxPQUFBZixZQUFBLFlBQUFnQixJQUFBLFVBQUFDLFdBQUFDLFVBQUE7TUFBQSxrQkFBQUEsVUFBQSxDQUFBQyxJQUFBLEdBQUFELFVBQUEsQ0FB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","map":{"version":3,"names":["_express","_interopRequireDefault","require","_mongodb","bodyParser","bcrypt","jwt","ObjectId","start","_start","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee21","app","router","port","url","client","path","MAX_SIZE","multer","nodeMailer","html","uploads","db","staticPath","wrap","_callee21$","_context21","prev","next","express","Router","MongoClient","dest","limits","fileSize","connect","use","urlencoded","extended","json","join","__dirname","post","single","req","res","file","get","_ref","_callee","testAccount","transporter","info","_callee$","_context","createTestAccount","sent","createTransport","host","secure","auth","user","pass","sendMail","from","to","subject","text","query","message","console","log","abrupt","previewUrl","getTestMessageUrl","stop","_x","_x2","_x3","_ref2","_callee2","activities","_callee2$","_context2","collection","find","toArray","send","_x4","_x5","_ref3","_callee3","page","limit","_callee3$","_context3","parseInt","totalItems","length","currentPage","totalPages","Math","ceil","_x6","_x7","_ref4","_callee4","activity","_callee4$","_context4","findOne","_id","params","id","_x8","_x9","put","_ref5","_callee5","_callee5$","_context5","findOneAndReplace","body","_x10","_x11","_ref6","_callee6","actdata","existAct","_callee6$","_context6","Act_name","actName","Location","location","Area","area","District","district","Type","type","split","Category","category","Charge","charge","Info","Description","description","Approved","insertOne","status","t0","error","_x12","_x13","_ref7","_callee7","_callee7$","_context7","findOneAndDelete","_x14","_x15","_ref8","_callee8","users","_callee8$","_context8","_x16","_x17","_ref9","_callee9","_callee9$","_context9","_x18","_x19","_ref10","_callee10","_callee10$","_context10","_x20","_x21","_ref11","_callee11","itinData","plan","_callee11$","_context11","author","authorName","name","iname","itype","participants","dailyItin","is_public","createdAt","createdDate","_x22","_x23","_ref12","_callee12","itin","_callee12$","_context12","_x24","_x25","_ref13","_callee13","itinHist","_callee13$","_context13","_x26","_x27","_ref14","_callee14","dataArray","processNested","messageHTML","_callee14$","_context14","_processNested","data","d","result","forEach","item","Array","isArray","_typeof2","act_name","day","startTime","endTime","memo","concat","JSON","parse","email","_x28","_x29","_x30","_ref15","_callee15","_callee15$","_context15","_x31","_x32","_ref16","_callee16","_callee16$","_context16","_x33","_x34","_ref17","_callee17","rateUpdate","rate","_callee17$","_context17","selectedRate","comment","_x35","_x36","_ref18","_callee18","_callee18$","_context18","_x37","_x38","_ref19","_callee19","check","passwordMatch","_user","token","_callee19$","_context19","username","password","compare","role","is_Admin","sign","expiresIn","_x39","_x40","_ref20","_callee20","userdata","existUser","saltRounds","hashedPassword","_callee20$","_context20","confirm_password","Date","toLocaleString","hash","_x41","_x42","listen"],"sourceRoot":"/Users/nicolechan/Desktop/FYP_Test/back-end/src/","sources":["server.js"],"sourcesContent":["import express from \"express\";\nvar bodyParser = require(\"body-parser\");\nconst bcrypt = require(\"bcrypt\");\nconst jwt = require(\"jsonwebtoken\");\nimport { MongoClient } from \"mongodb\";\nvar ObjectId = require(\"mongodb\").ObjectId;\n\nasync function start() {\n  const app = express();\n  const router = express.Router();\n  const port = 3000;\n\n  const url = \"mongodb+srv://nicolecst:7fUWUtSb@cluster0.j43pz4m.mongodb.net/\";\n  const client = new MongoClient(url);\n  const ObjectId = require(\"mongodb\").ObjectId;\n  const path = require(\"path\");\n\n  const MAX_SIZE = 100000000;\n  const multer = require(\"multer\");\n  const nodeMailer = require(\"nodemailer\");\n\n  const html = `\n    <h1>Hello World!!<h1/>\n    <p>Have a nice day!<p/>\n  `;\n\n  const uploads = multer({\n    dest: \"src/uploads\",\n    limits: {\n      fileSize: MAX_SIZE,\n    },\n  });\n\n  await client.connect();\n  const db = client.db(\"itineraryPlanner\");\n\n  app.use(bodyParser.urlencoded({ extended: true }));\n  app.use(bodyParser.json());\n  const staticPath = path.join(__dirname, \"uploads\"); // Replace 'uploads' with the actual relative path to your image directory\n  app.use(express.static(staticPath));\n\n  app.post(\"/api/upload\", uploads.single(\"file\"), (req, res) => {\n    res.json({ file: req.file });\n  });\n\n  //send email\n  app.get(\"/api/sendmail\", async function (req, res, next) {\n    // Generate test SMTP service account from ethereal.email\n    // Only needed if you don't have a real mail account for testing\n    let testAccount = await nodeMailer.createTestAccount();\n\n    // create reusable transporter object using the default SMTP transport\n    let transporter = nodeMailer.createTransport({\n      host: \"smtp.gmail.com\",\n      port: 465,\n      secure: true, // true for 465, false for other ports\n      auth: {\n        user: \"etripofficialsite@gmail.com\", // generated ethereal user\n        pass: \"eucm kjnz xnpu llos\", // generated ethereal password\n      },\n    });\n\n    // send mail with defined transport object\n    let info = await transporter.sendMail({\n      from: '\"Fred Foo 👻\" <etripofficialsite@gmail.com>', // sender address\n      to: \"nicolechan1217st@gmail.com\", // list of receivers\n      subject: \"Hello ✔\", // Subject line\n      text: \"Hello world?\", // plain text body\n      html: req.query.message, // html body\n    });\n\n    console.log(req.query.message);\n    return res.json({\n      message: \"mail sent\",\n      info: info,\n      previewUrl: nodeMailer.getTestMessageUrl(info),\n    });\n  });\n\n  //home page listing all activities\n  app.get(\"/api/\", async (req, res) => {\n    const activities = await db.collection(\"Activities\").find({}).toArray();\n    console.log(\"hello\");\n    res.send(activities);\n  });\n\n  //all activities with pagination\n  app.get(\"/api/allAct\", async (req, res) => {\n    const page = parseInt(req.query.page) || 1; // Current page number\n    const limit = parseInt(req.query.limit) || 10; // Items per page\n\n    const activities = await db.collection(\"Activities\").find({}).toArray();\n\n    // Calculate starting and ending indices for pagination\n    // const startIndex = (page - 1) * limit;\n    // const endIndex = page * limit;\n\n    // const paginatedItems = activities.slice(startIndex, endIndex);\n\n    console.log(\"hello\");\n    // res.send(activities);\n    res.json({\n      totalItems: activities.length,\n      currentPage: page,\n      totalPages: Math.ceil(activities.length / limit),\n      activities: activities,\n    });\n  });\n\n  //getting one activity\n  app.get(\"/api/activities/:id\", async (req, res) => {\n    const activity = await db\n      .collection(\"Activities\")\n      .findOne({ _id: new ObjectId(req.params.id) });\n    res.send(activity);\n  });\n\n  //Update activities\n  app.put(\"/api/activities/:id\", async (req, res) => {\n    const activity = await db\n      .collection(\"Activities\")\n      .findOneAndReplace({ _id: new ObjectId(req.params.id) }, req.body);\n    res.json(activity);\n  });\n\n  //Add new activities\n  app.post(\"/api/addAct\",uploads.single(\"file\"), async (req, res) => {\n    try {\n      console.log(req.body);\n\n      const actdata = {\n        Act_name: req.body.actName,\n        Location: req.body.location,\n        Area: req.body.area,\n        District: req.body.district,\n        Type: req.body.type.split(\",\"),\n        Category: req.body.category,\n        Charge: req.body.charge,\n        Info: req.body.info,\n        Description: req.body.description,\n        // file: req.file, // Store the uploaded file in the actdata object\n        Approved: false,\n      };\n      // console.log(actdata.file);\n      // console.log(\"filename\" + actdata.file.filename);\n\n      const existAct = await db\n        .collection(\"Activities\")\n        .findOne({ Act_name: req.body.actName });\n      if (existAct) {\n        res.send(\"Activity already exists, please use a different name\");\n      } else {\n        await db.collection(\"Activities\").insertOne(actdata);\n        res.status(201).send(\"Thanks for your proposal!\");\n      }\n    } catch (error) {\n      console.error(error);\n      res.status(500).send(\"An error occurred while processing the request\");\n    }\n  });\n\n  //Delete activity\n  app.delete(\"/api/deletAct/:id\", async(req, res)=>{\n\n    console.log('delete act testing')\n    await db.collection(\"Activities\").findOneAndDelete({_id: new ObjectId(req.params.id)})\n\n    res.status(200).send(\"Activity Deleted!\")\n  })\n\n  //Get all users\n  app.get(\"/api/users\", async (req, res) => {\n    const users = await db.collection(\"Users\").find({}).toArray();\n    res.send(users);\n  });\n\n  //Get one user details\n  app.get(\"/api/users/:id\", async (req, res) => {\n    // console.log(req.params.id)\n    const user = await db\n      .collection(\"Users\")\n      .findOne({ _id: new ObjectId(req.params.id) });\n    console.log(user._id);\n    res.json(user);\n  });\n\n  //Update user detail\n  app.put(\"/api/users/:id\", async (req, res) => {\n    const user = await db\n      .collection(\"Users\")\n      .findOneAndReplace({ _id: new ObjectId(req.params.id) }, req.body);\n    res.json(user);\n  });\n\n  //Create Itinerary\n  app.post(\"/api/create\", async (req, res) => {\n    console.log(req.body);\n\n    const itinData = {\n      author: new ObjectId(req.body.author),\n      authorName: req.body.authorName,\n      name: req.body.iname,\n      type: req.body.itype,\n      participants: req.body.participants,\n      from: req.body.from,\n      to: req.body.to,\n      dailyItin: req.body.dailyItin,\n      is_public: req.body.is_public,\n      createdAt: req.body.createdDate,\n    };\n\n    const plan = await db.collection(\"Plans\");\n    plan.insertOne(itinData);\n    res.status(201).send(\"Created!\");\n  });\n\n  //View All Itineray History\n  app.get(\"/api/itinHistory\", async (req, res) => {\n    const itin = await db.collection(\"Plans\").find({}).toArray();\n    res.send(itin);\n  });\n\n  //View All Itinerary\n  app.get(\"/api/itinHistory\", async (req, res) => {\n    const itinHist = await db\n      .collection(\"Plans\")\n      .find({ is_public: true })\n      .toArray();\n    res.send(itinHist);\n  });\n\n  //Send Itinerary Details to Email\n  app.get(\"/api/sendItin\", async function (req, res, next) {\n    // create reusable transporter object using the default SMTP transport\n    let transporter = nodeMailer.createTransport({\n      host: \"smtp.gmail.com\",\n      port: 465,\n      secure: true, // true for 465, false for other ports\n      auth: {\n        user: \"etripofficialsite@gmail.com\", // generated ethereal user\n        pass: \"eucm kjnz xnpu llos\", // generated ethereal password\n      },\n    });\n\n    const dataArray = JSON.parse(req.query.message);\n\n    // Recursive function to process nested arrays and objects\n    function processNested(data, d) {\n      let result = \"\";\n\n      data.forEach((item) => {\n        if (Array.isArray(item)) {\n          result += processNested(item, d); // Recursively process the nested array\n        } else if (typeof item === \"object\" && item !== null) {\n          // Process the object and extract the details\n          const { itin } = item;\n          const { act_name, location, day, startTime, endTime, memo } = itin;\n\n          // Construct the desired output using the extracted details\n          if(day==d){\n          result += `\n            <li>Activity: ${act_name}</li>\n            <li>Location: ${location}</li>\n            <li>Day: ${day}</li>\n            <li>Start Time: ${startTime}</li>\n            <li>End Time: ${endTime}</li>\n            <li>Memo: ${memo}</li>\n            <hr width=\"100%\" size=\"2\">\n          `;\n        }\n      }\n      });\n\n      return result;\n    }\n\n    let messageHTML = `\n    <html>\n    <head>\n      <style>\n      table, th, td{\n        border: 1px solid;\n      }\n      </style>\n    </head>\n    <body>\n      <div class=\"container\">\n        <h1>Your Itinerary Plan</h1>\n        <table>\n          <tr>\n            <th>Day 1</th>\n          \n    `;\n    messageHTML += processNested(dataArray,1);\n\n    messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 2</th>`;\n            messageHTML += processNested(dataArray,2);\n\n            messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 3</th>`;\n            messageHTML += processNested(dataArray,3);\n\n            messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 4</th>`;\n            messageHTML += processNested(dataArray,4);\n\n            messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 5</th>`;\n            messageHTML += processNested(dataArray,5);\n\n            messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 6</th>`;\n            messageHTML += processNested(dataArray,6);\n\n            messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 7</th>`;\n            messageHTML += processNested(dataArray,7);\n\n            messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 8</th>`;\n            messageHTML += processNested(dataArray,8);\n\n            messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 9</th>`;\n            messageHTML += processNested(dataArray,9);\n\n            messageHTML += `\n        </tr>\n        <tr>\n            <th>Day 10</th>`;\n            messageHTML += processNested(dataArray,10);\n\n            messageHTML += `\n        </tr>\n        </table>\n      </div>\n    </body>\n  </html>\n`;\n\n    // send mail with defined transport object\n    let info = await transporter.sendMail({\n      from: '\"E-Trip 🚨\" <etripofficialsite@gmail.com>', // sender address\n      to: req.query.email, // list of receivers\n      subject: \"Your Itinerary Plan\", // Subject line\n      text: \"Hello world?\", // plain text body\n      html: messageHTML, // html body\n    });\n\n    console.log(req.query.message);\n    return res.json({\n      message: \"mail sent\",\n      info: info,\n      previewUrl: nodeMailer.getTestMessageUrl(info),\n    });\n  });\n\n  //View Itineray History of an author\n  app.get(\"/api/itinHistory/:id\", async (req, res) => {\n    const itinHist = await db\n      .collection(\"Plans\")\n      .find({ author: new ObjectId(req.params.id) })\n      .toArray();\n    res.send(itinHist);\n  });\n\n  //View one Itinerary History\n  app.get(\"/api/history/:id\", async (req, res) => {\n    const itinHist = await db\n      .collection(\"Plans\")\n      .findOne({ _id: new ObjectId(req.params.id) });\n    // console.log(itinHist);\n    res.json(itinHist);\n  });\n\n  //Rate Itinerary\n  app.put(\"/api/rate/:id\", async (req, res) => {\n    const rateUpdate = {\n      author: new ObjectId(req.body.author),\n      authorName: req.body.authorName,\n      name: req.body.name,\n      type: req.body.type,\n      participants: req.body.participants,\n      from: req.body.from,\n      to: req.body.to,\n      dailyItin: req.body.dailyItin,\n      is_public: req.body.is_public,\n      selectedRate: req.body.selectedRate,\n      comment: req.body.comment,\n    };\n\n    const rate = await db\n      .collection(\"Plans\")\n      .findOneAndReplace({ _id: new ObjectId(req.params.id) }, rateUpdate);\n    res.json(rate);\n  });\n\n  app.delete(\"/api/delItin/:id\", async(req, res)=>{\n    await db.collection(\"Plans\").findOneAndDelete({_id: new ObjectId(req.params.id)})\n\n    res.status(200).send(\"Itinerary Deleted!\")\n  })\n\n  //Login Page\n  app.post(\"/api/login\", async (req, res) => {\n    let user = req.body;\n    console.log(user);\n\n    try {\n      const check = await db\n        .collection(\"Users\")\n        .findOne({ username: req.body.username });\n      if (!check) {\n        res.status(201).send(\"User does not exists!\");\n        return;\n      }\n      console.log(req.body.password);\n      console.log(check.password);\n      const passwordMatch = await bcrypt.compare(\n        req.body.password,\n        check.password\n      );\n      if (passwordMatch) {\n        //user token\n        const user = {\n          id: check._id,\n          username: check.username,\n          role: check.is_Admin,\n          email: check.email,\n        };\n\n        const token = jwt.sign(user, \"process.env.JWT_KEY\", {\n          expiresIn: \"2h\",\n        });\n\n        user.token = token;\n        console.log(check._id);\n        console.log(token);\n        console.log(user.role);\n        return res.status(200).json(user);\n        // res.status(200).send(\"Successful Login\", token);\n      } else {\n        res.status(201).send(\"Wrong password!\");\n      }\n    } catch {\n      res.status(201).send(\"Incorrect Information\");\n    }\n  });\n\n  //Register Page\n  app.post(\"/api/register\", async (req, res) => {\n    console.log(req.body);\n\n    const userdata = {\n      username: req.body.username,\n      password: req.body.password,\n      confirm_password: req.body.confirm_password,\n      email: req.body.email,\n      is_Admin: false,\n      createdAt: new Date().toLocaleString(),\n    };\n\n    const existUser = await db\n      .collection(\"Users\")\n      .findOne({ username: req.body.username });\n    if (existUser) {\n      res.send(\"User already exists, please use a different name\");\n    } else {\n      //hash password\n      const saltRounds = 10;\n      const hashedPassword = await bcrypt.hash(userdata.password, saltRounds);\n      userdata.password = hashedPassword;\n\n      const users = await db.collection(\"Users\");\n      users.insertOne(userdata);\n\n      let transporter = nodeMailer.createTransport({\n        host: \"smtp.gmail.com\",\n        port: 465,\n        secure: true, // true for 465, false for other ports\n        auth: {\n          user: \"etripofficialsite@gmail.com\", // generated ethereal user\n          pass: \"eucm kjnz xnpu llos\", // generated ethereal password\n        },\n      });\n      await transporter.sendMail({\n        from: '\"E-Trip 🚨\" <etripofficialsite@gmail.com>', // sender address\n        to: req.body.email, // list of receivers\n        subject: \"Welcome to E-trip\", // Subject line\n        text: \"Hello world?\", // plain text body\n        html: \"<h1>Welcome to E-trip! Start to plan your trip to HK with us!!!🪄</h1>\", // html body\n      });\n\n      res.status(201).send(\"Account created\");\n\n      // send mail with defined transport object\n\n      // console.log(req.query.message);\n      // return res.json({\n      //   message: \"mail sent\",\n      //   info: info,\n      //   previewUrl: nodeMailer.getTestMessageUrl(info),\n      // });\n    }\n  });\n\n  app.listen(port, () => {\n    console.log(`Server listening to port ${port}`);\n  });\n}\n\nstart();\n"],"mappings":"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"}},"mtime":1712760634176}}