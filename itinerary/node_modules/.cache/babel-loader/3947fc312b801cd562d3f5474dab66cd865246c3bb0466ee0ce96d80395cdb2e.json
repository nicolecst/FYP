{"ast":null,"code":"// import axios from \"axios\";\n// import Password from 'primevue/password';\nimport { ref } from \"vue\";\n// import jwt_decode from \"jwt-decode\";\nexport default {\n  name: \"LoginView\",\n  components: {},\n  setup() {\n    const credential = ref({});\n    const login = async function () {\n      var response = await fetch(\"/api/login\", {\n        method: \"post\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(credential.value)\n      });\n      if (response.ok) {\n        var data = await response.json();\n        alert(JSON.stringify(data));\n        alert(\"login Successfully.\");\n      } else {\n        alert(response.statusText);\n      }\n    };\n    return {\n      credential,\n      login\n    };\n  },\n  data() {\n    return {\n      users: [],\n      username: \"\",\n      password: \"\"\n    };\n  },\n  //   async created() {\n  //     const response = await axios.get(\"/api/login\");\n  //     const users = response.data;\n  //     this.users = users;\n  //   },\n  methods: {\n    async loginn() {\n      console.log(this.username, this.password);\n      // var response = await axios\n      //   .post(\"/api/login\", {\n      //     users: this.user,\n      //     username: this.username,\n      //     password: this.password,\n      //   })\n      //   .then(function (response) {\n      //     var data = response;\n      //     alert(JSON.stringify(data));\n      //     alert(\"login Successfully.\");\n      //     this.$router.push(\"/\");\n      //   })\n      //   .catch(function (error) {\n      //     alert(error.response);\n      //     console.log(error.response);\n      //   });\n      // console.log(response);\n\n      // if (response) {\n      //         var data = await response\n      //         alert(JSON.stringify(data))\n      //         alert(\"login Successfully.\")\n      //         location.assign(\"/\")\n      //     } else {\n      //         alert(response.statusText)\n      //     }\n\n      // localStorage.setItem('token', response.data.token)\n      // if(response.ok){\n      //     location.assign('/')\n      // }\n    }\n  }\n};","map":{"version":3,"names":["ref","name","components","setup","credential","login","response","fetch","method","headers","body","JSON","stringify","value","ok","data","json","alert","statusText","users","username","password","methods","loginn","console","log"],"sources":["/Users/nicolechan/Desktop/FYP_Test/itinerary/src/pages/LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"bg\">\n    <!-- <h1>Login Page</h1> -->\n    <div class=\"loginForm\">\n      <form @submit.prevent=\"login()\">\n        <h1>E-Trip</h1>\n        <label>Username</label>\n        <input type=\"text\" v-model=\"username\" placeholder=\"username\" />\n\n        <label>Password</label>\n        <input type=\"password\" v-model=\"password\" placeholder=\"password\" />\n\n        <button type=\"submit\" class=\"btn\">Login</button>\n        <p>\n        Don't have an account yet?\n        <router-link to=\"/register\">Register</router-link>\n      </p>\n      </form>\n    </div>\n\n    <!-- <p>{{ users }}</p> -->\n  </div>\n</template>\n\n<script>\n// import axios from \"axios\";\n// import Password from 'primevue/password';\nimport { ref} from \"vue\";\n// import jwt_decode from \"jwt-decode\";\nexport default {\n  name: \"LoginView\",\n  components: {},\n  setup() {\n        const credential = ref({});\n\n        const login = async function () {\n\n            var response = await fetch(\"/api/login\", {\n                method: \"post\",\n                headers: {\n                    \"content-type\": \"application/json\"\n                },\n                body: JSON.stringify(credential.value)\n            });\n\n            if (response.ok) {\n                var data = await response.json()\n                alert(JSON.stringify(data))\n                alert(\"login Successfully.\")\n            } else {\n                alert(response.statusText)\n            }\n        }\n\n        return {\n            credential, login\n        }\n    },\n  data() {\n    return {\n      users: [],\n      username: \"\",\n      password: \"\",\n    };\n  },\n  //   async created() {\n  //     const response = await axios.get(\"/api/login\");\n  //     const users = response.data;\n  //     this.users = users;\n  //   },\n  methods: {\n    async loginn() {\n      console.log(this.username, this.password)\n      // var response = await axios\n      //   .post(\"/api/login\", {\n      //     users: this.user,\n      //     username: this.username,\n      //     password: this.password,\n      //   })\n      //   .then(function (response) {\n      //     var data = response;\n      //     alert(JSON.stringify(data));\n      //     alert(\"login Successfully.\");\n      //     this.$router.push(\"/\");\n      //   })\n      //   .catch(function (error) {\n      //     alert(error.response);\n      //     console.log(error.response);\n      //   });\n      // console.log(response);\n\n      \n      // if (response) {\n      //         var data = await response\n      //         alert(JSON.stringify(data))\n      //         alert(\"login Successfully.\")\n      //         location.assign(\"/\")\n      //     } else {\n      //         alert(response.statusText)\n      //     }\n\n      // localStorage.setItem('token', response.data.token)\n      // if(response.ok){\n      //     location.assign('/')\n      // }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.bg {\n  background-color: #016a70;\n  background-image: url('@/assets/Images/City.jpg');\n  background-size: cover;\n  /* filter:brightness(70%); */\n  margin: auto;\n  display: flex;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n}\n.btn{\n    background-color: #016a70;\n    border-color: #016a70;\n    color:#ffffdd;\n    --bs-btn-line-height: 1.3;\n    margin: 5%;\n}\n\n.btn:hover{\n    background-color: #ffffdd;\n    color: #016a70;\n}\n.loginForm {\n  width: 50%;\n  height: 400px;\n  background-color: #fff;\n  box-shadow: 0 0 20px 10px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  display: flex;\n  overflow: hidden;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  /* margin-top: 30px; */\n}\nlabel{\n    display:block;\n    margin-left: 0;\n    text-align: left;\n    margin-top: 20px;\n    /* font-weight: 600; */\n}\ninput{\n    display: block;\n    margin: 3% auto;\n    width: 100%;\n}\np{\n    display: block;\n}\nh1{\n  font-family: rabikiso;\n}\n</style>\n"],"mappings":"AAyBA;AACA;AACA,SAASA,GAAG,QAAO,KAAK;AACxB;AACA,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE,CAAC,CAAC;EACdC,KAAKA,CAAA,EAAG;IACF,MAAMC,UAAS,GAAIJ,GAAG,CAAC,CAAC,CAAC,CAAC;IAE1B,MAAMK,KAAI,GAAI,eAAAA,CAAA,EAAkB;MAE5B,IAAIC,QAAO,GAAI,MAAMC,KAAK,CAAC,YAAY,EAAE;QACrCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,UAAU,CAACS,KAAK;MACzC,CAAC,CAAC;MAEF,IAAIP,QAAQ,CAACQ,EAAE,EAAE;QACb,IAAIC,IAAG,GAAI,MAAMT,QAAQ,CAACU,IAAI,CAAC;QAC/BC,KAAK,CAACN,IAAI,CAACC,SAAS,CAACG,IAAI,CAAC;QAC1BE,KAAK,CAAC,qBAAqB;MAC/B,OAAO;QACHA,KAAK,CAACX,QAAQ,CAACY,UAAU;MAC7B;IACJ;IAEA,OAAO;MACHd,UAAU;MAAEC;IAChB;EACJ,CAAC;EACHU,IAAIA,CAAA,EAAG;IACL,OAAO;MACLI,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACD;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACbC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,QAAQ,EAAE,IAAI,CAACC,QAAQ;MACxC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAGA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}