{"ast":null,"code":"import axios from \"axios\";\nimport NavBarVue from \"../components/NavBar.vue\";\nimport CardViewVue from \"../components/CardView.vue\";\nexport default {\n  name: \"ActivitiesView\",\n  components: {\n    NavBarVue,\n    CardViewVue\n  },\n  data() {\n    return {\n      activities: [],\n      currentPage: 1,\n      totalPages: 1,\n      itemsPerPage: 10\n    };\n  },\n  methods: {\n    actCat(cat) {\n      return this.activities.filter(a => a.Category === cat);\n    },\n    approved() {\n      return this.activities.filter(a => a.Approved === true);\n    },\n    fetchAct() {\n      axios.get(\"/api/allAct\", {\n        params: {\n          page: this.currentPage,\n          limit: this.itemsPerPage\n        }\n      }).then(response => {\n        // Get the paginated items from the API response\n        this.activities = response.data.activities;\n        this.currentPage = response.data.currentPage;\n        this.totalPages = response.data.totalPages;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.fetchItems();\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.fetchItems();\n      }\n    }\n  },\n  async created() {\n    const response = await axios.get(\"/api/allAct\").then(response => this.activities = response.data);\n\n    // const activities = response.data;\n    // this.activities = activities;\n\n    console.log(response);\n  },\n  computed: {\n    paginatedItems() {\n      return this.items.slice((this.currentPage - 1) * this.itemsPerPage, this.currentPage * this.itemsPerPage);\n    }\n  },\n  mounted() {\n    fetchItems();\n  }\n};","map":{"version":3,"names":["axios","NavBarVue","CardViewVue","name","components","data","activities","currentPage","totalPages","itemsPerPage","methods","actCat","cat","filter","a","Category","approved","Approved","fetchAct","get","params","page","limit","then","response","catch","error","console","previousPage","fetchItems","nextPage","created","log","computed","paginatedItems","items","slice","mounted"],"sources":["/Users/nicolechan/Desktop/FYP_Test/itinerary/src/pages/ActivitiesView.vue"],"sourcesContent":["<template>\n  <div>\n    <NavBarVue />\n    <div class=\"row\" style=\"padding: 20px 20px 0px 20px\">\n      <div class=\"col-md-6\">\n        <h3>All activities</h3>\n      </div>\n      <!-- <div class=\"col-md-6\" style=\"text-align: right\">\n          <a href=\"\">view all</a>\n        </div> -->\n    </div>\n    <div>\n      <button @click=\"previousPage\" :disabled=\"currentPage === 1\">\n        Previous\n      </button>\n      <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">\n        Next\n      </button>\n    </div>\n\n    <div class=\"container\">\n      <CardViewVue\n        v-for=\"activity in approved()\"\n        :key=\"activity._id\"\n        :actname=\"activity.Act_name\"\n        :area=\"activity.Area\"\n        :district=\"activity.District\"\n        :type=\"activity.Type\"\n        :category=\"activity.Category\"\n        :charge=\"activity.Charge\"\n        :act_ID=\"activity._id\"\n      />\n    </div>\n  </div>\n</template>\n\n<script type=\"module\">\nimport axios from \"axios\";\nimport NavBarVue from \"../components/NavBar.vue\";\nimport CardViewVue from \"../components/CardView.vue\";\n\nexport default {\n  name: \"ActivitiesView\",\n  components: {\n    NavBarVue,\n    CardViewVue,\n  },\n  data() {\n    return {\n      activities: [],\n      currentPage: 1,\n      totalPages: 1,\n      itemsPerPage: 10,\n    };\n  },\n  methods: {\n    actCat(cat) {\n      return this.activities.filter((a) => a.Category === cat);\n    },\n    approved() {\n      return this.activities.filter((a) => a.Approved === true);\n    },\n    fetchAct() {\n      axios.get(\"/api/allAct\", {\n        params: {\n          page: this.currentPage,\n          limit: this.itemsPerPage,\n        },\n      }).then((response) => {\n          // Get the paginated items from the API response\n          this.activities = response.data.activities;\n          this.currentPage = response.data.currentPage;\n          this.totalPages = response.data.totalPages;\n        }).catch((error) => {\n          console.error(error);\n        });\n    },\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.fetchItems();\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.fetchItems();\n      }\n    },\n  },\n  async created() {\n    const response = await axios\n      .get(\"/api/allAct\")\n      .then((response) => (this.activities = response.data));\n\n    // const activities = response.data;\n    // this.activities = activities;\n\n    console.log(response);\n  },\n  computed: {\n    paginatedItems() {\n      return this.items.slice(\n        (this.currentPage - 1) * this.itemsPerPage,\n        this.currentPage * this.itemsPerPage\n      );\n    },\n  },\n  mounted() {\n    fetchItems();\n  },\n};\n</script>\n\n<style scoped>\n/* .scrolls {\n    display: flex;\n    flex-wrap: no-wrap;\n    overflow-x: auto;\n    margin: 20px;\n  } */\n\na {\n  color: #016a70;\n}\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n}\n</style>\n"],"mappings":"AAqCA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,SAAQ,MAAO,0BAA0B;AAChD,OAAOC,WAAU,MAAO,4BAA4B;AAEpD,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IACVH,SAAS;IACTC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE,CAAC;MACdC,UAAU,EAAE,CAAC;MACbC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,MAAMA,CAACC,GAAG,EAAE;MACV,OAAO,IAAI,CAACN,UAAU,CAACO,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,QAAO,KAAMH,GAAG,CAAC;IAC1D,CAAC;IACDI,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACV,UAAU,CAACO,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACG,QAAO,KAAM,IAAI,CAAC;IAC3D,CAAC;IACDC,QAAQA,CAAA,EAAG;MACTlB,KAAK,CAACmB,GAAG,CAAC,aAAa,EAAE;QACvBC,MAAM,EAAE;UACNC,IAAI,EAAE,IAAI,CAACd,WAAW;UACtBe,KAAK,EAAE,IAAI,CAACb;QACd;MACF,CAAC,CAAC,CAACc,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACA,IAAI,CAAClB,UAAS,GAAIkB,QAAQ,CAACnB,IAAI,CAACC,UAAU;QAC1C,IAAI,CAACC,WAAU,GAAIiB,QAAQ,CAACnB,IAAI,CAACE,WAAW;QAC5C,IAAI,CAACC,UAAS,GAAIgB,QAAQ,CAACnB,IAAI,CAACG,UAAU;MAC5C,CAAC,CAAC,CAACiB,KAAK,CAAEC,KAAK,IAAK;QAClBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACrB,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;QAClB,IAAI,CAACsB,UAAU,CAAC,CAAC;MACnB;IACF,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACvB,WAAU,GAAI,IAAI,CAACC,UAAU,EAAE;QACtC,IAAI,CAACD,WAAW,EAAE;QAClB,IAAI,CAACsB,UAAU,CAAC,CAAC;MACnB;IACF;EACF,CAAC;EACD,MAAME,OAAOA,CAAA,EAAG;IACd,MAAMP,QAAO,GAAI,MAAMxB,KAAI,CACxBmB,GAAG,CAAC,aAAa,EACjBI,IAAI,CAAEC,QAAQ,IAAM,IAAI,CAAClB,UAAS,GAAIkB,QAAQ,CAACnB,IAAK,CAAC;;IAExD;IACA;;IAEAsB,OAAO,CAACK,GAAG,CAACR,QAAQ,CAAC;EACvB,CAAC;EACDS,QAAQ,EAAE;IACRC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACC,KAAK,CAACC,KAAK,CACrB,CAAC,IAAI,CAAC7B,WAAU,GAAI,CAAC,IAAI,IAAI,CAACE,YAAY,EAC1C,IAAI,CAACF,WAAU,GAAI,IAAI,CAACE,YAC1B,CAAC;IACH;EACF,CAAC;EACD4B,OAAOA,CAAA,EAAG;IACRR,UAAU,CAAC,CAAC;EACd;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}