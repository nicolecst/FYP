{"ast":null,"code":"import NavBar from \"@/components/NavBar.vue\";\nimport PlanCard from \"@/components/PlanCard.vue\";\nimport PopupForm from \"@/components/PopupForm.vue\";\nimport { ref } from \"vue\";\nimport axios from \"axios\";\n// import 'vue-datepicker/index.css';\nexport default {\n  name: \"CreateItinerary\",\n  components: {\n    NavBar,\n    PlanCard,\n    PopupForm\n  },\n  data() {\n    return {\n      step: 1,\n      totalSteps: 3,\n      participants: 1,\n      end: this.end,\n      start: this.start,\n      days: [],\n      SD: \"\"\n    };\n  },\n  methods: {\n    clicked() {\n      var dailyAct = [acty_name = this.act, day = this.day, startTIme = this.sTime, endTime = this.eTime, memo = this.memo];\n      console.log(dailyAct);\n    },\n    nextStep() {\n      this.step++;\n    },\n    previousStep() {\n      this.step--;\n    },\n    addDays(date, days) {\n      // Function to add Days\n      var result = new Date(date);\n      result.setDate(result.getDate() + days);\n      return result.toLocaleString();\n    },\n    weekdays(date, days) {\n      var result = new Date(date);\n      result.setDate(result.getDate() + days);\n      return result.toLocaleString(\"en-US\", {\n        weekday: \"long\"\n      });\n    },\n    async create() {\n      const response = await axios.post(\"/api/create\", {\n        iname: this.iname,\n        itype: this.itype,\n        participants: this.participants,\n        from: this.start,\n        to: this.end\n      });\n      console.log(response);\n      if (response.status == 201) {\n        alert(response.data);\n      } else {\n        alert(response.data);\n      }\n    }\n  },\n  computed: {\n    dateDiff() {\n      let day = new Date(this.end).getTime() - new Date(this.start).getTime();\n      let diff = Math.floor(day / 86400000) + 1;\n      return diff;\n    }\n  },\n  setup() {\n    const act = ref(\"\");\n    const day = ref();\n    const sTime = ref();\n    const eTime = ref();\n    const memo = ref(\"\");\n    const popupTriggers = ref({\n      buttonTrigger: false\n    });\n    const togglePopup = trigger => {\n      popupTriggers.value[trigger] = !popupTriggers.value[trigger];\n    };\n    return {\n      popupTriggers,\n      togglePopup,\n      act,\n      day,\n      sTime,\n      eTime,\n      memo\n    };\n  }\n};","map":{"version":3,"names":["NavBar","PlanCard","PopupForm","ref","axios","name","components","data","step","totalSteps","participants","end","start","days","SD","methods","clicked","dailyAct","acty_name","act","day","startTIme","sTime","endTime","eTime","memo","console","log","nextStep","previousStep","addDays","date","result","Date","setDate","getDate","toLocaleString","weekdays","weekday","create","response","post","iname","itype","from","to","status","alert","computed","dateDiff","getTime","diff","Math","floor","setup","popupTriggers","buttonTrigger","togglePopup","trigger","value"],"sources":["/Users/nicolechan/Desktop/FYP_Test/itinerary/src/pages/CreateItinerary.vue"],"sourcesContent":["<template>\n  <div>\n    <NavBar />\n    <h1>Create itinerary</h1>\n    <div class=\"container\">\n      <form @submit.prevent=\"create()\">\n        <section v-if=\"step == 1\">\n          <h1>Step 1</h1>\n          <div class=\"row mt-2\">\n            <label for=\"\">Itinerary Name</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"give a name for your plan..\"\n              v-model=\"iname\"\n            />\n          </div>\n          <div class=\"row mt-2\">\n            <div class=\"col md-6\">\n              <label for=\"\">Type</label>\n              <select name=\"\" id=\"\" class=\"form-control\" v-model=\"itype\">\n                <option>Choose the trip type..</option>\n                <option>Solo</option>\n                <option>Couple</option>\n                <option>Friends</option>\n                <option>Family</option>\n              </select>\n            </div>\n            <div class=\"col md-6\">\n              <label for=\"\">Number of participants</label>\n              <input\n                type=\"number\"\n                v-model=\"participants\"\n                placeholder=\"how many?\"\n                class=\"form-control\"\n              />\n            </div>\n          </div>\n          <div class=\"row mt-2\">\n            <div class=\"col md-6\">\n              <label for=\"\">From</label>\n              <input\n                required\n                data-format=\"yyyy/mm/dd\"\n                type=\"date\"\n                class=\"form-control\"\n                placeholder=\"start date\"\n                v-model=\"start\"\n              />\n            </div>\n            <div class=\"col md-6\">\n              <label for=\"\">To</label>\n              <input\n                required\n                data-format=\"yyyy/mm/dd\"\n                type=\"date\"\n                class=\"form-control\"\n                placeholder=\"end date\"\n                v-model=\"end\"\n                :min=\"start\"\n              />\n            </div>\n          </div>\n        </section>\n\n        <section v-if=\"step == 2\">\n          <div class=\"addButton\">\n            <div>\n              <h1>Step 2</h1>\n            </div>\n            <div>\n              <button\n                class=\"btn create-btn\"\n                @click.prevent=\"() => togglePopup('buttonTrigger')\"\n              >\n                <span style=\"font-size: 1.5em; margin-right: 5px\">\n                  <font-awesome-icon icon=\"fa-solid fa-calendar-plus\" /> </span\n                >Add activities\n              </button>\n            </div>\n          </div>\n\n          <p>{{ dateDiff }}</p>\n\n          <div class=\"scrolls\">\n            <PlanCard\n              v-for=\"(n, i) in dateDiff\"\n              :key=\"n\"\n              :n=\"n\"\n              :start=\"addDays(start, i)\"\n              :daysOfWeek=\"weekdays(start, i)\"\n            />\n          </div>\n\n          <PopupForm\n            v-if=\"popupTriggers.buttonTrigger\"\n            :togglePopup=\"() => togglePopup('buttonTrigger')\"\n            :n=\"dateDiff\"\n            v-model:act=\"act\"\n            v-model:day=\"day\"\n            v-model:sTime=\"sTime\"\n            v-model:eTime=\"eTime\"\n            v-model:memo=\"memo\"\n            @clicked=\"clicked\"\n          />\n        </section>\n\n        <section v-if=\"step == 3\">\n          <h1>Step 3</h1>\n          <label for=\"\">Confirm</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"confirm..\" />\n        </section>\n        <div class=\"row mt-2\">\n          <div class=\"buttons\">\n            <div>\n              <button\n                v-if=\"step != 1\"\n                @click.prevent=\"previousStep()\"\n                class=\"btn btn-primary\"\n              >\n                Back\n              </button>\n            </div>\n            <div>\n              <button\n                v-if=\"step != totalSteps && start != null && end != null\"\n                @click.prevent=\"nextStep()\"\n                class=\"btn btn-primary\"\n              >\n                Next\n              </button>\n              <button\n                v-if=\"step == totalSteps\"\n                class=\"btn btn-primary\"\n                type=\"submit\"\n              >\n                Create\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport NavBar from \"@/components/NavBar.vue\";\nimport PlanCard from \"@/components/PlanCard.vue\";\nimport PopupForm from \"@/components/PopupForm.vue\";\nimport { ref } from \"vue\";\nimport axios from \"axios\";\n// import 'vue-datepicker/index.css';\nexport default {\n  name: \"CreateItinerary\",\n  components: {\n    NavBar,\n    PlanCard,\n    PopupForm,\n  },\n  data() {\n    return {\n      step: 1,\n      totalSteps: 3,\n      participants: 1,\n      end: this.end,\n      start: this.start,\n      days: [],\n      SD: \"\",\n    };\n  },\n  methods: {\n    clicked() {\n      var dailyAct = [\n        acty_name = this.act, \n        day = this.day, \n        startTIme = this.sTime, \n        endTime = this.eTime, \n        memo = this.memo];\n      console.log(dailyAct);\n    },\n    nextStep() {\n      this.step++;\n    },\n    previousStep() {\n      this.step--;\n    },\n    addDays(date, days) {\n      // Function to add Days\n      var result = new Date(date);\n      result.setDate(result.getDate() + days);\n      return result.toLocaleString();\n    },\n    weekdays(date, days) {\n      var result = new Date(date);\n      result.setDate(result.getDate() + days);\n      return result.toLocaleString(\"en-US\", { weekday: \"long\" });\n    },\n    async create() {\n      const response = await axios.post(\"/api/create\", {\n        iname: this.iname,\n        itype: this.itype,\n        participants: this.participants,\n        from: this.start,\n        to: this.end,\n      });\n\n      console.log(response);\n      if (response.status == 201) {\n        alert(response.data);\n      } else {\n        alert(response.data);\n      }\n    },\n  },\n  computed: {\n    dateDiff() {\n      let day = new Date(this.end).getTime() - new Date(this.start).getTime();\n      let diff = Math.floor(day / 86400000) + 1;\n      return diff;\n    },\n  },\n  setup() {\n    const act = ref(\"\");\n    const day = ref();\n    const sTime = ref();\n    const eTime = ref();\n    const memo = ref(\"\");\n\n    const popupTriggers = ref({\n      buttonTrigger: false,\n    });\n\n    const togglePopup = (trigger) => {\n      popupTriggers.value[trigger] = !popupTriggers.value[trigger];\n    };\n\n    return {\n      popupTriggers,\n      togglePopup,\n      act,\n      day,\n      sTime,\n      eTime,\n      memo,\n    };\n  },\n};\n</script>\n<style scoped>\n.container {\n  width: 80%;\n}\n.buttons {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.slider {\n  display: block;\n  width: 100%;\n  color: #016a70;\n}\n\n.scrolls {\n  display: flex;\n  flex-wrap: no-wrap;\n  overflow-x: auto;\n  margin: 20px;\n}\n\n.addButton {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px;\n}\n.create-btn {\n  border-color: #016a70;\n  color: #016a70;\n}\n.create-btn:hover {\n  border-color: #016a70;\n  background-color: #016a70;\n  color: #ffffdd;\n}\n</style>\n"],"mappings":"AAmJA,OAAOA,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,QAAO,MAAO,2BAA2B;AAChD,OAAOC,SAAQ,MAAO,4BAA4B;AAClD,SAASC,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AACzB;AACA,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE;IACVN,MAAM;IACNC,QAAQ;IACRC;EACF,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC;MACPC,UAAU,EAAE,CAAC;MACbC,YAAY,EAAE,CAAC;MACfC,GAAG,EAAE,IAAI,CAACA,GAAG;MACbC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,IAAI,EAAE,EAAE;MACRC,EAAE,EAAE;IACN,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,OAAOA,CAAA,EAAG;MACR,IAAIC,QAAO,GAAI,CACbC,SAAQ,GAAI,IAAI,CAACC,GAAG,EACpBC,GAAE,GAAI,IAAI,CAACA,GAAG,EACdC,SAAQ,GAAI,IAAI,CAACC,KAAK,EACtBC,OAAM,GAAI,IAAI,CAACC,KAAK,EACpBC,IAAG,GAAI,IAAI,CAACA,IAAI,CAAC;MACnBC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;IACvB,CAAC;IACDW,QAAQA,CAAA,EAAG;MACT,IAAI,CAACpB,IAAI,EAAE;IACb,CAAC;IACDqB,YAAYA,CAAA,EAAG;MACb,IAAI,CAACrB,IAAI,EAAE;IACb,CAAC;IACDsB,OAAOA,CAACC,IAAI,EAAElB,IAAI,EAAE;MAClB;MACA,IAAImB,MAAK,GAAI,IAAIC,IAAI,CAACF,IAAI,CAAC;MAC3BC,MAAM,CAACE,OAAO,CAACF,MAAM,CAACG,OAAO,CAAC,IAAItB,IAAI,CAAC;MACvC,OAAOmB,MAAM,CAACI,cAAc,CAAC,CAAC;IAChC,CAAC;IACDC,QAAQA,CAACN,IAAI,EAAElB,IAAI,EAAE;MACnB,IAAImB,MAAK,GAAI,IAAIC,IAAI,CAACF,IAAI,CAAC;MAC3BC,MAAM,CAACE,OAAO,CAACF,MAAM,CAACG,OAAO,CAAC,IAAItB,IAAI,CAAC;MACvC,OAAOmB,MAAM,CAACI,cAAc,CAAC,OAAO,EAAE;QAAEE,OAAO,EAAE;MAAO,CAAC,CAAC;IAC5D,CAAC;IACD,MAAMC,MAAMA,CAAA,EAAG;MACb,MAAMC,QAAO,GAAI,MAAMpC,KAAK,CAACqC,IAAI,CAAC,aAAa,EAAE;QAC/CC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBjC,YAAY,EAAE,IAAI,CAACA,YAAY;QAC/BkC,IAAI,EAAE,IAAI,CAAChC,KAAK;QAChBiC,EAAE,EAAE,IAAI,CAAClC;MACX,CAAC,CAAC;MAEFe,OAAO,CAACC,GAAG,CAACa,QAAQ,CAAC;MACrB,IAAIA,QAAQ,CAACM,MAAK,IAAK,GAAG,EAAE;QAC1BC,KAAK,CAACP,QAAQ,CAACjC,IAAI,CAAC;MACtB,OAAO;QACLwC,KAAK,CAACP,QAAQ,CAACjC,IAAI,CAAC;MACtB;IACF;EACF,CAAC;EACDyC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,IAAI7B,GAAE,GAAI,IAAIa,IAAI,CAAC,IAAI,CAACtB,GAAG,CAAC,CAACuC,OAAO,CAAC,IAAI,IAAIjB,IAAI,CAAC,IAAI,CAACrB,KAAK,CAAC,CAACsC,OAAO,CAAC,CAAC;MACvE,IAAIC,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACjC,GAAE,GAAI,QAAQ,IAAI,CAAC;MACzC,OAAO+B,IAAI;IACb;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,MAAMnC,GAAE,GAAIhB,GAAG,CAAC,EAAE,CAAC;IACnB,MAAMiB,GAAE,GAAIjB,GAAG,CAAC,CAAC;IACjB,MAAMmB,KAAI,GAAInB,GAAG,CAAC,CAAC;IACnB,MAAMqB,KAAI,GAAIrB,GAAG,CAAC,CAAC;IACnB,MAAMsB,IAAG,GAAItB,GAAG,CAAC,EAAE,CAAC;IAEpB,MAAMoD,aAAY,GAAIpD,GAAG,CAAC;MACxBqD,aAAa,EAAE;IACjB,CAAC,CAAC;IAEF,MAAMC,WAAU,GAAKC,OAAO,IAAK;MAC/BH,aAAa,CAACI,KAAK,CAACD,OAAO,IAAI,CAACH,aAAa,CAACI,KAAK,CAACD,OAAO,CAAC;IAC9D,CAAC;IAED,OAAO;MACLH,aAAa;MACbE,WAAW;MACXtC,GAAG;MACHC,GAAG;MACHE,KAAK;MACLE,KAAK;MACLC;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}