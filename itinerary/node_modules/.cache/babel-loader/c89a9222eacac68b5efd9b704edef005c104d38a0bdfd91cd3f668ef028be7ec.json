{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable valid-jsdoc, jsdoc/require-jsdoc, jsdoc/require-returns, jsdoc/require-param */\nimport { createElement, attributes, addClass, removeClass, detach, classList } from '@syncfusion/ej2-base';\nimport { closest, formatUnit, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nvar CLASSNAMES = {\n  RTL: 'e-rtl',\n  DISABLE: 'e-disabled',\n  INPUT: 'e-input',\n  TEXTAREA: 'e-multi-line-input',\n  INPUTGROUP: 'e-input-group',\n  FLOATINPUT: 'e-float-input',\n  FLOATLINE: 'e-float-line',\n  FLOATTEXT: 'e-float-text',\n  FLOATTEXTCONTENT: 'e-float-text-content',\n  CLEARICON: 'e-clear-icon',\n  CLEARICONHIDE: 'e-clear-icon-hide',\n  LABELTOP: 'e-label-top',\n  LABELBOTTOM: 'e-label-bottom',\n  NOFLOATLABEL: 'e-no-float-label',\n  INPUTCUSTOMTAG: 'e-input-custom-tag',\n  FLOATCUSTOMTAG: 'e-float-custom-tag'\n};\n/**\n * Base for Input creation through util methods.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport var Input;\n(function (Input) {\n  var privateInputObj = {\n    container: null,\n    buttons: [],\n    clearButton: null\n  };\n  var floatType;\n  var isBindClearAction = true;\n  /**\n   * Create a wrapper to input element with multiple span elements and set the basic properties to input based components.\n   * ```\n   * E.g : Input.createInput({ element: element, floatLabelType : \"Auto\", properties: { placeholder: 'Search' } });\n   * ```\n   *\n   */\n  function createInput(args, internalCreateElement) {\n    var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n    var inputObject = {\n      container: null,\n      buttons: [],\n      clearButton: null\n    };\n    floatType = args.floatLabelType;\n    isBindClearAction = args.bindClearAction;\n    if (isNullOrUndefined(args.floatLabelType) || args.floatLabelType === 'Never') {\n      inputObject.container = createInputContainer(args, CLASSNAMES.INPUTGROUP, CLASSNAMES.INPUTCUSTOMTAG, 'span', makeElement);\n      args.element.parentNode.insertBefore(inputObject.container, args.element);\n      addClass([args.element], CLASSNAMES.INPUT);\n      inputObject.container.appendChild(args.element);\n    } else {\n      createFloatingInput(args, inputObject, makeElement);\n    }\n    bindInitialEvent(args);\n    if (!isNullOrUndefined(args.properties) && !isNullOrUndefined(args.properties.showClearButton) && args.properties.showClearButton) {\n      setClearButton(args.properties.showClearButton, args.element, inputObject, true, makeElement);\n      inputObject.clearButton.setAttribute('role', 'button');\n      if (inputObject.container.classList.contains(CLASSNAMES.FLOATINPUT)) {\n        addClass([inputObject.container], CLASSNAMES.INPUTGROUP);\n      }\n    }\n    if (!isNullOrUndefined(args.buttons)) {\n      for (var i = 0; i < args.buttons.length; i++) {\n        inputObject.buttons.push(appendSpan(args.buttons[i], inputObject.container, makeElement));\n      }\n    }\n    if (!isNullOrUndefined(args.element) && args.element.tagName === 'TEXTAREA') {\n      addClass([inputObject.container], CLASSNAMES.TEXTAREA);\n    }\n    validateInputType(inputObject.container, args.element);\n    inputObject = setPropertyValue(args, inputObject);\n    createSpanElement(inputObject.container, makeElement);\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    privateInputObj = inputObject;\n    return inputObject;\n  }\n  Input.createInput = createInput;\n  function bindInitialEvent(args) {\n    checkInputValue(args.floatLabelType, args.element);\n    args.element.addEventListener('focus', function () {\n      var parent = getParentNode(this);\n      if (parent.classList.contains('e-input-group') || parent.classList.contains('e-outline') || parent.classList.contains('e-filled')) {\n        parent.classList.add('e-input-focus');\n      }\n      if (args.floatLabelType === 'Auto') {\n        setTimeout(function () {\n          Input.calculateWidth(args.element, parent);\n        }, 80);\n      }\n    });\n    args.element.addEventListener('blur', function () {\n      var parent = getParentNode(this);\n      if (parent.classList.contains('e-input-group') || parent.classList.contains('e-outline') || parent.classList.contains('e-filled')) {\n        parent.classList.remove('e-input-focus');\n      }\n      if (args.floatLabelType === 'Auto' && args.element.value === '') {\n        setTimeout(function () {\n          Input.calculateWidth(args.element, parent);\n        }, 80);\n      }\n    });\n    args.element.addEventListener('input', function () {\n      checkInputValue(floatType, args.element);\n    });\n  }\n  Input.bindInitialEvent = bindInitialEvent;\n  function checkInputValue(floatLabelType, inputElement) {\n    var inputValue = inputElement.value;\n    var inputParent = inputElement.parentElement;\n    var grandParent = inputParent.parentElement;\n    if (inputValue !== '' && !isNullOrUndefined(inputValue)) {\n      if (inputParent && inputParent.classList.contains('e-input-group')) {\n        inputParent.classList.add('e-valid-input');\n      } else if (grandParent && grandParent.classList.contains('e-input-group')) {\n        grandParent.classList.add('e-valid-input');\n      }\n    } else if (floatLabelType !== 'Always') {\n      if (inputParent && inputParent.classList.contains('e-input-group')) {\n        inputParent.classList.remove('e-valid-input');\n      } else if (grandParent && grandParent.classList.contains('e-input-group')) {\n        grandParent.classList.remove('e-valid-input');\n      }\n    }\n  }\n  function _focusFn() {\n    var label = getParentNode(this).getElementsByClassName('e-float-text')[0];\n    if (!isNullOrUndefined(label)) {\n      addClass([label], CLASSNAMES.LABELTOP);\n      if (label.classList.contains(CLASSNAMES.LABELBOTTOM)) {\n        removeClass([label], CLASSNAMES.LABELBOTTOM);\n      }\n    }\n  }\n  function _blurFn() {\n    var parent = getParentNode(this);\n    if (parent.getElementsByTagName('textarea')[0] ? parent.getElementsByTagName('textarea')[0].value === '' : parent.getElementsByTagName('input')[0].value === '') {\n      var label = parent.getElementsByClassName('e-float-text')[0];\n      if (!isNullOrUndefined(label)) {\n        if (label.classList.contains(CLASSNAMES.LABELTOP)) {\n          removeClass([label], CLASSNAMES.LABELTOP);\n        }\n        addClass([label], CLASSNAMES.LABELBOTTOM);\n      }\n    }\n  }\n  function wireFloatingEvents(element) {\n    element.addEventListener('focus', _focusFn);\n    element.addEventListener('blur', _blurFn);\n  }\n  Input.wireFloatingEvents = wireFloatingEvents;\n  function unwireFloatingEvents(element) {\n    element.removeEventListener('focus', _focusFn);\n    element.removeEventListener('blur', _blurFn);\n  }\n  function createFloatingInput(args, inputObject, internalCreateElement) {\n    var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n    if (args.floatLabelType === 'Auto') {\n      wireFloatingEvents(args.element);\n    }\n    if (isNullOrUndefined(inputObject.container)) {\n      inputObject.container = createInputContainer(args, CLASSNAMES.FLOATINPUT, CLASSNAMES.FLOATCUSTOMTAG, 'div', makeElement);\n      inputObject.container.classList.add(CLASSNAMES.INPUTGROUP);\n      if (args.element.parentNode) {\n        args.element.parentNode.insertBefore(inputObject.container, args.element);\n      }\n    } else {\n      if (!isNullOrUndefined(args.customTag)) {\n        inputObject.container.classList.add(CLASSNAMES.FLOATCUSTOMTAG);\n      }\n      inputObject.container.classList.add(CLASSNAMES.FLOATINPUT);\n    }\n    var floatLinelement = makeElement('span', {\n      className: CLASSNAMES.FLOATLINE\n    });\n    var floatLabelElement = makeElement('label', {\n      className: CLASSNAMES.FLOATTEXT\n    });\n    if (!isNullOrUndefined(args.element.id) && args.element.id !== '') {\n      floatLabelElement.id = 'label_' + args.element.id.replace(/ /g, '_');\n      attributes(args.element, {\n        'aria-labelledby': floatLabelElement.id\n      });\n    }\n    if (!isNullOrUndefined(args.element.placeholder) && args.element.placeholder !== '') {\n      floatLabelElement.innerText = encodePlaceHolder(args.element.placeholder);\n      args.element.removeAttribute('placeholder');\n    }\n    if (!isNullOrUndefined(args.properties) && !isNullOrUndefined(args.properties.placeholder) && args.properties.placeholder !== '') {\n      floatLabelElement.innerText = encodePlaceHolder(args.properties.placeholder);\n    }\n    if (!floatLabelElement.innerText) {\n      inputObject.container.classList.add(CLASSNAMES.NOFLOATLABEL);\n    }\n    if (inputObject.container.classList.contains('e-float-icon-left')) {\n      var inputWrap = inputObject.container.querySelector('.e-input-in-wrap');\n      inputWrap.appendChild(args.element);\n      inputWrap.appendChild(floatLinelement);\n      inputWrap.appendChild(floatLabelElement);\n    } else {\n      inputObject.container.appendChild(args.element);\n      inputObject.container.appendChild(floatLinelement);\n      inputObject.container.appendChild(floatLabelElement);\n    }\n    updateLabelState(args.element.value, floatLabelElement);\n    if (args.floatLabelType === 'Always') {\n      if (floatLabelElement.classList.contains(CLASSNAMES.LABELBOTTOM)) {\n        removeClass([floatLabelElement], CLASSNAMES.LABELBOTTOM);\n      }\n      addClass([floatLabelElement], CLASSNAMES.LABELTOP);\n    }\n    if (args.floatLabelType === 'Auto') {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      args.element.addEventListener('input', function (event) {\n        validateLabel(args.element, args.floatLabelType);\n      });\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      args.element.addEventListener('blur', function (event) {\n        validateLabel(args.element, args.floatLabelType);\n      });\n    }\n    if (!isNullOrUndefined(args.element.getAttribute('id'))) {\n      floatLabelElement.setAttribute('for', args.element.getAttribute('id'));\n    }\n  }\n  function checkFloatLabelType(type, container) {\n    if (type === 'Always' && container.classList.contains('e-outline')) {\n      container.classList.add('e-valid-input');\n    }\n  }\n  function setPropertyValue(args, inputObject) {\n    if (!isNullOrUndefined(args.properties)) {\n      for (var _i = 0, _a = Object.keys(args.properties); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        switch (prop) {\n          case 'cssClass':\n            setCssClass(args.properties.cssClass, [inputObject.container]);\n            checkFloatLabelType(args.floatLabelType, inputObject.container);\n            break;\n          case 'enabled':\n            setEnabled(args.properties.enabled, args.element, args.floatLabelType, inputObject.container);\n            break;\n          case 'enableRtl':\n            setEnableRtl(args.properties.enableRtl, [inputObject.container]);\n            break;\n          case 'placeholder':\n            setPlaceholder(args.properties.placeholder, args.element);\n            break;\n          case 'readonly':\n            setReadonly(args.properties.readonly, args.element);\n            break;\n        }\n      }\n    }\n    return inputObject;\n  }\n  function updateIconState(value, button, readonly) {\n    if (!isNullOrUndefined(button)) {\n      if (value && !readonly) {\n        removeClass([button], CLASSNAMES.CLEARICONHIDE);\n      } else {\n        addClass([button], CLASSNAMES.CLEARICONHIDE);\n      }\n    }\n  }\n  function updateLabelState(value, label, element) {\n    if (element === void 0) {\n      element = null;\n    }\n    if (value) {\n      addClass([label], CLASSNAMES.LABELTOP);\n      if (label.classList.contains(CLASSNAMES.LABELBOTTOM)) {\n        removeClass([label], CLASSNAMES.LABELBOTTOM);\n      }\n    } else {\n      var isNotFocused = element != null ? element !== document.activeElement : true;\n      if (isNotFocused) {\n        if (label.classList.contains(CLASSNAMES.LABELTOP)) {\n          removeClass([label], CLASSNAMES.LABELTOP);\n        }\n        addClass([label], CLASSNAMES.LABELBOTTOM);\n      }\n    }\n  }\n  function getParentNode(element) {\n    var parentNode = isNullOrUndefined(element.parentNode) ? element : element.parentNode;\n    if (parentNode && parentNode.classList.contains('e-input-in-wrap')) {\n      parentNode = parentNode.parentNode;\n    }\n    return parentNode;\n  }\n  /**\n   * To create clear button.\n   */\n  function createClearButton(element, inputObject, initial, internalCreateElement) {\n    var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n    var button = makeElement('span', {\n      className: CLASSNAMES.CLEARICON\n    });\n    var container = inputObject.container;\n    if (!isNullOrUndefined(initial)) {\n      container.appendChild(button);\n    } else {\n      var baseElement = inputObject.container.classList.contains(CLASSNAMES.FLOATINPUT) ? inputObject.container.querySelector('.' + CLASSNAMES.FLOATTEXT) : element;\n      baseElement.insertAdjacentElement('afterend', button);\n    }\n    addClass([button], CLASSNAMES.CLEARICONHIDE);\n    wireClearBtnEvents(element, button, container);\n    button.setAttribute('aria-label', 'close');\n    return button;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  function wireClearBtnEvents(element, button, container) {\n    if (isBindClearAction === undefined || isBindClearAction) {\n      button.addEventListener('click', function (event) {\n        if (!(element.classList.contains(CLASSNAMES.DISABLE) || element.readOnly)) {\n          event.preventDefault();\n          if (element !== document.activeElement) {\n            element.focus();\n          }\n          element.value = '';\n          addClass([button], CLASSNAMES.CLEARICONHIDE);\n        }\n      });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    element.addEventListener('input', function (event) {\n      updateIconState(element.value, button);\n    });\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    element.addEventListener('focus', function (event) {\n      updateIconState(element.value, button, element.readOnly);\n    });\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    element.addEventListener('blur', function (event) {\n      setTimeout(function () {\n        if (!isNullOrUndefined(button)) {\n          addClass([button], CLASSNAMES.CLEARICONHIDE);\n          button = !isNullOrUndefined(element) && element.classList.contains('e-combobox') ? null : button;\n        }\n      }, 200);\n    });\n  }\n  Input.wireClearBtnEvents = wireClearBtnEvents;\n  function destroy() {\n    privateInputObj = null;\n  }\n  Input.destroy = destroy;\n  function validateLabel(element, floatLabelType) {\n    var parent = getParentNode(element);\n    if (parent.classList.contains(CLASSNAMES.FLOATINPUT) && floatLabelType === 'Auto') {\n      var label = getParentNode(element).getElementsByClassName('e-float-text')[0];\n      updateLabelState(element.value, label, element);\n    }\n  }\n  /**\n   * To create input box contianer.\n   */\n  function createInputContainer(args, className, tagClass, tag, internalCreateElement) {\n    var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n    var container;\n    if (!isNullOrUndefined(args.customTag)) {\n      container = makeElement(args.customTag, {\n        className: className\n      });\n      container.classList.add(tagClass);\n    } else {\n      container = makeElement(tag, {\n        className: className\n      });\n    }\n    container.classList.add('e-control-wrapper');\n    return container;\n  }\n  function encodePlaceHolder(placeholder) {\n    var result = '';\n    if (!isNullOrUndefined(placeholder) && placeholder !== '') {\n      var spanEle = document.createElement('span');\n      spanEle.innerHTML = '<input  placeholder=\"' + placeholder + '\"/>';\n      var hiddenInput = spanEle.children[0];\n      result = hiddenInput.placeholder;\n    }\n    return result;\n  }\n  /**\n   * Sets the value to the input element.\n   * ```\n   * E.g : Input.setValue('content', element, \"Auto\", true );\n   * ```\n   *\n   * @param {string} value - Specify the value of the input element.\n   * @param {HTMLInputElement | HTMLTextAreaElement} element - The element on which the specified value is updated.\n   * @param {string} floatLabelType - Specify the float label type of the input element.\n   * @param {boolean} clearButton - Boolean value to specify whether the clear icon is enabled / disabled on the input.\n   */\n  function setValue(value, element, floatLabelType, clearButton) {\n    element.value = value;\n    if (floatLabelType === 'Auto' && value === '') {\n      calculateWidth(element, element.parentElement);\n    }\n    if (!isNullOrUndefined(floatLabelType) && floatLabelType === 'Auto') {\n      validateLabel(element, floatLabelType);\n    }\n    if (!isNullOrUndefined(clearButton) && clearButton) {\n      var parentElement = getParentNode(element);\n      if (!isNullOrUndefined(parentElement)) {\n        var button = parentElement.getElementsByClassName(CLASSNAMES.CLEARICON)[0];\n        if (!isNullOrUndefined(button)) {\n          if (element.value && !isNullOrUndefined(parentElement) && parentElement.classList.contains('e-input-focus')) {\n            removeClass([button], CLASSNAMES.CLEARICONHIDE);\n          } else {\n            addClass([button], CLASSNAMES.CLEARICONHIDE);\n          }\n        }\n      }\n    }\n    checkInputValue(floatLabelType, element);\n  }\n  Input.setValue = setValue;\n  /**\n   * Sets the single or multiple cssClass to wrapper of input element.\n   * ```\n   * E.g : Input.setCssClass('e-custom-class', [element]);\n   * ```\n   *\n   * @param {string} cssClass - Css class names which are needed to add.\n   * @param {Element[] | NodeList} elements - The elements which are needed to add / remove classes.\n   * @param {string} oldClass\n   * - Css class names which are needed to remove. If old classes are need to remove, can give this optional parameter.\n   */\n  function setCssClass(cssClass, elements, oldClass) {\n    if (!isNullOrUndefined(oldClass) && oldClass !== '') {\n      removeClass(elements, oldClass.split(' '));\n    }\n    if (!isNullOrUndefined(cssClass) && cssClass !== '') {\n      addClass(elements, cssClass.split(' '));\n    }\n  }\n  Input.setCssClass = setCssClass;\n  /**\n   * Set the width to the placeholder when it overflows on the button such as spinbutton, clearbutton, icon etc\n   * ```\n   * E.g : Input.calculateWidth(element, container);\n   * ```\n   *\n   * @param {any} element - Input element which is need to add.\n   * @param {HTMLElement} container - The parent element which is need to get the label span to calculate width\n   */\n  function calculateWidth(element, container, moduleName) {\n    var elementWidth = moduleName === 'multiselect' ? element : element.clientWidth - parseInt(getComputedStyle(element, null).getPropertyValue('padding-left'), 10);\n    if (!isNullOrUndefined(container.getElementsByClassName('e-float-text-content')[0])) {\n      if (container.getElementsByClassName('e-float-text-content')[0].classList.contains('e-float-text-overflow')) {\n        container.getElementsByClassName('e-float-text-content')[0].classList.remove('e-float-text-overflow');\n      }\n      if (elementWidth < container.getElementsByClassName('e-float-text-content')[0].clientWidth || elementWidth === container.getElementsByClassName('e-float-text-content')[0].clientWidth) {\n        container.getElementsByClassName('e-float-text-content')[0].classList.add('e-float-text-overflow');\n      }\n    }\n  }\n  Input.calculateWidth = calculateWidth;\n  /**\n   * Set the width to the wrapper of input element.\n   * ```\n   * E.g : Input.setWidth('200px', container);\n   * ```\n   *\n   * @param {number | string} width - Width value which is need to add.\n   * @param {HTMLElement} container - The element on which the width is need to add.\n   */\n  function setWidth(width, container) {\n    if (typeof width === 'number') {\n      container.style.width = formatUnit(width);\n    } else if (typeof width === 'string') {\n      container.style.width = width.match(/px|%|em/) ? width : formatUnit(width);\n    }\n    calculateWidth(container.firstChild, container);\n  }\n  Input.setWidth = setWidth;\n  /**\n   * Set the placeholder attribute to the input element.\n   * ```\n   * E.g : Input.setPlaceholder('Search here', element);\n   * ```\n   *\n   * @param {string} placeholder - Placeholder value which is need to add.\n   * @param {HTMLInputElement | HTMLTextAreaElement} element - The element on which the placeholder is need to add.\n   */\n  function setPlaceholder(placeholder, element) {\n    placeholder = encodePlaceHolder(placeholder);\n    var parentElement = getParentNode(element);\n    if (parentElement.classList.contains(CLASSNAMES.FLOATINPUT)) {\n      if (!isNullOrUndefined(placeholder) && placeholder !== '') {\n        parentElement.getElementsByClassName('e-float-text-content')[0] ? parentElement.getElementsByClassName(CLASSNAMES.FLOATTEXT)[0].children[0].textContent = placeholder : parentElement.getElementsByClassName(CLASSNAMES.FLOATTEXT)[0].textContent = placeholder;\n        parentElement.classList.remove(CLASSNAMES.NOFLOATLABEL);\n        element.removeAttribute('placeholder');\n      } else {\n        parentElement.classList.add(CLASSNAMES.NOFLOATLABEL);\n        parentElement.getElementsByClassName('e-float-text-content')[0] ? parentElement.getElementsByClassName(CLASSNAMES.FLOATTEXT)[0].children[0].textContent = '' : parentElement.getElementsByClassName(CLASSNAMES.FLOATTEXT)[0].textContent = '';\n      }\n    } else {\n      if (!isNullOrUndefined(placeholder) && placeholder !== '') {\n        attributes(element, {\n          'placeholder': placeholder\n        });\n      } else {\n        element.removeAttribute('placeholder');\n      }\n    }\n  }\n  Input.setPlaceholder = setPlaceholder;\n  /**\n   * Set the read only attribute to the input element\n   * ```\n   * E.g : Input.setReadonly(true, element);\n   * ```\n   *\n   * @param {boolean} isReadonly\n   * - Boolean value to specify whether to set read only. Setting \"True\" value enables read only.\n   * @param {HTMLInputElement | HTMLTextAreaElement} element\n   * - The element which is need to enable read only.\n   */\n  function setReadonly(isReadonly, element, floatLabelType) {\n    if (isReadonly) {\n      attributes(element, {\n        readonly: ''\n      });\n    } else {\n      element.removeAttribute('readonly');\n    }\n    if (!isNullOrUndefined(floatLabelType)) {\n      validateLabel(element, floatLabelType);\n    }\n  }\n  Input.setReadonly = setReadonly;\n  /**\n   * Displays the element direction from right to left when its enabled.\n   * ```\n   * E.g : Input.setEnableRtl(true, [inputObj.container]);\n   * ```\n   *\n   * @param {boolean} isRtl\n   * - Boolean value to specify whether to set RTL. Setting \"True\" value enables the RTL mode.\n   * @param {Element[] | NodeList} elements\n   * - The elements that are needed to enable/disable RTL.\n   */\n  function setEnableRtl(isRtl, elements) {\n    if (isRtl) {\n      addClass(elements, CLASSNAMES.RTL);\n    } else {\n      removeClass(elements, CLASSNAMES.RTL);\n    }\n  }\n  Input.setEnableRtl = setEnableRtl;\n  /**\n   * Enables or disables the given input element.\n   * ```\n   * E.g : Input.setEnabled(false, element);\n   * ```\n   *\n   * @param {boolean} isEnable\n   * - Boolean value to specify whether to enable or disable.\n   * @param {HTMLInputElement | HTMLTextAreaElement} element\n   * - Element to be enabled or disabled.\n   */\n  function setEnabled(isEnable, element, floatLabelType, inputContainer) {\n    var disabledAttrs = {\n      'disabled': 'disabled',\n      'aria-disabled': 'true'\n    };\n    var considerWrapper = isNullOrUndefined(inputContainer) ? false : true;\n    if (isEnable) {\n      element.classList.remove(CLASSNAMES.DISABLE);\n      removeAttributes(disabledAttrs, element);\n      if (considerWrapper) {\n        removeClass([inputContainer], CLASSNAMES.DISABLE);\n      }\n    } else {\n      element.classList.add(CLASSNAMES.DISABLE);\n      addAttributes(disabledAttrs, element);\n      if (considerWrapper) {\n        addClass([inputContainer], CLASSNAMES.DISABLE);\n      }\n    }\n    if (!isNullOrUndefined(floatLabelType)) {\n      validateLabel(element, floatLabelType);\n    }\n  }\n  Input.setEnabled = setEnabled;\n  function setClearButton(isClear, element, inputObject, initial, internalCreateElement) {\n    var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n    if (isClear) {\n      inputObject.clearButton = createClearButton(element, inputObject, initial, makeElement);\n    } else {\n      remove(inputObject.clearButton);\n      inputObject.clearButton = null;\n    }\n  }\n  Input.setClearButton = setClearButton;\n  /**\n   * Removing the multiple attributes from the given element such as \"disabled\",\"id\" , etc.\n   * ```\n   * E.g : Input.removeAttributes({ 'disabled': 'disabled', 'aria-disabled': 'true' }, element);\n   * ```\n   *\n   * @param {string} attrs\n   * - Array of attributes which are need to removed from the element.\n   * @param {HTMLInputElement | HTMLElement} element\n   * - Element on which the attributes are needed to be removed.\n   */\n  function removeAttributes(attrs, element) {\n    for (var _i = 0, _a = Object.keys(attrs); _i < _a.length; _i++) {\n      var key = _a[_i];\n      var parentElement = getParentNode(element);\n      if (key === 'disabled') {\n        element.classList.remove(CLASSNAMES.DISABLE);\n      }\n      if (key === 'disabled' && parentElement.classList.contains(CLASSNAMES.INPUTGROUP)) {\n        parentElement.classList.remove(CLASSNAMES.DISABLE);\n      }\n      if (key === 'placeholder' && parentElement.classList.contains(CLASSNAMES.FLOATINPUT)) {\n        parentElement.getElementsByClassName(CLASSNAMES.FLOATTEXT)[0].textContent = '';\n      } else {\n        element.removeAttribute(key);\n      }\n    }\n  }\n  Input.removeAttributes = removeAttributes;\n  /**\n   * Adding the multiple attributes to the given element such as \"disabled\",\"id\" , etc.\n   * ```\n   * E.g : Input.addAttributes({ 'id': 'inputpopup' }, element);\n   * ```\n   *\n   * @param {string} attrs\n   * - Array of attributes which is added to element.\n   * @param {HTMLInputElement | HTMLElement} element\n   * - Element on which the attributes are needed to be added.\n   */\n  function addAttributes(attrs, element) {\n    for (var _i = 0, _a = Object.keys(attrs); _i < _a.length; _i++) {\n      var key = _a[_i];\n      var parentElement = getParentNode(element);\n      if (key === 'disabled') {\n        element.classList.add(CLASSNAMES.DISABLE);\n      }\n      if (key === 'disabled' && parentElement.classList.contains(CLASSNAMES.INPUTGROUP)) {\n        parentElement.classList.add(CLASSNAMES.DISABLE);\n      }\n      if (key === 'placeholder' && parentElement.classList.contains(CLASSNAMES.FLOATINPUT)) {\n        parentElement.getElementsByClassName(CLASSNAMES.FLOATTEXT)[0].textContent = attrs[\"\" + key];\n      } else {\n        element.setAttribute(key, attrs[\"\" + key]);\n      }\n    }\n  }\n  Input.addAttributes = addAttributes;\n  function removeFloating(input) {\n    var container = input.container;\n    if (!isNullOrUndefined(container) && container.classList.contains(CLASSNAMES.FLOATINPUT)) {\n      var inputEle = container.querySelector('textarea') ? container.querySelector('textarea') : container.querySelector('input');\n      var placeholder = container.querySelector('.' + CLASSNAMES.FLOATTEXT).textContent;\n      var clearButton = container.querySelector('.e-clear-icon') !== null;\n      detach(container.querySelector('.' + CLASSNAMES.FLOATLINE));\n      detach(container.querySelector('.' + CLASSNAMES.FLOATTEXT));\n      classList(container, [CLASSNAMES.INPUTGROUP], [CLASSNAMES.FLOATINPUT]);\n      unwireFloatingEvents(inputEle);\n      attributes(inputEle, {\n        'placeholder': placeholder\n      });\n      inputEle.classList.add(CLASSNAMES.INPUT);\n      if (!clearButton && inputEle.tagName === 'INPUT') {\n        inputEle.removeAttribute('required');\n      }\n    }\n  }\n  Input.removeFloating = removeFloating;\n  function addFloating(input, type, placeholder, internalCreateElement) {\n    var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n    var container = closest(input, '.' + CLASSNAMES.INPUTGROUP);\n    floatType = type;\n    if (type !== 'Never') {\n      var customTag = container.tagName;\n      customTag = customTag !== 'DIV' && customTag !== 'SPAN' ? customTag : null;\n      var args = {\n        element: input,\n        floatLabelType: type,\n        customTag: customTag,\n        properties: {\n          placeholder: placeholder\n        }\n      };\n      var iconEle = container.querySelector('.e-clear-icon');\n      var inputObj = {\n        container: container\n      };\n      input.classList.remove(CLASSNAMES.INPUT);\n      createFloatingInput(args, inputObj, makeElement);\n      createSpanElement(inputObj.container, makeElement);\n      calculateWidth(args.element, inputObj.container);\n      var isPrependIcon = container.classList.contains('e-float-icon-left');\n      if (isNullOrUndefined(iconEle)) {\n        if (isPrependIcon) {\n          var inputWrap = container.querySelector('.e-input-in-wrap');\n          iconEle = inputWrap.querySelector('.e-input-group-icon');\n        } else {\n          iconEle = container.querySelector('.e-input-group-icon');\n        }\n      }\n      if (isNullOrUndefined(iconEle)) {\n        if (isPrependIcon) {\n          iconEle = container.querySelector('.e-input-group-icon');\n        }\n      } else {\n        var floatLine = container.querySelector('.' + CLASSNAMES.FLOATLINE);\n        var floatText = container.querySelector('.' + CLASSNAMES.FLOATTEXT);\n        var wrapper = isPrependIcon ? container.querySelector('.e-input-in-wrap') : container;\n        wrapper.insertBefore(input, iconEle);\n        wrapper.insertBefore(floatLine, iconEle);\n        wrapper.insertBefore(floatText, iconEle);\n      }\n    }\n    checkFloatLabelType(type, input.parentElement);\n  }\n  Input.addFloating = addFloating;\n  /**\n   * Create the span inside the label and add the label text into the span textcontent\n   * ```\n   * E.g : Input.createSpanElement(inputObject, makeElement);\n   * ```\n   *\n   * @param {InputObject} inputObject\n   * - Element which is need to get the label\n   * @param {createElementParams} makeElement\n   * - Element which is need to create the span\n   */\n  function createSpanElement(inputObject, makeElement) {\n    if (inputObject.classList.contains('e-outline') && inputObject.getElementsByClassName('e-float-text')[0]) {\n      var labelSpanElement = makeElement('span', {\n        className: CLASSNAMES.FLOATTEXTCONTENT\n      });\n      labelSpanElement.innerHTML = inputObject.getElementsByClassName('e-float-text')[0].innerHTML;\n      inputObject.getElementsByClassName('e-float-text')[0].innerHTML = '';\n      inputObject.getElementsByClassName('e-float-text')[0].appendChild(labelSpanElement);\n    }\n  }\n  Input.createSpanElement = createSpanElement;\n  /**\n   * Enable or Disable the ripple effect on the icons inside the Input. Ripple effect is only applicable for material theme.\n   * ```\n   * E.g : Input.setRipple(true, [inputObjects]);\n   * ```\n   *\n   * @param {boolean} isRipple\n   * - Boolean value to specify whether to enable the ripple effect.\n   * @param {InputObject[]} inputObj\n   * - Specify the collection of input objects.\n   */\n  function setRipple(isRipple, inputObj) {\n    for (var i = 0; i < inputObj.length; i++) {\n      _internalRipple(isRipple, inputObj[parseInt(i.toString())].container);\n    }\n  }\n  Input.setRipple = setRipple;\n  function _internalRipple(isRipple, container, button) {\n    var argsButton = [];\n    argsButton.push(button);\n    var buttons = isNullOrUndefined(button) ? container.querySelectorAll('.e-input-group-icon') : argsButton;\n    if (isRipple && buttons.length > 0) {\n      for (var index = 0; index < buttons.length; index++) {\n        buttons[parseInt(index.toString())].addEventListener('mousedown', _onMouseDownRipple, false);\n        buttons[parseInt(index.toString())].addEventListener('mouseup', _onMouseUpRipple, false);\n      }\n    } else if (buttons.length > 0) {\n      for (var index = 0; index < buttons.length; index++) {\n        buttons[parseInt(index.toString())].removeEventListener('mousedown', _onMouseDownRipple, this);\n        buttons[parseInt(index.toString())].removeEventListener('mouseup', _onMouseUpRipple, this);\n      }\n    }\n  }\n  function _onMouseRipple(container, button) {\n    if (!container.classList.contains('e-disabled') && !container.querySelector('input').readOnly) {\n      button.classList.add('e-input-btn-ripple');\n    }\n  }\n  function _onMouseDownRipple() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    var ele = this;\n    var parentEle = this.parentElement;\n    while (!parentEle.classList.contains('e-input-group')) {\n      parentEle = parentEle.parentElement;\n    }\n    _onMouseRipple(parentEle, ele);\n  }\n  function _onMouseUpRipple() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    var ele = this;\n    setTimeout(function () {\n      ele.classList.remove('e-input-btn-ripple');\n    }, 500);\n  }\n  function createIconEle(iconClass, makeElement) {\n    var button = makeElement('span', {\n      className: iconClass\n    });\n    button.classList.add('e-input-group-icon');\n    return button;\n  }\n  /**\n   * Creates a new span element with the given icons added and append it in container element.\n   * ```\n   * E.g : Input.addIcon('append', 'e-icon-spin', inputObj.container, inputElement);\n   * ```\n   *\n   * @param {string} position - Specify the icon placement on the input.Possible values are append and prepend.\n   * @param {string | string[]} icons - Icon classes which are need to add to the span element which is going to created.\n   * Span element acts as icon or button element for input.\n   * @param {HTMLElement} container - The container on which created span element is going to append.\n   * @param {HTMLElement} input - The inputElement on which created span element is going to prepend.\n   */\n  /* eslint-disable @typescript-eslint/indent */\n  function addIcon(position, icons, container, input, internalCreate) {\n    /* eslint-enable @typescript-eslint/indent */\n    var result = typeof icons === 'string' ? icons.split(',') : icons;\n    if (position.toLowerCase() === 'append') {\n      for (var _i = 0, result_1 = result; _i < result_1.length; _i++) {\n        var icon = result_1[_i];\n        appendSpan(icon, container, internalCreate);\n      }\n    } else {\n      for (var _a = 0, result_2 = result; _a < result_2.length; _a++) {\n        var icon = result_2[_a];\n        prependSpan(icon, container, input, internalCreate);\n      }\n    }\n    if (container.getElementsByClassName('e-input-group-icon')[0] && container.getElementsByClassName('e-float-text-overflow')[0]) {\n      container.getElementsByClassName('e-float-text-overflow')[0].classList.add('e-icon');\n    }\n  }\n  Input.addIcon = addIcon;\n  /**\n   * Creates a new span element with the given icons added and prepend it in input element.\n   * ```\n   * E.g : Input.prependSpan('e-icon-spin', inputObj.container, inputElement);\n   * ```\n   *\n   * @param {string} iconClass - Icon classes which are need to add to the span element which is going to created.\n   * Span element acts as icon or button element for input.\n   * @param {HTMLElement} container - The container on which created span element is going to append.\n   * @param {HTMLElement} inputElement - The inputElement on which created span element is going to prepend.\n   */\n  /* eslint-disable @typescript-eslint/indent */\n  function prependSpan(iconClass, container, inputElement, internalCreateElement) {\n    /* eslint-enable @typescript-eslint/indent */\n    var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n    var button = createIconEle(iconClass, makeElement);\n    container.classList.add('e-float-icon-left');\n    var innerWrapper = container.querySelector('.e-input-in-wrap');\n    if (isNullOrUndefined(innerWrapper)) {\n      innerWrapper = makeElement('span', {\n        className: 'e-input-in-wrap'\n      });\n      inputElement.parentNode.insertBefore(innerWrapper, inputElement);\n      var result = container.querySelectorAll(inputElement.tagName + ' ~ *');\n      innerWrapper.appendChild(inputElement);\n      for (var i = 0; i < result.length; i++) {\n        var element = result[parseInt(i.toString())];\n        var parentElement = innerWrapper.parentElement;\n        if (!element.classList.contains('e-float-line') || !(parentElement && parentElement.classList.contains('e-filled')) && parentElement) {\n          innerWrapper.appendChild(element);\n        }\n      }\n    }\n    innerWrapper.parentNode.insertBefore(button, innerWrapper);\n    _internalRipple(true, container, button);\n    return button;\n  }\n  Input.prependSpan = prependSpan;\n  /**\n   * Creates a new span element with the given icons added and append it in container element.\n   * ```\n   * E.g : Input.appendSpan('e-icon-spin', inputObj.container);\n   * ```\n   *\n   * @param {string} iconClass - Icon classes which are need to add to the span element which is going to created.\n   * Span element acts as icon or button element for input.\n   * @param {HTMLElement} container - The container on which created span element is going to append.\n   */\n  function appendSpan(iconClass, container, internalCreateElement) {\n    var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n    var button = createIconEle(iconClass, makeElement);\n    var wrap = container.classList.contains('e-float-icon-left') ? container.querySelector('.e-input-in-wrap') : container;\n    wrap.appendChild(button);\n    _internalRipple(true, container, button);\n    return button;\n  }\n  Input.appendSpan = appendSpan;\n  function validateInputType(containerElement, input) {\n    if (input.type === 'hidden') {\n      containerElement.classList.add('e-hidden');\n    } else if (containerElement.classList.contains('e-hidden')) {\n      containerElement.classList.remove('e-hidden');\n    }\n  }\n  Input.validateInputType = validateInputType;\n})(Input || (Input = {}));\n/* eslint-enable valid-jsdoc, jsdoc/require-jsdoc, jsdoc/require-returns, jsdoc/require-param */","map":{"version":3,"names":["createElement","attributes","addClass","removeClass","detach","classList","closest","formatUnit","isNullOrUndefined","remove","CLASSNAMES","RTL","DISABLE","INPUT","TEXTAREA","INPUTGROUP","FLOATINPUT","FLOATLINE","FLOATTEXT","FLOATTEXTCONTENT","CLEARICON","CLEARICONHIDE","LABELTOP","LABELBOTTOM","NOFLOATLABEL","INPUTCUSTOMTAG","FLOATCUSTOMTAG","Input","privateInputObj","container","buttons","clearButton","floatType","isBindClearAction","createInput","args","internalCreateElement","makeElement","inputObject","floatLabelType","bindClearAction","createInputContainer","element","parentNode","insertBefore","appendChild","createFloatingInput","bindInitialEvent","properties","showClearButton","setClearButton","setAttribute","contains","i","length","push","appendSpan","tagName","validateInputType","setPropertyValue","createSpanElement","checkInputValue","addEventListener","parent","getParentNode","add","setTimeout","calculateWidth","value","inputElement","inputValue","inputParent","parentElement","grandParent","_focusFn","label","getElementsByClassName","_blurFn","getElementsByTagName","wireFloatingEvents","unwireFloatingEvents","removeEventListener","customTag","floatLinelement","className","floatLabelElement","id","replace","placeholder","innerText","encodePlaceHolder","removeAttribute","inputWrap","querySelector","updateLabelState","event","validateLabel","getAttribute","checkFloatLabelType","type","_i","_a","Object","keys","prop","setCssClass","cssClass","setEnabled","enabled","setEnableRtl","enableRtl","setPlaceholder","setReadonly","readonly","updateIconState","button","isNotFocused","document","activeElement","createClearButton","initial","baseElement","insertAdjacentElement","wireClearBtnEvents","undefined","readOnly","preventDefault","focus","destroy","tagClass","tag","result","spanEle","innerHTML","hiddenInput","children","setValue","elements","oldClass","split","moduleName","elementWidth","clientWidth","parseInt","getComputedStyle","getPropertyValue","setWidth","width","style","match","firstChild","textContent","isReadonly","isRtl","isEnable","inputContainer","disabledAttrs","considerWrapper","removeAttributes","addAttributes","isClear","attrs","key","removeFloating","input","inputEle","addFloating","iconEle","inputObj","isPrependIcon","floatLine","floatText","wrapper","labelSpanElement","setRipple","isRipple","_internalRipple","toString","argsButton","querySelectorAll","index","_onMouseDownRipple","_onMouseUpRipple","_onMouseRipple","ele","parentEle","createIconEle","iconClass","addIcon","position","icons","internalCreate","toLowerCase","result_1","icon","result_2","prependSpan","innerWrapper","wrap","containerElement"],"sources":["/Users/nicolechan/Desktop/FYP_Test/node_modules/@syncfusion/ej2-inputs/src/input/input.js"],"sourcesContent":["/* eslint-disable valid-jsdoc, jsdoc/require-jsdoc, jsdoc/require-returns, jsdoc/require-param */\nimport { createElement, attributes, addClass, removeClass, detach, classList } from '@syncfusion/ej2-base';\nimport { closest, formatUnit, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nvar CLASSNAMES = {\n    RTL: 'e-rtl',\n    DISABLE: 'e-disabled',\n    INPUT: 'e-input',\n    TEXTAREA: 'e-multi-line-input',\n    INPUTGROUP: 'e-input-group',\n    FLOATINPUT: 'e-float-input',\n    FLOATLINE: 'e-float-line',\n    FLOATTEXT: 'e-float-text',\n    FLOATTEXTCONTENT: 'e-float-text-content',\n    CLEARICON: 'e-clear-icon',\n    CLEARICONHIDE: 'e-clear-icon-hide',\n    LABELTOP: 'e-label-top',\n    LABELBOTTOM: 'e-label-bottom',\n    NOFLOATLABEL: 'e-no-float-label',\n    INPUTCUSTOMTAG: 'e-input-custom-tag',\n    FLOATCUSTOMTAG: 'e-float-custom-tag'\n};\n/**\n * Base for Input creation through util methods.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport var Input;\n(function (Input) {\n    var privateInputObj = {\n        container: null,\n        buttons: [],\n        clearButton: null\n    };\n    var floatType;\n    var isBindClearAction = true;\n    /**\n     * Create a wrapper to input element with multiple span elements and set the basic properties to input based components.\n     * ```\n     * E.g : Input.createInput({ element: element, floatLabelType : \"Auto\", properties: { placeholder: 'Search' } });\n     * ```\n     *\n     */\n    function createInput(args, internalCreateElement) {\n        var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n        var inputObject = { container: null, buttons: [], clearButton: null };\n        floatType = args.floatLabelType;\n        isBindClearAction = args.bindClearAction;\n        if (isNullOrUndefined(args.floatLabelType) || args.floatLabelType === 'Never') {\n            inputObject.container = createInputContainer(args, CLASSNAMES.INPUTGROUP, CLASSNAMES.INPUTCUSTOMTAG, 'span', makeElement);\n            args.element.parentNode.insertBefore(inputObject.container, args.element);\n            addClass([args.element], CLASSNAMES.INPUT);\n            inputObject.container.appendChild(args.element);\n        }\n        else {\n            createFloatingInput(args, inputObject, makeElement);\n        }\n        bindInitialEvent(args);\n        if (!isNullOrUndefined(args.properties) && !isNullOrUndefined(args.properties.showClearButton) &&\n            args.properties.showClearButton) {\n            setClearButton(args.properties.showClearButton, args.element, inputObject, true, makeElement);\n            inputObject.clearButton.setAttribute('role', 'button');\n            if (inputObject.container.classList.contains(CLASSNAMES.FLOATINPUT)) {\n                addClass([inputObject.container], CLASSNAMES.INPUTGROUP);\n            }\n        }\n        if (!isNullOrUndefined(args.buttons)) {\n            for (var i = 0; i < args.buttons.length; i++) {\n                inputObject.buttons.push(appendSpan(args.buttons[i], inputObject.container, makeElement));\n            }\n        }\n        if (!isNullOrUndefined(args.element) && args.element.tagName === 'TEXTAREA') {\n            addClass([inputObject.container], CLASSNAMES.TEXTAREA);\n        }\n        validateInputType(inputObject.container, args.element);\n        inputObject = setPropertyValue(args, inputObject);\n        createSpanElement(inputObject.container, makeElement);\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        privateInputObj = inputObject;\n        return inputObject;\n    }\n    Input.createInput = createInput;\n    function bindInitialEvent(args) {\n        checkInputValue(args.floatLabelType, args.element);\n        args.element.addEventListener('focus', function () {\n            var parent = getParentNode(this);\n            if (parent.classList.contains('e-input-group') || parent.classList.contains('e-outline')\n                || parent.classList.contains('e-filled')) {\n                parent.classList.add('e-input-focus');\n            }\n            if (args.floatLabelType === 'Auto') {\n                setTimeout(function () {\n                    Input.calculateWidth(args.element, parent);\n                }, 80);\n            }\n        });\n        args.element.addEventListener('blur', function () {\n            var parent = getParentNode(this);\n            if (parent.classList.contains('e-input-group') || parent.classList.contains('e-outline')\n                || parent.classList.contains('e-filled')) {\n                parent.classList.remove('e-input-focus');\n            }\n            if (args.floatLabelType === 'Auto' && args.element.value === '') {\n                setTimeout(function () {\n                    Input.calculateWidth(args.element, parent);\n                }, 80);\n            }\n        });\n        args.element.addEventListener('input', function () {\n            checkInputValue(floatType, args.element);\n        });\n    }\n    Input.bindInitialEvent = bindInitialEvent;\n    function checkInputValue(floatLabelType, inputElement) {\n        var inputValue = inputElement.value;\n        var inputParent = inputElement.parentElement;\n        var grandParent = inputParent.parentElement;\n        if (inputValue !== '' && !isNullOrUndefined(inputValue)) {\n            if (inputParent && inputParent.classList.contains('e-input-group')) {\n                inputParent.classList.add('e-valid-input');\n            }\n            else if (grandParent && grandParent.classList.contains('e-input-group')) {\n                grandParent.classList.add('e-valid-input');\n            }\n        }\n        else if (floatLabelType !== 'Always') {\n            if (inputParent && inputParent.classList.contains('e-input-group')) {\n                inputParent.classList.remove('e-valid-input');\n            }\n            else if (grandParent && grandParent.classList.contains('e-input-group')) {\n                grandParent.classList.remove('e-valid-input');\n            }\n        }\n    }\n    function _focusFn() {\n        var label = getParentNode(this).getElementsByClassName('e-float-text')[0];\n        if (!isNullOrUndefined(label)) {\n            addClass([label], CLASSNAMES.LABELTOP);\n            if (label.classList.contains(CLASSNAMES.LABELBOTTOM)) {\n                removeClass([label], CLASSNAMES.LABELBOTTOM);\n            }\n        }\n    }\n    function _blurFn() {\n        var parent = getParentNode(this);\n        if ((parent.getElementsByTagName('textarea')[0]) ? parent.getElementsByTagName('textarea')[0].value === '' :\n            parent.getElementsByTagName('input')[0].value === '') {\n            var label = parent.getElementsByClassName('e-float-text')[0];\n            if (!isNullOrUndefined(label)) {\n                if (label.classList.contains(CLASSNAMES.LABELTOP)) {\n                    removeClass([label], CLASSNAMES.LABELTOP);\n                }\n                addClass([label], CLASSNAMES.LABELBOTTOM);\n            }\n        }\n    }\n    function wireFloatingEvents(element) {\n        element.addEventListener('focus', _focusFn);\n        element.addEventListener('blur', _blurFn);\n    }\n    Input.wireFloatingEvents = wireFloatingEvents;\n    function unwireFloatingEvents(element) {\n        element.removeEventListener('focus', _focusFn);\n        element.removeEventListener('blur', _blurFn);\n    }\n    function createFloatingInput(args, inputObject, internalCreateElement) {\n        var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n        if (args.floatLabelType === 'Auto') {\n            wireFloatingEvents(args.element);\n        }\n        if (isNullOrUndefined(inputObject.container)) {\n            inputObject.container = createInputContainer(args, CLASSNAMES.FLOATINPUT, CLASSNAMES.FLOATCUSTOMTAG, 'div', makeElement);\n            inputObject.container.classList.add(CLASSNAMES.INPUTGROUP);\n            if (args.element.parentNode) {\n                args.element.parentNode.insertBefore(inputObject.container, args.element);\n            }\n        }\n        else {\n            if (!isNullOrUndefined(args.customTag)) {\n                inputObject.container.classList.add(CLASSNAMES.FLOATCUSTOMTAG);\n            }\n            inputObject.container.classList.add(CLASSNAMES.FLOATINPUT);\n        }\n        var floatLinelement = makeElement('span', { className: CLASSNAMES.FLOATLINE });\n        var floatLabelElement = makeElement('label', { className: CLASSNAMES.FLOATTEXT });\n        if (!isNullOrUndefined(args.element.id) && args.element.id !== '') {\n            floatLabelElement.id = 'label_' + args.element.id.replace(/ /g, '_');\n            attributes(args.element, { 'aria-labelledby': floatLabelElement.id });\n        }\n        if (!isNullOrUndefined(args.element.placeholder) && args.element.placeholder !== '') {\n            floatLabelElement.innerText = encodePlaceHolder(args.element.placeholder);\n            args.element.removeAttribute('placeholder');\n        }\n        if (!isNullOrUndefined(args.properties) && !isNullOrUndefined(args.properties.placeholder) &&\n            args.properties.placeholder !== '') {\n            floatLabelElement.innerText = encodePlaceHolder(args.properties.placeholder);\n        }\n        if (!floatLabelElement.innerText) {\n            inputObject.container.classList.add(CLASSNAMES.NOFLOATLABEL);\n        }\n        if (inputObject.container.classList.contains('e-float-icon-left')) {\n            var inputWrap = inputObject.container.querySelector('.e-input-in-wrap');\n            inputWrap.appendChild(args.element);\n            inputWrap.appendChild(floatLinelement);\n            inputWrap.appendChild(floatLabelElement);\n        }\n        else {\n            inputObject.container.appendChild(args.element);\n            inputObject.container.appendChild(floatLinelement);\n            inputObject.container.appendChild(floatLabelElement);\n        }\n        updateLabelState(args.element.value, floatLabelElement);\n        if (args.floatLabelType === 'Always') {\n            if (floatLabelElement.classList.contains(CLASSNAMES.LABELBOTTOM)) {\n                removeClass([floatLabelElement], CLASSNAMES.LABELBOTTOM);\n            }\n            addClass([floatLabelElement], CLASSNAMES.LABELTOP);\n        }\n        if (args.floatLabelType === 'Auto') {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            args.element.addEventListener('input', function (event) {\n                validateLabel(args.element, args.floatLabelType);\n            });\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            args.element.addEventListener('blur', function (event) {\n                validateLabel(args.element, args.floatLabelType);\n            });\n        }\n        if (!isNullOrUndefined(args.element.getAttribute('id'))) {\n            floatLabelElement.setAttribute('for', args.element.getAttribute('id'));\n        }\n    }\n    function checkFloatLabelType(type, container) {\n        if (type === 'Always' && container.classList.contains('e-outline')) {\n            container.classList.add('e-valid-input');\n        }\n    }\n    function setPropertyValue(args, inputObject) {\n        if (!isNullOrUndefined(args.properties)) {\n            for (var _i = 0, _a = Object.keys(args.properties); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'cssClass':\n                        setCssClass(args.properties.cssClass, [inputObject.container]);\n                        checkFloatLabelType(args.floatLabelType, inputObject.container);\n                        break;\n                    case 'enabled':\n                        setEnabled(args.properties.enabled, args.element, args.floatLabelType, inputObject.container);\n                        break;\n                    case 'enableRtl':\n                        setEnableRtl(args.properties.enableRtl, [inputObject.container]);\n                        break;\n                    case 'placeholder':\n                        setPlaceholder(args.properties.placeholder, args.element);\n                        break;\n                    case 'readonly':\n                        setReadonly(args.properties.readonly, args.element);\n                        break;\n                }\n            }\n        }\n        return inputObject;\n    }\n    function updateIconState(value, button, readonly) {\n        if (!isNullOrUndefined(button)) {\n            if (value && !readonly) {\n                removeClass([button], CLASSNAMES.CLEARICONHIDE);\n            }\n            else {\n                addClass([button], CLASSNAMES.CLEARICONHIDE);\n            }\n        }\n    }\n    function updateLabelState(value, label, element) {\n        if (element === void 0) { element = null; }\n        if (value) {\n            addClass([label], CLASSNAMES.LABELTOP);\n            if (label.classList.contains(CLASSNAMES.LABELBOTTOM)) {\n                removeClass([label], CLASSNAMES.LABELBOTTOM);\n            }\n        }\n        else {\n            var isNotFocused = element != null ? element !== document.activeElement : true;\n            if (isNotFocused) {\n                if (label.classList.contains(CLASSNAMES.LABELTOP)) {\n                    removeClass([label], CLASSNAMES.LABELTOP);\n                }\n                addClass([label], CLASSNAMES.LABELBOTTOM);\n            }\n        }\n    }\n    function getParentNode(element) {\n        var parentNode = isNullOrUndefined(element.parentNode) ? element\n            : element.parentNode;\n        if (parentNode && parentNode.classList.contains('e-input-in-wrap')) {\n            parentNode = parentNode.parentNode;\n        }\n        return parentNode;\n    }\n    /**\n     * To create clear button.\n     */\n    function createClearButton(element, inputObject, initial, internalCreateElement) {\n        var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n        var button = makeElement('span', { className: CLASSNAMES.CLEARICON });\n        var container = inputObject.container;\n        if (!isNullOrUndefined(initial)) {\n            container.appendChild(button);\n        }\n        else {\n            var baseElement = inputObject.container.classList.contains(CLASSNAMES.FLOATINPUT) ?\n                inputObject.container.querySelector('.' + CLASSNAMES.FLOATTEXT) : element;\n            baseElement.insertAdjacentElement('afterend', button);\n        }\n        addClass([button], CLASSNAMES.CLEARICONHIDE);\n        wireClearBtnEvents(element, button, container);\n        button.setAttribute('aria-label', 'close');\n        return button;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function wireClearBtnEvents(element, button, container) {\n        if (isBindClearAction === undefined || isBindClearAction) {\n            button.addEventListener('click', function (event) {\n                if (!(element.classList.contains(CLASSNAMES.DISABLE) || element.readOnly)) {\n                    event.preventDefault();\n                    if (element !== document.activeElement) {\n                        element.focus();\n                    }\n                    element.value = '';\n                    addClass([button], CLASSNAMES.CLEARICONHIDE);\n                }\n            });\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        element.addEventListener('input', function (event) {\n            updateIconState(element.value, button);\n        });\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        element.addEventListener('focus', function (event) {\n            updateIconState(element.value, button, element.readOnly);\n        });\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        element.addEventListener('blur', function (event) {\n            setTimeout(function () {\n                if (!isNullOrUndefined(button)) {\n                    addClass([button], CLASSNAMES.CLEARICONHIDE);\n                    button = !isNullOrUndefined(element) && element.classList.contains('e-combobox') ? null : button;\n                }\n            }, 200);\n        });\n    }\n    Input.wireClearBtnEvents = wireClearBtnEvents;\n    function destroy() {\n        privateInputObj = null;\n    }\n    Input.destroy = destroy;\n    function validateLabel(element, floatLabelType) {\n        var parent = getParentNode(element);\n        if (parent.classList.contains(CLASSNAMES.FLOATINPUT) && floatLabelType === 'Auto') {\n            var label = getParentNode(element).getElementsByClassName('e-float-text')[0];\n            updateLabelState(element.value, label, element);\n        }\n    }\n    /**\n     * To create input box contianer.\n     */\n    function createInputContainer(args, className, tagClass, tag, internalCreateElement) {\n        var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n        var container;\n        if (!isNullOrUndefined(args.customTag)) {\n            container = makeElement(args.customTag, { className: className });\n            container.classList.add(tagClass);\n        }\n        else {\n            container = makeElement(tag, { className: className });\n        }\n        container.classList.add('e-control-wrapper');\n        return container;\n    }\n    function encodePlaceHolder(placeholder) {\n        var result = '';\n        if (!isNullOrUndefined(placeholder) && placeholder !== '') {\n            var spanEle = document.createElement('span');\n            spanEle.innerHTML = '<input  placeholder=\"' + placeholder + '\"/>';\n            var hiddenInput = (spanEle.children[0]);\n            result = hiddenInput.placeholder;\n        }\n        return result;\n    }\n    /**\n     * Sets the value to the input element.\n     * ```\n     * E.g : Input.setValue('content', element, \"Auto\", true );\n     * ```\n     *\n     * @param {string} value - Specify the value of the input element.\n     * @param {HTMLInputElement | HTMLTextAreaElement} element - The element on which the specified value is updated.\n     * @param {string} floatLabelType - Specify the float label type of the input element.\n     * @param {boolean} clearButton - Boolean value to specify whether the clear icon is enabled / disabled on the input.\n     */\n    function setValue(value, element, floatLabelType, clearButton) {\n        element.value = value;\n        if (floatLabelType === 'Auto' && value === '') {\n            calculateWidth(element, element.parentElement);\n        }\n        if ((!isNullOrUndefined(floatLabelType)) && floatLabelType === 'Auto') {\n            validateLabel(element, floatLabelType);\n        }\n        if (!isNullOrUndefined(clearButton) && clearButton) {\n            var parentElement = getParentNode(element);\n            if (!isNullOrUndefined(parentElement)) {\n                var button = parentElement.getElementsByClassName(CLASSNAMES.CLEARICON)[0];\n                if (!isNullOrUndefined(button)) {\n                    if (element.value && !isNullOrUndefined(parentElement) && parentElement.classList.contains('e-input-focus')) {\n                        removeClass([button], CLASSNAMES.CLEARICONHIDE);\n                    }\n                    else {\n                        addClass([button], CLASSNAMES.CLEARICONHIDE);\n                    }\n                }\n            }\n        }\n        checkInputValue(floatLabelType, element);\n    }\n    Input.setValue = setValue;\n    /**\n     * Sets the single or multiple cssClass to wrapper of input element.\n     * ```\n     * E.g : Input.setCssClass('e-custom-class', [element]);\n     * ```\n     *\n     * @param {string} cssClass - Css class names which are needed to add.\n     * @param {Element[] | NodeList} elements - The elements which are needed to add / remove classes.\n     * @param {string} oldClass\n     * - Css class names which are needed to remove. If old classes are need to remove, can give this optional parameter.\n     */\n    function setCssClass(cssClass, elements, oldClass) {\n        if (!isNullOrUndefined(oldClass) && oldClass !== '') {\n            removeClass(elements, oldClass.split(' '));\n        }\n        if (!isNullOrUndefined(cssClass) && cssClass !== '') {\n            addClass(elements, cssClass.split(' '));\n        }\n    }\n    Input.setCssClass = setCssClass;\n    /**\n     * Set the width to the placeholder when it overflows on the button such as spinbutton, clearbutton, icon etc\n     * ```\n     * E.g : Input.calculateWidth(element, container);\n     * ```\n     *\n     * @param {any} element - Input element which is need to add.\n     * @param {HTMLElement} container - The parent element which is need to get the label span to calculate width\n     */\n    function calculateWidth(element, container, moduleName) {\n        var elementWidth = moduleName === 'multiselect' ? element : element.clientWidth - parseInt(getComputedStyle(element, null).getPropertyValue('padding-left'), 10);\n        if (!isNullOrUndefined(container.getElementsByClassName('e-float-text-content')[0])) {\n            if (container.getElementsByClassName('e-float-text-content')[0].classList.contains('e-float-text-overflow')) {\n                container.getElementsByClassName('e-float-text-content')[0].classList.remove('e-float-text-overflow');\n            }\n            if (elementWidth < container.getElementsByClassName('e-float-text-content')[0].clientWidth || elementWidth === container.getElementsByClassName('e-float-text-content')[0].clientWidth) {\n                container.getElementsByClassName('e-float-text-content')[0].classList.add('e-float-text-overflow');\n            }\n        }\n    }\n    Input.calculateWidth = calculateWidth;\n    /**\n     * Set the width to the wrapper of input element.\n     * ```\n     * E.g : Input.setWidth('200px', container);\n     * ```\n     *\n     * @param {number | string} width - Width value which is need to add.\n     * @param {HTMLElement} container - The element on which the width is need to add.\n     */\n    function setWidth(width, container) {\n        if (typeof width === 'number') {\n            container.style.width = formatUnit(width);\n        }\n        else if (typeof width === 'string') {\n            container.style.width = (width.match(/px|%|em/)) ? (width) : (formatUnit(width));\n        }\n        calculateWidth(container.firstChild, container);\n    }\n    Input.setWidth = setWidth;\n    /**\n     * Set the placeholder attribute to the input element.\n     * ```\n     * E.g : Input.setPlaceholder('Search here', element);\n     * ```\n     *\n     * @param {string} placeholder - Placeholder value which is need to add.\n     * @param {HTMLInputElement | HTMLTextAreaElement} element - The element on which the placeholder is need to add.\n     */\n    function setPlaceholder(placeholder, element) {\n        placeholder = encodePlaceHolder(placeholder);\n        var parentElement = getParentNode(element);\n        if (parentElement.classList.contains(CLASSNAMES.FLOATINPUT)) {\n            if (!isNullOrUndefined(placeholder) && placeholder !== '') {\n                parentElement.getElementsByClassName('e-float-text-content')[0] ? parentElement.getElementsByClassName(CLASSNAMES.FLOATTEXT)[0].children[0].textContent = placeholder : parentElement.getElementsByClassName(CLASSNAMES.FLOATTEXT)[0].textContent = placeholder;\n                parentElement.classList.remove(CLASSNAMES.NOFLOATLABEL);\n                element.removeAttribute('placeholder');\n            }\n            else {\n                parentElement.classList.add(CLASSNAMES.NOFLOATLABEL);\n                parentElement.getElementsByClassName('e-float-text-content')[0] ? parentElement.getElementsByClassName(CLASSNAMES.FLOATTEXT)[0].children[0].textContent = '' : parentElement.getElementsByClassName(CLASSNAMES.FLOATTEXT)[0].textContent = '';\n            }\n        }\n        else {\n            if (!isNullOrUndefined(placeholder) && placeholder !== '') {\n                attributes(element, { 'placeholder': placeholder });\n            }\n            else {\n                element.removeAttribute('placeholder');\n            }\n        }\n    }\n    Input.setPlaceholder = setPlaceholder;\n    /**\n     * Set the read only attribute to the input element\n     * ```\n     * E.g : Input.setReadonly(true, element);\n     * ```\n     *\n     * @param {boolean} isReadonly\n     * - Boolean value to specify whether to set read only. Setting \"True\" value enables read only.\n     * @param {HTMLInputElement | HTMLTextAreaElement} element\n     * - The element which is need to enable read only.\n     */\n    function setReadonly(isReadonly, element, floatLabelType) {\n        if (isReadonly) {\n            attributes(element, { readonly: '' });\n        }\n        else {\n            element.removeAttribute('readonly');\n        }\n        if (!isNullOrUndefined(floatLabelType)) {\n            validateLabel(element, floatLabelType);\n        }\n    }\n    Input.setReadonly = setReadonly;\n    /**\n     * Displays the element direction from right to left when its enabled.\n     * ```\n     * E.g : Input.setEnableRtl(true, [inputObj.container]);\n     * ```\n     *\n     * @param {boolean} isRtl\n     * - Boolean value to specify whether to set RTL. Setting \"True\" value enables the RTL mode.\n     * @param {Element[] | NodeList} elements\n     * - The elements that are needed to enable/disable RTL.\n     */\n    function setEnableRtl(isRtl, elements) {\n        if (isRtl) {\n            addClass(elements, CLASSNAMES.RTL);\n        }\n        else {\n            removeClass(elements, CLASSNAMES.RTL);\n        }\n    }\n    Input.setEnableRtl = setEnableRtl;\n    /**\n     * Enables or disables the given input element.\n     * ```\n     * E.g : Input.setEnabled(false, element);\n     * ```\n     *\n     * @param {boolean} isEnable\n     * - Boolean value to specify whether to enable or disable.\n     * @param {HTMLInputElement | HTMLTextAreaElement} element\n     * - Element to be enabled or disabled.\n     */\n    function setEnabled(isEnable, element, floatLabelType, inputContainer) {\n        var disabledAttrs = { 'disabled': 'disabled', 'aria-disabled': 'true' };\n        var considerWrapper = isNullOrUndefined(inputContainer) ? false : true;\n        if (isEnable) {\n            element.classList.remove(CLASSNAMES.DISABLE);\n            removeAttributes(disabledAttrs, element);\n            if (considerWrapper) {\n                removeClass([inputContainer], CLASSNAMES.DISABLE);\n            }\n        }\n        else {\n            element.classList.add(CLASSNAMES.DISABLE);\n            addAttributes(disabledAttrs, element);\n            if (considerWrapper) {\n                addClass([inputContainer], CLASSNAMES.DISABLE);\n            }\n        }\n        if (!isNullOrUndefined(floatLabelType)) {\n            validateLabel(element, floatLabelType);\n        }\n    }\n    Input.setEnabled = setEnabled;\n    function setClearButton(isClear, element, inputObject, initial, internalCreateElement) {\n        var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n        if (isClear) {\n            inputObject.clearButton = createClearButton(element, inputObject, initial, makeElement);\n        }\n        else {\n            remove(inputObject.clearButton);\n            inputObject.clearButton = null;\n        }\n    }\n    Input.setClearButton = setClearButton;\n    /**\n     * Removing the multiple attributes from the given element such as \"disabled\",\"id\" , etc.\n     * ```\n     * E.g : Input.removeAttributes({ 'disabled': 'disabled', 'aria-disabled': 'true' }, element);\n     * ```\n     *\n     * @param {string} attrs\n     * - Array of attributes which are need to removed from the element.\n     * @param {HTMLInputElement | HTMLElement} element\n     * - Element on which the attributes are needed to be removed.\n     */\n    function removeAttributes(attrs, element) {\n        for (var _i = 0, _a = Object.keys(attrs); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var parentElement = getParentNode(element);\n            if (key === 'disabled') {\n                element.classList.remove(CLASSNAMES.DISABLE);\n            }\n            if (key === 'disabled' && parentElement.classList.contains(CLASSNAMES.INPUTGROUP)) {\n                parentElement.classList.remove(CLASSNAMES.DISABLE);\n            }\n            if (key === 'placeholder' && parentElement.classList.contains(CLASSNAMES.FLOATINPUT)) {\n                parentElement.getElementsByClassName(CLASSNAMES.FLOATTEXT)[0].textContent = '';\n            }\n            else {\n                element.removeAttribute(key);\n            }\n        }\n    }\n    Input.removeAttributes = removeAttributes;\n    /**\n     * Adding the multiple attributes to the given element such as \"disabled\",\"id\" , etc.\n     * ```\n     * E.g : Input.addAttributes({ 'id': 'inputpopup' }, element);\n     * ```\n     *\n     * @param {string} attrs\n     * - Array of attributes which is added to element.\n     * @param {HTMLInputElement | HTMLElement} element\n     * - Element on which the attributes are needed to be added.\n     */\n    function addAttributes(attrs, element) {\n        for (var _i = 0, _a = Object.keys(attrs); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var parentElement = getParentNode(element);\n            if (key === 'disabled') {\n                element.classList.add(CLASSNAMES.DISABLE);\n            }\n            if (key === 'disabled' && parentElement.classList.contains(CLASSNAMES.INPUTGROUP)) {\n                parentElement.classList.add(CLASSNAMES.DISABLE);\n            }\n            if (key === 'placeholder' && parentElement.classList.contains(CLASSNAMES.FLOATINPUT)) {\n                parentElement.getElementsByClassName(CLASSNAMES.FLOATTEXT)[0].textContent = attrs[\"\" + key];\n            }\n            else {\n                element.setAttribute(key, attrs[\"\" + key]);\n            }\n        }\n    }\n    Input.addAttributes = addAttributes;\n    function removeFloating(input) {\n        var container = input.container;\n        if (!isNullOrUndefined(container) && container.classList.contains(CLASSNAMES.FLOATINPUT)) {\n            var inputEle = container.querySelector('textarea') ? container.querySelector('textarea') :\n                container.querySelector('input');\n            var placeholder = container.querySelector('.' + CLASSNAMES.FLOATTEXT).textContent;\n            var clearButton = container.querySelector('.e-clear-icon') !== null;\n            detach(container.querySelector('.' + CLASSNAMES.FLOATLINE));\n            detach(container.querySelector('.' + CLASSNAMES.FLOATTEXT));\n            classList(container, [CLASSNAMES.INPUTGROUP], [CLASSNAMES.FLOATINPUT]);\n            unwireFloatingEvents(inputEle);\n            attributes(inputEle, { 'placeholder': placeholder });\n            inputEle.classList.add(CLASSNAMES.INPUT);\n            if (!clearButton && inputEle.tagName === 'INPUT') {\n                inputEle.removeAttribute('required');\n            }\n        }\n    }\n    Input.removeFloating = removeFloating;\n    function addFloating(input, type, placeholder, internalCreateElement) {\n        var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n        var container = closest(input, '.' + CLASSNAMES.INPUTGROUP);\n        floatType = type;\n        if (type !== 'Never') {\n            var customTag = container.tagName;\n            customTag = customTag !== 'DIV' && customTag !== 'SPAN' ? customTag : null;\n            var args = { element: input, floatLabelType: type,\n                customTag: customTag, properties: { placeholder: placeholder } };\n            var iconEle = container.querySelector('.e-clear-icon');\n            var inputObj = { container: container };\n            input.classList.remove(CLASSNAMES.INPUT);\n            createFloatingInput(args, inputObj, makeElement);\n            createSpanElement(inputObj.container, makeElement);\n            calculateWidth(args.element, inputObj.container);\n            var isPrependIcon = container.classList.contains('e-float-icon-left');\n            if (isNullOrUndefined(iconEle)) {\n                if (isPrependIcon) {\n                    var inputWrap = container.querySelector('.e-input-in-wrap');\n                    iconEle = inputWrap.querySelector('.e-input-group-icon');\n                }\n                else {\n                    iconEle = container.querySelector('.e-input-group-icon');\n                }\n            }\n            if (isNullOrUndefined(iconEle)) {\n                if (isPrependIcon) {\n                    iconEle = container.querySelector('.e-input-group-icon');\n                }\n            }\n            else {\n                var floatLine = container.querySelector('.' + CLASSNAMES.FLOATLINE);\n                var floatText = container.querySelector('.' + CLASSNAMES.FLOATTEXT);\n                var wrapper = isPrependIcon ? container.querySelector('.e-input-in-wrap') : container;\n                wrapper.insertBefore(input, iconEle);\n                wrapper.insertBefore(floatLine, iconEle);\n                wrapper.insertBefore(floatText, iconEle);\n            }\n        }\n        checkFloatLabelType(type, input.parentElement);\n    }\n    Input.addFloating = addFloating;\n    /**\n     * Create the span inside the label and add the label text into the span textcontent\n     * ```\n     * E.g : Input.createSpanElement(inputObject, makeElement);\n     * ```\n     *\n     * @param {InputObject} inputObject\n     * - Element which is need to get the label\n     * @param {createElementParams} makeElement\n     * - Element which is need to create the span\n     */\n    function createSpanElement(inputObject, makeElement) {\n        if (inputObject.classList.contains('e-outline') && inputObject.getElementsByClassName('e-float-text')[0]) {\n            var labelSpanElement = makeElement('span', { className: CLASSNAMES.FLOATTEXTCONTENT });\n            labelSpanElement.innerHTML = inputObject.getElementsByClassName('e-float-text')[0].innerHTML;\n            inputObject.getElementsByClassName('e-float-text')[0].innerHTML = '';\n            inputObject.getElementsByClassName('e-float-text')[0].appendChild(labelSpanElement);\n        }\n    }\n    Input.createSpanElement = createSpanElement;\n    /**\n     * Enable or Disable the ripple effect on the icons inside the Input. Ripple effect is only applicable for material theme.\n     * ```\n     * E.g : Input.setRipple(true, [inputObjects]);\n     * ```\n     *\n     * @param {boolean} isRipple\n     * - Boolean value to specify whether to enable the ripple effect.\n     * @param {InputObject[]} inputObj\n     * - Specify the collection of input objects.\n     */\n    function setRipple(isRipple, inputObj) {\n        for (var i = 0; i < inputObj.length; i++) {\n            _internalRipple(isRipple, inputObj[parseInt(i.toString())].container);\n        }\n    }\n    Input.setRipple = setRipple;\n    function _internalRipple(isRipple, container, button) {\n        var argsButton = [];\n        argsButton.push(button);\n        var buttons = isNullOrUndefined(button) ?\n            container.querySelectorAll('.e-input-group-icon') : argsButton;\n        if (isRipple && buttons.length > 0) {\n            for (var index = 0; index < buttons.length; index++) {\n                buttons[parseInt(index.toString())].addEventListener('mousedown', _onMouseDownRipple, false);\n                buttons[parseInt(index.toString())].addEventListener('mouseup', _onMouseUpRipple, false);\n            }\n        }\n        else if (buttons.length > 0) {\n            for (var index = 0; index < buttons.length; index++) {\n                buttons[parseInt(index.toString())].removeEventListener('mousedown', _onMouseDownRipple, this);\n                buttons[parseInt(index.toString())].removeEventListener('mouseup', _onMouseUpRipple, this);\n            }\n        }\n    }\n    function _onMouseRipple(container, button) {\n        if (!container.classList.contains('e-disabled') && !container.querySelector('input').readOnly) {\n            button.classList.add('e-input-btn-ripple');\n        }\n    }\n    function _onMouseDownRipple() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var ele = this;\n        var parentEle = this.parentElement;\n        while (!parentEle.classList.contains('e-input-group')) {\n            parentEle = parentEle.parentElement;\n        }\n        _onMouseRipple(parentEle, ele);\n    }\n    function _onMouseUpRipple() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var ele = this;\n        setTimeout(function () {\n            ele.classList.remove('e-input-btn-ripple');\n        }, 500);\n    }\n    function createIconEle(iconClass, makeElement) {\n        var button = makeElement('span', { className: iconClass });\n        button.classList.add('e-input-group-icon');\n        return button;\n    }\n    /**\n     * Creates a new span element with the given icons added and append it in container element.\n     * ```\n     * E.g : Input.addIcon('append', 'e-icon-spin', inputObj.container, inputElement);\n     * ```\n     *\n     * @param {string} position - Specify the icon placement on the input.Possible values are append and prepend.\n     * @param {string | string[]} icons - Icon classes which are need to add to the span element which is going to created.\n     * Span element acts as icon or button element for input.\n     * @param {HTMLElement} container - The container on which created span element is going to append.\n     * @param {HTMLElement} input - The inputElement on which created span element is going to prepend.\n     */\n    /* eslint-disable @typescript-eslint/indent */\n    function addIcon(position, icons, container, input, internalCreate) {\n        /* eslint-enable @typescript-eslint/indent */\n        var result = typeof (icons) === 'string' ? icons.split(',')\n            : icons;\n        if (position.toLowerCase() === 'append') {\n            for (var _i = 0, result_1 = result; _i < result_1.length; _i++) {\n                var icon = result_1[_i];\n                appendSpan(icon, container, internalCreate);\n            }\n        }\n        else {\n            for (var _a = 0, result_2 = result; _a < result_2.length; _a++) {\n                var icon = result_2[_a];\n                prependSpan(icon, container, input, internalCreate);\n            }\n        }\n        if (container.getElementsByClassName('e-input-group-icon')[0] && container.getElementsByClassName('e-float-text-overflow')[0]) {\n            container.getElementsByClassName('e-float-text-overflow')[0].classList.add('e-icon');\n        }\n    }\n    Input.addIcon = addIcon;\n    /**\n     * Creates a new span element with the given icons added and prepend it in input element.\n     * ```\n     * E.g : Input.prependSpan('e-icon-spin', inputObj.container, inputElement);\n     * ```\n     *\n     * @param {string} iconClass - Icon classes which are need to add to the span element which is going to created.\n     * Span element acts as icon or button element for input.\n     * @param {HTMLElement} container - The container on which created span element is going to append.\n     * @param {HTMLElement} inputElement - The inputElement on which created span element is going to prepend.\n     */\n    /* eslint-disable @typescript-eslint/indent */\n    function prependSpan(iconClass, container, inputElement, internalCreateElement) {\n        /* eslint-enable @typescript-eslint/indent */\n        var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n        var button = createIconEle(iconClass, makeElement);\n        container.classList.add('e-float-icon-left');\n        var innerWrapper = container.querySelector('.e-input-in-wrap');\n        if (isNullOrUndefined(innerWrapper)) {\n            innerWrapper = makeElement('span', { className: 'e-input-in-wrap' });\n            inputElement.parentNode.insertBefore(innerWrapper, inputElement);\n            var result = container.querySelectorAll(inputElement.tagName + ' ~ *');\n            innerWrapper.appendChild(inputElement);\n            for (var i = 0; i < result.length; i++) {\n                var element = result[parseInt(i.toString())];\n                var parentElement = innerWrapper.parentElement;\n                if (!(element.classList.contains('e-float-line')) || (!(parentElement && parentElement.classList.contains('e-filled')) && parentElement)) {\n                    innerWrapper.appendChild(element);\n                }\n            }\n        }\n        innerWrapper.parentNode.insertBefore(button, innerWrapper);\n        _internalRipple(true, container, button);\n        return button;\n    }\n    Input.prependSpan = prependSpan;\n    /**\n     * Creates a new span element with the given icons added and append it in container element.\n     * ```\n     * E.g : Input.appendSpan('e-icon-spin', inputObj.container);\n     * ```\n     *\n     * @param {string} iconClass - Icon classes which are need to add to the span element which is going to created.\n     * Span element acts as icon or button element for input.\n     * @param {HTMLElement} container - The container on which created span element is going to append.\n     */\n    function appendSpan(iconClass, container, internalCreateElement) {\n        var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n        var button = createIconEle(iconClass, makeElement);\n        var wrap = (container.classList.contains('e-float-icon-left')) ? container.querySelector('.e-input-in-wrap') :\n            container;\n        wrap.appendChild(button);\n        _internalRipple(true, container, button);\n        return button;\n    }\n    Input.appendSpan = appendSpan;\n    function validateInputType(containerElement, input) {\n        if (input.type === 'hidden') {\n            containerElement.classList.add('e-hidden');\n        }\n        else if (containerElement.classList.contains('e-hidden')) {\n            containerElement.classList.remove('e-hidden');\n        }\n    }\n    Input.validateInputType = validateInputType;\n})(Input || (Input = {}));\n/* eslint-enable valid-jsdoc, jsdoc/require-jsdoc, jsdoc/require-returns, jsdoc/require-param */\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}