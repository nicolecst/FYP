{"ast":null,"code":"import axios from \"axios\";\nimport NavBarVue from \"../components/NavBar.vue\";\nimport CardViewVue from \"../components/CardView.vue\";\nexport default {\n  name: \"ActivitiesView\",\n  components: {\n    NavBarVue,\n    CardViewVue\n  },\n  data() {\n    return {\n      activities: [],\n      currentPage: 1,\n      totalPages: 1,\n      itemsPerPage: 10\n    };\n  },\n  methods: {\n    actCat(cat) {\n      return this.activities.filter(a => a.Category === cat);\n    },\n    approved() {\n      return this.activities.filter(a => a.Approved === true);\n    },\n    pageNum(p) {\n      this.currentPage = p;\n    },\n    fetchItems() {\n      // Make an HTTP request to the Node.js API endpoint\n      axios.get(\"/api/allAct\", {\n        params: {\n          page: this.currentPage,\n          limit: this.itemsPerPage\n        }\n      }).then(response => {\n        // Ensure the response data structure matches your expectation\n        const {\n          activities,\n          currentPage,\n          totalPages\n        } = response.data;\n\n        // Assign the data to the component's properties\n        this.activities = activities.filter(a => a.Approved === true);\n        this.currentPage = currentPage;\n        this.totalPages = totalPages;\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.fetchItems();\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.fetchItems();\n      }\n    }\n  },\n  // async created() {\n  //   const response = await axios\n  //     .get(\"/api/allAct\", {\n  //         params: {\n  //           page: this.currentPage,\n  //           limit: this.itemsPerPage,\n  //         },\n  //       })\n  //       .then((response) => {\n  //         // Ensure the response data structure matches your expectation\n  //         const { items, currentPage, totalPages } = response.data;\n\n  //         // Assign the data to the component's properties\n  //         this.items = items;\n  //         this.currentPage = currentPage;\n  //         this.totalPages = totalPages;\n  //       })\n  //       .catch((error) => {\n  //         console.error(error);\n  //       });\n\n  //   console.log(response);\n  // },\n  computed: {\n    paginatedItems() {\n      return this.activities.slice((this.currentPage - 1) * this.itemsPerPage, this.currentPage * this.itemsPerPage);\n    }\n  },\n  mounted() {\n    this.fetchItems();\n  }\n};","map":{"version":3,"names":["axios","NavBarVue","CardViewVue","name","components","data","activities","currentPage","totalPages","itemsPerPage","methods","actCat","cat","filter","a","Category","approved","Approved","pageNum","p","fetchItems","get","params","page","limit","then","response","catch","error","console","previousPage","nextPage","computed","paginatedItems","slice","mounted"],"sources":["/Users/nicolechan/Desktop/FYP_Test/itinerary/src/pages/ActivitiesView.vue"],"sourcesContent":["<template>\n  <div>\n    <NavBarVue />\n\n    <div class=\"header\">\n        <h3>All activities</h3>\n      <!-- <div class=\"col-md-6\" style=\"text-align: right\">\n          <a href=\"\">view all</a>\n        </div> -->\n        <p><i class=\"fa-solid fa-filter fa-1x\"></i></p>\n    </div>\n\n    <div class=\"container\">\n      <CardViewVue\n        v-for=\"activity in paginatedItems\"\n        :key=\"activity._id\"\n        :actname=\"activity.Act_name\"\n        :area=\"activity.Area\"\n        :district=\"activity.District\"\n        :type=\"activity.Type\"\n        :category=\"activity.Category\"\n        :charge=\"activity.Charge\"\n        :act_ID=\"activity._id\"\n      />\n    </div>\n    <div class=\"pagination\">\n      <button @click=\"previousPage\" :disabled=\"currentPage === 1\">\n        Previous\n      </button>\n      <button @click=\"pageNum(page)\"\n        class=\"pageNum\"\n        v-for=\"page in totalPages\"\n        :key=\"page\"\n        v-bind:style=\"{\n          backgroundColor: page === currentPage ? '#016a70' : '#fff',\n          color: page === currentPage ? '#fff' : '#016a70',\n        }\"\n      >\n        {{ page }}\n      </button>\n      <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">\n        Next\n      </button>\n    </div>\n  </div>\n</template>\n\n<script type=\"module\">\nimport axios from \"axios\";\nimport NavBarVue from \"../components/NavBar.vue\";\nimport CardViewVue from \"../components/CardView.vue\";\n\nexport default {\n  name: \"ActivitiesView\",\n  components: {\n    NavBarVue,\n    CardViewVue,\n  },\n  data() {\n    return {\n      activities: [],\n      currentPage: 1,\n      totalPages: 1,\n      itemsPerPage: 10,\n    };\n  },\n  methods: {\n    actCat(cat) {\n      return this.activities.filter((a) => a.Category === cat);\n    },\n    approved() {\n      return this.activities.filter((a) => a.Approved === true);\n    },\n    pageNum(p){\n      this.currentPage = p;\n    },\n    fetchItems() {\n      // Make an HTTP request to the Node.js API endpoint\n      axios\n        .get(\"/api/allAct\", {\n          params: {\n            page: this.currentPage,\n            limit: this.itemsPerPage,\n          },\n        })\n        .then((response) => {\n          // Ensure the response data structure matches your expectation\n          const { activities, currentPage, totalPages } = response.data;\n\n          // Assign the data to the component's properties\n          this.activities = activities.filter((a) => a.Approved === true);\n          this.currentPage = currentPage;\n          this.totalPages = totalPages;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.fetchItems();\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.fetchItems();\n      }\n    },\n  },\n  // async created() {\n  //   const response = await axios\n  //     .get(\"/api/allAct\", {\n  //         params: {\n  //           page: this.currentPage,\n  //           limit: this.itemsPerPage,\n  //         },\n  //       })\n  //       .then((response) => {\n  //         // Ensure the response data structure matches your expectation\n  //         const { items, currentPage, totalPages } = response.data;\n\n  //         // Assign the data to the component's properties\n  //         this.items = items;\n  //         this.currentPage = currentPage;\n  //         this.totalPages = totalPages;\n  //       })\n  //       .catch((error) => {\n  //         console.error(error);\n  //       });\n\n  //   console.log(response);\n  // },\n  computed: {\n    paginatedItems() {\n      return this.activities.slice(\n        (this.currentPage - 1) * this.itemsPerPage,\n        this.currentPage * this.itemsPerPage\n      );\n    },\n  },\n  mounted() {\n    this.fetchItems();\n  },\n};\n</script>\n\n<style scoped>\n/* .scrolls {\n    display: flex;\n    flex-wrap: no-wrap;\n    overflow-x: auto;\n    margin: 20px;\n  } */\n\na {\n  color: #016a70;\n}\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n}\n.header{\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 20px;\n}\n.pagination {\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  margin: 20px;\n}\n.pagination button {\n  margin: auto;\n  background-color: #016a70;\n  color: #fff;\n  border-radius: 5px;\n  padding: 5px;\n  border: none;\n}\n.pagination button:disabled {\n  background-color: #8eb0b2;\n}\n.pageNum {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 10px;\n  margin-right: 10px;\n  width: 30px;\n  height: 30px;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":"AAgDA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,SAAQ,MAAO,0BAA0B;AAChD,OAAOC,WAAU,MAAO,4BAA4B;AAEpD,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IACVH,SAAS;IACTC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE,CAAC;MACdC,UAAU,EAAE,CAAC;MACbC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,MAAMA,CAACC,GAAG,EAAE;MACV,OAAO,IAAI,CAACN,UAAU,CAACO,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,QAAO,KAAMH,GAAG,CAAC;IAC1D,CAAC;IACDI,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACV,UAAU,CAACO,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACG,QAAO,KAAM,IAAI,CAAC;IAC3D,CAAC;IACDC,OAAOA,CAACC,CAAC,EAAC;MACR,IAAI,CAACZ,WAAU,GAAIY,CAAC;IACtB,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX;MACApB,KAAI,CACDqB,GAAG,CAAC,aAAa,EAAE;QAClBC,MAAM,EAAE;UACNC,IAAI,EAAE,IAAI,CAAChB,WAAW;UACtBiB,KAAK,EAAE,IAAI,CAACf;QACd;MACF,CAAC,EACAgB,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACA,MAAM;UAAEpB,UAAU;UAAEC,WAAW;UAAEC;QAAW,IAAIkB,QAAQ,CAACrB,IAAI;;QAE7D;QACA,IAAI,CAACC,UAAS,GAAIA,UAAU,CAACO,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACG,QAAO,KAAM,IAAI,CAAC;QAC/D,IAAI,CAACV,WAAU,GAAIA,WAAW;QAC9B,IAAI,CAACC,UAAS,GAAIA,UAAU;MAC9B,CAAC,EACAmB,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACvB,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;QAClB,IAAI,CAACa,UAAU,CAAC,CAAC;MACnB;IACF,CAAC;IACDW,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACxB,WAAU,GAAI,IAAI,CAACC,UAAU,EAAE;QACtC,IAAI,CAACD,WAAW,EAAE;QAClB,IAAI,CAACa,UAAU,CAAC,CAAC;MACnB;IACF;EACF,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACAY,QAAQ,EAAE;IACRC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAAC3B,UAAU,CAAC4B,KAAK,CAC1B,CAAC,IAAI,CAAC3B,WAAU,GAAI,CAAC,IAAI,IAAI,CAACE,YAAY,EAC1C,IAAI,CAACF,WAAU,GAAI,IAAI,CAACE,YAC1B,CAAC;IACH;EACF,CAAC;EACD0B,OAAOA,CAAA,EAAG;IACR,IAAI,CAACf,UAAU,CAAC,CAAC;EACnB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}