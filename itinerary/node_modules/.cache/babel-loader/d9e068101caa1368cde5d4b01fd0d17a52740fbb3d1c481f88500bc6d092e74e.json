{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { classNames } from './list-view';\nimport { EventHandler, append, isNullOrUndefined, detach, compile, formatUnit, select } from '@syncfusion/ej2-base';\nimport { ListBase } from '../common/list-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar listElementCount = 1.5;\nvar windowElementCount = 3;\nvar Virtualization = /** @class */function () {\n  function Virtualization(instance) {\n    this.elementDifference = 0;\n    this.listViewInstance = instance;\n  }\n  /**\n   * For internal use only.\n   *\n   * @private\n   */\n  Virtualization.prototype.isNgTemplate = function () {\n    return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n  };\n  /**\n   * Checks if the platform is a Vue and its template property is a function type.\n   *\n   * @returns {boolean} indicating the result of the check\n   */\n  Virtualization.prototype.isVueFunctionTemplate = function () {\n    return this.listViewInstance.isVue && typeof this.listViewInstance.template === 'function';\n  };\n  /**\n   * For internal use only.\n   *\n   * @private\n   */\n  Virtualization.prototype.uiVirtualization = function () {\n    this.wireScrollEvent(false);\n    var curViewDS = this.listViewInstance.curViewDS;\n    var firstDs = curViewDS.slice(0, 1);\n    this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList(\n    // eslint-disable-next-line\n    this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption, null, this.listViewInstance);\n    this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', {\n      className: classNames.container\n    });\n    this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n    this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n    this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n    this.expectedDomItemCount = this.ValidateItemCount(10000);\n    this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n    this.uiFirstIndex = 0;\n    this.uiLastIndex = this.domItemCount - 1;\n    var otherDs = curViewDS.slice(1, this.domItemCount);\n    var listItems = ListBase.createListItemFromJson(\n    // eslint-disable-next-line\n    this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n    append(listItems, this.listViewInstance.ulElement);\n    this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n    this.topElement = this.listViewInstance.createElement('div');\n    this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n    this.bottomElement = this.listViewInstance.createElement('div');\n    this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n    this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n    this.topElement.style.height = 0 + 'px';\n    this.bottomElement.style.height = this.totalHeight + 'px';\n    this.topElementHeight = 0;\n    this.bottomElementHeight = this.totalHeight;\n    this.listDiff = 0;\n    this.uiIndicesInitialization();\n  };\n  Virtualization.prototype.wireScrollEvent = function (destroy) {\n    if (!destroy) {\n      if (this.listViewInstance.isWindow) {\n        this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n        window.addEventListener('scroll', this.onVirtualScroll);\n      } else {\n        EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n      }\n    } else {\n      if (this.listViewInstance.isWindow === true) {\n        window.removeEventListener('scroll', this.onVirtualScroll);\n        window.removeEventListener('scroll', this.updateUl);\n      } else {\n        EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n        EventHandler.remove(this.listViewInstance.element, 'scroll', this.updateUlContainer);\n      }\n    }\n  };\n  Virtualization.prototype.updateUlContainer = function (e) {\n    var listDiff;\n    var virtualElementContainer = this.listViewInstance.ulElement.querySelector('.' + classNames.virtualElementContainer);\n    if (isNullOrUndefined(this.listViewInstance.liElementHeight)) {\n      this.listViewInstance.updateLiElementHeight();\n    }\n    if (this.listViewInstance.isWindow) {\n      // eslint-disable-next-line\n      listDiff = Math.round(e.target.documentElement.scrollTop / this.listViewInstance.liElementHeight) - 2;\n    } else {\n      // eslint-disable-next-line\n      listDiff = Math.round(e.target.scrollTop / this.listViewInstance.liElementHeight) - 2;\n    }\n    if ((listDiff - 1) * this.listViewInstance.liElementHeight < 0) {\n      virtualElementContainer.style.top = '0px';\n    } else {\n      virtualElementContainer.style.top = listDiff * this.listViewInstance.liElementHeight + 'px';\n    }\n  };\n  Virtualization.prototype.ValidateItemCount = function (dataSourceLength) {\n    var height = parseFloat(formatUnit(this.listViewInstance.height));\n    var itemCount;\n    if (this.listViewInstance.isWindow) {\n      itemCount = Math.round(window.innerHeight / this.listItemHeight * windowElementCount);\n    } else {\n      if (typeof this.listViewInstance.height === 'string' && this.listViewInstance.height.indexOf('%') !== -1) {\n        // eslint-disable-next-line max-len\n        itemCount = Math.round(this.listViewInstance.element.getBoundingClientRect().height / this.listItemHeight * listElementCount);\n      } else {\n        itemCount = Math.round(height / this.listItemHeight * listElementCount);\n      }\n    }\n    if (itemCount > dataSourceLength) {\n      itemCount = dataSourceLength;\n    }\n    return itemCount;\n  };\n  Virtualization.prototype.uiIndicesInitialization = function () {\n    this.uiIndices = {\n      'activeIndices': [],\n      'disabledItemIndices': [],\n      'hiddenItemIndices': []\n    };\n    var data = this.listViewInstance.curViewDS;\n    for (var i = 0; i < data.length; i++) {\n      if (this.listViewInstance.showCheckBox && data[i][this.listViewInstance.fields.isChecked]) {\n        this.uiIndices.activeIndices.push(i);\n      }\n      // eslint-disable-next-line\n      if (!isNullOrUndefined(data[i][this.listViewInstance.fields.enabled]) && !data[i][this.listViewInstance.fields.enabled]) {\n        // eslint-disable-next-line\n        this.uiIndices.disabledItemIndices.push(i);\n      }\n    }\n    if (this.isNgTemplate()) {\n      var items = this.listViewInstance.element.querySelectorAll('.' + classNames.listItem);\n      for (var index = 0; index < items.length; index++) {\n        items[index].context = this.listViewInstance.viewContainerRef.get(index).context;\n      }\n    }\n  };\n  Virtualization.prototype.refreshItemHeight = function () {\n    if (this.listViewInstance.curViewDS.length) {\n      var curViewDS = this.listViewInstance.curViewDS;\n      this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n      this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n      this.bottomElementHeight = this.totalHeight;\n      this.bottomElement.style.height = this.totalHeight + 'px';\n    }\n  };\n  Virtualization.prototype.getscrollerHeight = function (startingHeight) {\n    return this.listViewInstance.isWindow ? pageYOffset - startingHeight <= 0 ? 0 : pageYOffset - startingHeight : this.listViewInstance.element.scrollTop - startingHeight <= 0 ? 0 : this.listViewInstance.element.scrollTop - startingHeight;\n  };\n  Virtualization.prototype.onVirtualUiScroll = function (e) {\n    var _a;\n    var startingHeight;\n    var curViewDS = this.listViewInstance.curViewDS;\n    this.listItemHeight = select('.e-list-item', this.listViewInstance.element).getBoundingClientRect().height;\n    this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n    if (this.listViewInstance.isWindow) {\n      startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top - document.documentElement.getBoundingClientRect().top;\n    } else {\n      startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n    }\n    this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n    var scroll = this.getscrollerHeight(startingHeight);\n    this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n    this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n    _a = scroll <= this.totalHeight ? [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0], this.topElementHeight = _a[0], this.bottomElementHeight = _a[1];\n    if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n      this.topElement.style.height = this.topElementHeight + 'px';\n      this.bottomElement.style.height = this.bottomElementHeight + 'px';\n      if (scroll > this.scrollPosition) {\n        var listDiff = Math.round(this.topElementHeight / this.listItemHeight - this.listDiff);\n        if (listDiff > this.expectedDomItemCount + 5) {\n          this.onLongScroll(listDiff, true);\n        } else {\n          this.onNormalScroll(listDiff, true);\n        }\n      } else {\n        var listDiff = Math.round(this.listDiff - this.topElementHeight / this.listItemHeight);\n        if (listDiff > this.expectedDomItemCount + 5) {\n          this.onLongScroll(listDiff, false);\n        } else {\n          this.onNormalScroll(listDiff, false);\n        }\n      }\n    }\n    this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n    if (typeof this.listViewInstance.onUIScrolled === 'function') {\n      this.listViewInstance.onUIScrolled();\n    }\n    this.scrollPosition = scroll;\n  };\n  Virtualization.prototype.onLongScroll = function (listDiff, isScrollingDown) {\n    var index = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n    var elements = this.listViewInstance.ulElement.querySelectorAll('li');\n    for (var i = 0; i < elements.length; i++) {\n      this.updateUI(elements[i], index);\n      index++;\n    }\n    this.uiLastIndex = isScrollingDown ? this.uiLastIndex + listDiff : this.uiLastIndex - listDiff;\n    this.uiFirstIndex = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n  };\n  Virtualization.prototype.onNormalScroll = function (listDiff, isScrollingDown) {\n    if (isScrollingDown) {\n      for (var i = 0; i < listDiff; i++) {\n        var index = ++this.uiLastIndex;\n        this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n        this.uiFirstIndex++;\n      }\n    } else {\n      for (var i = 0; i < listDiff; i++) {\n        var index = --this.uiFirstIndex;\n        var target = this.topElement.nextSibling;\n        this.updateUI(this.bottomElement.previousElementSibling, index, target);\n        this.uiLastIndex--;\n      }\n    }\n  };\n  Virtualization.prototype.updateUiContent = function (element, index) {\n    // eslint-disable-next-line\n    var curViewDs = this.listViewInstance.curViewDS;\n    if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n      element.dataset.uid = ListBase.generateId();\n      element.getElementsByClassName(classNames.listItemText)[0].innerHTML = this.listViewInstance.curViewDS[index].toString();\n    } else {\n      // eslint-disable-next-line\n      element.dataset.uid = curViewDs[index][this.listViewInstance.fields.id] ?\n      // eslint-disable-next-line\n      curViewDs[index][this.listViewInstance.fields.id] : ListBase.generateId();\n      element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n      // eslint-disable-next-line\n      curViewDs[index][this.listViewInstance.fields.text];\n    }\n    if (this.listViewInstance.showIcon) {\n      if (element.querySelector('.' + classNames.listIcon)) {\n        detach(element.querySelector('.' + classNames.listIcon));\n      }\n      if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n        var textContent = element.querySelector('.' + classNames.textContent);\n        var target = this.listViewInstance.createElement('div', {\n          className: classNames.listIcon + ' ' + this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n        });\n        textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n      }\n    }\n    if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n      if (!this.checkListWrapper) {\n        this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n      }\n      var textContent = element.querySelector('.' + classNames.textContent);\n      if (this.listViewInstance.curViewDS[index].isHeader) {\n        if (element.querySelector('.' + classNames.checkboxWrapper)) {\n          element.classList.remove(classNames.checklist);\n          textContent.classList.remove(classNames.checkbox);\n          detach(element.querySelector('.' + classNames.checkboxWrapper));\n        }\n      } else {\n        if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n          element.classList.add(classNames.checklist);\n          textContent.classList.add(classNames.checkbox);\n          if (this.listViewInstance.checkBoxPosition === 'Left') {\n            textContent.classList.add('e-checkbox-left');\n          } else {\n            textContent.classList.add('e-checkbox-right');\n          }\n          textContent.append(this.checkListWrapper.cloneNode(true));\n        }\n      }\n    }\n  };\n  Virtualization.prototype.changeElementAttributes = function (element, index) {\n    element.classList.remove(classNames.disable);\n    if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n      element.classList.add(classNames.disable);\n    }\n    element.style.display = '';\n    if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n      element.style.display = 'none';\n    }\n    if (this.listViewInstance.showCheckBox) {\n      var checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n      element.classList.remove(classNames.selected);\n      element.classList.remove(classNames.focused);\n      if (checklistElement) {\n        checklistElement.removeAttribute('aria-checked');\n        checklistElement.firstElementChild.classList.remove(classNames.checked);\n      }\n      if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n        element.classList.add(classNames.selected);\n        checklistElement.firstElementChild.classList.add(classNames.checked);\n        checklistElement.setAttribute('aria-checked', 'true');\n        if (this.activeIndex === index) {\n          element.classList.add(classNames.focused);\n        }\n      }\n    } else {\n      element.classList.remove(classNames.selected);\n      element.removeAttribute('aria-selected');\n      if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n        element.classList.add(classNames.selected);\n        element.setAttribute('aria-selected', 'true');\n      }\n    }\n    if (this.listViewInstance.fields.groupBy) {\n      if (this.listViewInstance.curViewDS[index].isHeader) {\n        if (element.classList.contains(classNames.listItem)) {\n          element.classList.remove(classNames.listItem);\n          element.setAttribute('role', 'group');\n          element.classList.add(classNames.groupListItem);\n        }\n      } else {\n        if (element.classList.contains(classNames.groupListItem)) {\n          element.classList.remove(classNames.groupListItem);\n          element.setAttribute('role', 'listitem');\n          element.classList.add(classNames.listItem);\n        }\n      }\n    }\n  };\n  Virtualization.prototype.findDSAndIndexFromId = function (ds, fields) {\n    var _this = this;\n    var resultJSON = {};\n    fields = this.listViewInstance.getElementUID(fields);\n    if (!isNullOrUndefined(fields)) {\n      ds.some(function (data, index) {\n        if (fields[_this.listViewInstance.fields.id] &&\n        // eslint-disable-next-line\n        fields[_this.listViewInstance.fields.id]\n        // eslint-disable-next-line\n        === (data[_this.listViewInstance.fields.id] && data[_this.listViewInstance.fields.id]) || fields === data) {\n          resultJSON.index = index;\n          resultJSON.data = data;\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n    return resultJSON;\n  };\n  Virtualization.prototype.getSelectedItems = function () {\n    var _this = this;\n    if (!isNullOrUndefined(this.activeIndex) || this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length) {\n      var dataCollection = [];\n      var textCollection = [];\n      if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n        var curViewDS_1 = this.listViewInstance.curViewDS;\n        if (this.listViewInstance.showCheckBox) {\n          var indices = this.uiIndices.activeIndices;\n          for (var i = 0; i < indices.length; i++) {\n            dataCollection.push(curViewDS_1[indices[i]]);\n          }\n          return {\n            text: dataCollection,\n            // eslint-disable-next-line\n            data: dataCollection,\n            index: this.uiIndices.activeIndices.map(function (index) {\n              return _this.listViewInstance.dataSource.indexOf(curViewDS_1[index]);\n            })\n          };\n        } else {\n          return {\n            text: curViewDS_1[this.activeIndex],\n            data: curViewDS_1[this.activeIndex],\n            index: this.listViewInstance.dataSource.indexOf(curViewDS_1[this.activeIndex])\n          };\n        }\n      } else {\n        var curViewDS_2 = this.listViewInstance.curViewDS;\n        var text = this.listViewInstance.fields.text;\n        if (this.listViewInstance.showCheckBox) {\n          var indexArray = this.uiIndices.activeIndices;\n          for (var i = 0; i < indexArray.length; i++) {\n            textCollection.push(curViewDS_2[indexArray[i]][\"\" + text]);\n            // eslint-disable-next-line\n            dataCollection.push(curViewDS_2[indexArray[i]]);\n          }\n          // eslint-disable-next-line\n          var dataSource_1 = this.listViewInstance.dataSource instanceof DataManager ? curViewDS_2 : this.listViewInstance.dataSource;\n          return {\n            text: textCollection,\n            // eslint-disable-next-line\n            data: dataCollection,\n            index: this.uiIndices.activeIndices.map(function (index) {\n              return dataSource_1.indexOf(curViewDS_2[index]);\n            })\n          };\n        } else {\n          // eslint-disable-next-line\n          var dataSource = this.listViewInstance.dataSource instanceof DataManager ? curViewDS_2 : this.listViewInstance.dataSource;\n          return {\n            text: curViewDS_2[this.activeIndex][this.listViewInstance.fields.text],\n            // eslint-disable-next-line\n            data: curViewDS_2[this.activeIndex],\n            index: dataSource.indexOf(curViewDS_2[this.activeIndex])\n          };\n        }\n      }\n    } else {\n      return undefined;\n    }\n  };\n  Virtualization.prototype.selectItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n    if (Object.keys(resutJSON).length) {\n      var isSelected = this.activeIndex === resutJSON.index;\n      var isChecked = void 0;\n      this.activeIndex = resutJSON.index;\n      if (this.listViewInstance.showCheckBox) {\n        if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n          isChecked = true;\n          this.uiIndices.activeIndices.push(resutJSON.index);\n        } else {\n          isChecked = false;\n          this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n        }\n        if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n          this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n        }\n      }\n      if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n        if (this.listViewInstance.showCheckBox) {\n          this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n        } else {\n          this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n        }\n      } else {\n        // eslint-disable-next-line\n        var eventArgs = void 0;\n        if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n          eventArgs = {\n            text: this.listViewInstance.curViewDS[this.activeIndex],\n            data: this.listViewInstance.curViewDS[this.activeIndex],\n            index: this.activeIndex\n          };\n        } else {\n          var curViewDS = this.listViewInstance.curViewDS;\n          eventArgs = {\n            text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n            data: curViewDS[this.activeIndex],\n            index: this.activeIndex\n          };\n        }\n        if (this.listViewInstance.showCheckBox) {\n          eventArgs.isChecked = isChecked;\n          this.listViewInstance.trigger('select', eventArgs);\n        } else if (!isSelected) {\n          this.listViewInstance.removeSelect();\n          this.listViewInstance.trigger('select', eventArgs);\n        }\n      }\n    } else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n      this.listViewInstance.removeSelect();\n      this.activeIndex = undefined;\n    }\n  };\n  Virtualization.prototype.enableItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n    if (Object.keys(resutJSON).length) {\n      this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n    }\n  };\n  Virtualization.prototype.disableItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n    if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n      this.uiIndices.disabledItemIndices.push(resutJSON.index);\n    }\n  };\n  Virtualization.prototype.showItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n    if (Object.keys(resutJSON).length) {\n      this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n    }\n  };\n  Virtualization.prototype.hideItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n    if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n      this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n    }\n  };\n  Virtualization.prototype.removeItem = function (obj) {\n    var dataSource;\n    var curViewDS = this.listViewInstance.curViewDS;\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(curViewDS, obj);\n    if (Object.keys(resutJSON).length) {\n      dataSource = resutJSON.data;\n      if (curViewDS[resutJSON.index - 1] && curViewDS[resutJSON.index - 1].isHeader && curViewDS[resutJSON.index - 1].items.length === 1) {\n        this.removeUiItem(resutJSON.index - 1);\n        this.removeUiItem(resutJSON.index - 1);\n      } else {\n        this.removeUiItem(resutJSON.index);\n      }\n    }\n    var listDataSource = this.listViewInstance.dataSource instanceof DataManager ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n    var index = listDataSource.indexOf(dataSource);\n    if (index !== -1) {\n      listDataSource.splice(index, 1);\n      this.listViewInstance.setViewDataSource(listDataSource);\n    }\n    // recollect all the list item into collection\n    this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n  };\n  // eslint-disable-next-line\n  Virtualization.prototype.setCheckboxLI = function (li, e) {\n    var index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    if (li.classList.contains(classNames.selected)) {\n      if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n        this.uiIndices.activeIndices.push(index);\n      }\n    } else {\n      this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n    }\n  };\n  // eslint-disable-next-line\n  Virtualization.prototype.setSelectLI = function (li, e) {\n    this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n  };\n  Virtualization.prototype.checkedItem = function (checked) {\n    if (checked) {\n      this.uiIndices.activeIndices = [];\n      this.activeIndex = undefined;\n      var data = this.listViewInstance.curViewDS;\n      for (var index = 0; index < data.length; index++) {\n        if (!data[index].isHeader) {\n          this.uiIndices.activeIndices.push(index);\n        }\n      }\n    } else {\n      this.activeIndex = undefined;\n      this.uiIndices.activeIndices = [];\n    }\n  };\n  Virtualization.prototype.addUiItem = function (index) {\n    // virtually new add list item based on the scollbar position\n    // if the scroll bar is at the top, just pretend the new item has been added since no UI\n    // change is required for the item that has been added at last but when scroll bar is at the bottom\n    // just detach top and inject into bottom to mimic new item is added\n    var curViewDs = this.listViewInstance.curViewDS;\n    this.changeUiIndices(index, true);\n    if (this.activeIndex && this.activeIndex >= index) {\n      this.activeIndex++;\n    }\n    if (this.listViewInstance.showCheckBox && curViewDs[index][this.listViewInstance.fields.isChecked]) {\n      this.uiIndices.activeIndices.push(index);\n    }\n    if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n      this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n    }\n    if (parseFloat(this.bottomElement.style.height)) {\n      var liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n      var target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n      if (target) {\n        this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        this.updateUI(liItem, index, target);\n      }\n    } else {\n      var liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n      var target = void 0;\n      if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n        target = this.listViewInstance.curUL.lastElementChild;\n      } else {\n        target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n      }\n      this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n      this.uiFirstIndex++;\n      this.uiLastIndex++;\n      if (target) {\n        this.updateUI(liItem, index, target);\n        if (this.listViewInstance.isWindow === true) {\n          window.scrollTo(0, pageYOffset + this.listItemHeight);\n        } else {\n          this.listViewInstance.element.scrollTop += this.listItemHeight;\n        }\n      }\n    }\n    this.totalHeight += this.listItemHeight;\n    this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n  };\n  Virtualization.prototype.removeUiItem = function (index) {\n    this.totalHeight -= this.listItemHeight;\n    var curViewDS = this.listViewInstance.curViewDS[index];\n    var liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n    this.listViewInstance.curViewDS.splice(index, 1);\n    if (this.activeIndex && this.activeIndex >= index) {\n      this.activeIndex--;\n    }\n    if (liItem) {\n      if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n        detach(liItem);\n        this.domItemCount--;\n        this.uiLastIndex--;\n        this.totalHeight = 0;\n      } else {\n        if (liItem.classList.contains(classNames.disable)) {\n          liItem.classList.remove(classNames.disable);\n          this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n        }\n        if (liItem.style.display === 'none') {\n          liItem.style.display = '';\n          this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n        }\n        if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n          this.listViewInstance.removeSelect();\n          this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n          var checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n          checklistElement.removeAttribute('aria-checked');\n          checklistElement.firstElementChild.classList.remove(classNames.checked);\n          if (liItem.classList.contains(classNames.focused)) {\n            liItem.classList.remove(classNames.focused);\n            this.activeIndex = undefined;\n          }\n        } else if (liItem.classList.contains(classNames.selected)) {\n          this.listViewInstance.removeSelect();\n          this.activeIndex = undefined;\n        }\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n          this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n        } else if (parseFloat(this.bottomElement.style.height)) {\n          this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n          this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n        } else {\n          this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n          this.updateUI(liItem, this.uiFirstIndex - 1, this.topElement.nextSibling);\n          this.uiLastIndex--;\n          this.uiFirstIndex--;\n        }\n      }\n    }\n    this.changeUiIndices(index, false);\n    this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n  };\n  Virtualization.prototype.changeUiIndices = function (index, increment) {\n    var keys = Object.keys(this.uiIndices);\n    for (var ind = 0; ind < keys.length; ind++) {\n      this.uiIndices[keys[ind]] = this.uiIndices[keys[ind]].map(function (i) {\n        if (i >= index) {\n          return increment ? ++i : --i;\n        } else {\n          return i;\n        }\n      });\n    }\n  };\n  Virtualization.prototype.addItem = function (data, fields, dataSource, index) {\n    for (var i = 0; i < data.length; i++) {\n      var currentItem = data[i];\n      // push the given data to main data array\n      dataSource = this.listViewInstance.addItemAtIndex(index, dataSource, currentItem);\n      // recalculate all the group data or other datasource related things\n      this.listViewInstance.setViewDataSource(dataSource);\n      // render list items for first time due to no datasource present earlier\n      if (!this.domItemCount) {\n        // fresh rendering for first time\n        if ((this.listViewInstance.template || this.listViewInstance.groupTemplate) && !this.isNgTemplate()) {\n          this.listViewInstance.listBaseOption.template = null;\n          this.listViewInstance.listBaseOption.groupTemplate = null;\n          this.listViewInstance.listBaseOption.itemCreated = this.createUIItem.bind(this);\n        }\n        this.uiVirtualization();\n        // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n      } else if (this.domItemCount < this.expectedDomItemCount) {\n        var ds = this.listViewInstance.findItemFromDS(dataSource, fields);\n        if (ds instanceof Array) {\n          if (this.listViewInstance.ulElement) {\n            var index_1 = this.listViewInstance.curViewDS.indexOf(currentItem);\n            // inject new list item into DOM\n            this.createAndInjectNewItem(currentItem, index_1);\n            // check for group header item\n            var curViewDS = this.listViewInstance.curViewDS[index_1 - 1];\n            if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n              // target group item index in datasource\n              --index_1;\n              // inject new group header into DOM for previously created list item\n              this.createAndInjectNewItem(curViewDS, index_1);\n            }\n          }\n          // recollect all the list item into collection\n          this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        }\n      } else {\n        // eslint-disable-next-line\n        var index_2 = this.listViewInstance.curViewDS.indexOf(currentItem);\n        // virtually new add list item based on the scollbar position\n        this.addUiItem(index_2);\n        // check for group header item needs to be added\n        var curViewDS = this.listViewInstance.curViewDS[index_2 - 1];\n        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n          this.addUiItem(index_2 - 1);\n        }\n      }\n    }\n  };\n  Virtualization.prototype.createAndInjectNewItem = function (itemData, index) {\n    // generate li item for given datasource\n    var target;\n    var li = ListBase.createListItemFromJson(this.listViewInstance.createElement,\n    // eslint-disable-next-line\n    [itemData], this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n    // check for target element whether to insert before last item or group item\n    if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n      target = this.listViewInstance.curUL.lastElementChild;\n    } else {\n      // target group header's first child item to append its header\n      target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) || this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n    }\n    if (this.listViewInstance.fields.groupBy && this.listViewInstance.curViewDS[index + 1] && this.listViewInstance.curViewDS[index + 1].isHeader) {\n      var targetEle = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index - 1]);\n      if (targetEle) {\n        target = targetEle.nextElementSibling;\n      }\n    }\n    // insert before the target element\n    this.listViewInstance.ulElement.insertBefore(li[0], target);\n    // increment internal DOM count, last index count for new element\n    this.domItemCount++;\n    if (this.bottomElementHeight <= 0) {\n      this.uiLastIndex++;\n    }\n    // recalculate the current item height, to avoid jumpy scroller\n    this.refreshItemHeight();\n  };\n  Virtualization.prototype.createUIItem = function (args) {\n    if (!args.item.classList.contains('e-list-group-item')) {\n      this.templateData = args.curData.isHeader ? args.curData.items[0] : args.curData;\n      if (this.listViewInstance.showCheckBox) {\n        // eslint-disable-next-line\n        this.listViewInstance.renderCheckbox(args);\n        if (!isNullOrUndefined(this.listViewInstance.virtualCheckBox) && !isNullOrUndefined(this.listViewInstance.virtualCheckBox.outerHTML)) {\n          var div_1 = document.createElement('div');\n          var commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' + '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n          var templateFunction = compile(this.listViewInstance.template || commonTemplate, this.listViewInstance);\n          var nodes = templateFunction(this.templateData, this.listViewInstance);\n          if (this.listViewInstance.template && this.listViewInstance.isReact) {\n            this.listViewInstance.renderReactTemplates();\n          }\n          [].slice.call(nodes).forEach(function (ele) {\n            div_1.appendChild(ele);\n          });\n          if (div_1.children && div_1.children[0]) {\n            div_1.children[0].classList.add('e-checkbox');\n            if (this.listViewInstance.checkBoxPosition === 'Left') {\n              div_1.children[0].classList.add('e-checkbox-left');\n            } else {\n              div_1.children[0].classList.add('e-checkbox-right');\n            }\n            if (this.listViewInstance.checkBoxPosition === 'Left') {\n              div_1.children[0].insertBefore(this.listViewInstance.virtualCheckBox, div_1.childNodes[0].children[0]);\n            } else {\n              div_1.children[0].appendChild(this.listViewInstance.virtualCheckBox);\n            }\n            while (args.item.lastChild) {\n              args.item.removeChild(args.item.lastChild);\n            }\n            [].slice.call(div_1.children).forEach(function (ele) {\n              args.item.appendChild(ele);\n            });\n          }\n        }\n      }\n    }\n  };\n  Virtualization.prototype.reRenderUiVirtualization = function () {\n    this.wireScrollEvent(true);\n    if (this.listViewInstance.contentContainer) {\n      detach(this.listViewInstance.contentContainer);\n    }\n    this.listViewInstance.preRender();\n    // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n    // and then manually adding item using addItem API\n    this.domItemCount = 0;\n    this.listViewInstance.header();\n    this.listViewInstance.setLocalData();\n  };\n  Virtualization.prototype.updateUI = function (element, index, targetElement) {\n    var onChange = this.isNgTemplate() ? this.onNgChange : this.onChange;\n    if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n      var curViewDS = this.listViewInstance.curViewDS[index];\n      // eslint-disable-next-line\n      element.dataset.uid = curViewDS[this.listViewInstance.fields.id] ?\n      // eslint-disable-next-line\n      curViewDS[this.listViewInstance.fields.id] : ListBase.generateId();\n      onChange(curViewDS, element, this);\n    } else {\n      this.updateUiContent(element, index);\n    }\n    this.changeElementAttributes(element, index);\n    if (targetElement) {\n      this.listViewInstance.ulElement.insertBefore(element, targetElement);\n    }\n  };\n  /**\n   * Handles the UI change in vue for the list view.\n   *\n   * @param {DataSource} newData - The new data source for the list view.\n   * @param {ElementContext} listElement - The HTML element context for the list view.\n   * @param {Virtualization} virtualThis - The virtualization context for the list view.\n   */\n  Virtualization.prototype.onChange = function (newData, listElement, virtualThis) {\n    var liItem = ListBase.createListItemFromJson(virtualThis.listViewInstance.createElement,\n    // eslint-disable-next-line\n    [newData], virtualThis.listViewInstance.listBaseOption, null, null, virtualThis.listViewInstance);\n    if (virtualThis.listViewInstance.isReact) {\n      virtualThis.listViewInstance.renderReactTemplates();\n    }\n    while (listElement.lastChild) {\n      listElement.removeChild(listElement.lastChild);\n    }\n    [].slice.call(liItem[0].children).forEach(function (ele) {\n      listElement.appendChild(ele);\n    });\n  };\n  Virtualization.prototype.onNgChange = function (newData, listElement, virtualThis) {\n    // compile given target element with template for new data\n    var templateCompiler = compile(virtualThis.listViewInstance.template);\n    var resultElement = templateCompiler(newData);\n    while (listElement.lastChild) {\n      listElement.removeChild(listElement.lastChild);\n    }\n    listElement.appendChild(resultElement[0]);\n  };\n  Virtualization.prototype.getModuleName = function () {\n    return 'virtualization';\n  };\n  Virtualization.prototype.destroy = function () {\n    this.wireScrollEvent(true);\n    this.topElement = null;\n    this.bottomElement = null;\n  };\n  return Virtualization;\n}();\nexport { Virtualization };","map":{"version":3,"names":["classNames","EventHandler","append","isNullOrUndefined","detach","compile","formatUnit","select","ListBase","DataManager","listElementCount","windowElementCount","Virtualization","instance","elementDifference","listViewInstance","prototype","isNgTemplate","templateRef","isVueFunctionTemplate","isVue","template","uiVirtualization","wireScrollEvent","curViewDS","firstDs","slice","ulElement","curUL","createList","createElement","listBaseOption","contentContainer","className","container","element","appendChild","listItemHeight","firstElementChild","getBoundingClientRect","height","expectedDomItemCount","ValidateItemCount","domItemCount","Object","keys","length","uiFirstIndex","uiLastIndex","otherDs","listItems","createListItemFromJson","liCollection","querySelectorAll","topElement","insertBefore","bottomElement","totalHeight","style","topElementHeight","bottomElementHeight","listDiff","uiIndicesInitialization","destroy","isWindow","onVirtualScroll","onVirtualUiScroll","bind","window","addEventListener","add","removeEventListener","updateUl","remove","updateUlContainer","e","virtualElementContainer","querySelector","liElementHeight","updateLiElementHeight","Math","round","target","documentElement","scrollTop","top","dataSourceLength","parseFloat","itemCount","innerHeight","indexOf","uiIndices","data","i","showCheckBox","fields","isChecked","activeIndices","push","enabled","disabledItemIndices","items","listItem","index","context","viewContainerRef","get","refreshItemHeight","nextSibling","getscrollerHeight","startingHeight","pageYOffset","_a","document","headerEle","scrollPosition","scroll","floor","onLongScroll","onNormalScroll","onUIScrolled","isScrollingDown","elements","updateUI","nextElementSibling","previousElementSibling","updateUiContent","curViewDs","dataSource","dataset","uid","generateId","getElementsByClassName","listItemText","innerHTML","toString","id","text","showIcon","listIcon","iconCss","textContent","groupBy","checkListWrapper","checkboxWrapper","cloneNode","isHeader","classList","checklist","checkbox","checkBoxPosition","changeElementAttributes","disable","display","hiddenItemIndices","checklistElement","selected","focused","removeAttribute","checked","setAttribute","activeIndex","contains","groupListItem","findDSAndIndexFromId","ds","_this","resultJSON","getElementUID","some","getSelectedItems","dataCollection","textCollection","curViewDS_1","indices","map","curViewDS_2","indexArray","dataSource_1","undefined","selectItem","obj","resutJSON","isSelected","splice","getLiFromObjOrElement","setCheckboxLI","setSelectLI","eventArgs","trigger","removeSelect","enableItem","disableItem","showItem","hideItem","removeItem","removeUiItem","listDataSource","localData","setViewDataSource","li","Array","call","checkedItem","addUiItem","changeUiIndices","liItem","lastElementChild","previousSibling","scrollTo","increment","ind","addItem","currentItem","addItemAtIndex","groupTemplate","itemCreated","createUIItem","findItemFromDS","index_1","createAndInjectNewItem","index_2","itemData","targetEle","args","item","templateData","curData","renderCheckbox","virtualCheckBox","outerHTML","div_1","commonTemplate","templateFunction","nodes","isReact","renderReactTemplates","forEach","ele","children","childNodes","lastChild","removeChild","reRenderUiVirtualization","preRender","header","setLocalData","targetElement","onChange","onNgChange","newData","listElement","virtualThis","templateCompiler","resultElement","getModuleName"],"sources":["/Users/nicolechan/Desktop/FYP_Test/node_modules/@syncfusion/ej2-lists/src/list-view/virtualization.js"],"sourcesContent":["import { classNames } from './list-view';\nimport { EventHandler, append, isNullOrUndefined, detach, compile, formatUnit, select } from '@syncfusion/ej2-base';\nimport { ListBase } from '../common/list-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar listElementCount = 1.5;\nvar windowElementCount = 3;\nvar Virtualization = /** @class */ (function () {\n    function Virtualization(instance) {\n        this.elementDifference = 0;\n        this.listViewInstance = instance;\n    }\n    /**\n     * For internal use only.\n     *\n     * @private\n     */\n    Virtualization.prototype.isNgTemplate = function () {\n        return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n    };\n    /**\n     * Checks if the platform is a Vue and its template property is a function type.\n     *\n     * @returns {boolean} indicating the result of the check\n     */\n    Virtualization.prototype.isVueFunctionTemplate = function () {\n        return this.listViewInstance.isVue && typeof this.listViewInstance.template === 'function';\n    };\n    /**\n     * For internal use only.\n     *\n     * @private\n     */\n    Virtualization.prototype.uiVirtualization = function () {\n        this.wireScrollEvent(false);\n        var curViewDS = this.listViewInstance.curViewDS;\n        var firstDs = curViewDS.slice(0, 1);\n        this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList(\n        // eslint-disable-next-line\n        this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption, null, this.listViewInstance);\n        this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', { className: classNames.container });\n        this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n        this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n        this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n        this.expectedDomItemCount = this.ValidateItemCount(10000);\n        this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n        this.uiFirstIndex = 0;\n        this.uiLastIndex = this.domItemCount - 1;\n        var otherDs = curViewDS.slice(1, this.domItemCount);\n        var listItems = ListBase.createListItemFromJson(\n        // eslint-disable-next-line\n        this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n        append(listItems, this.listViewInstance.ulElement);\n        this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        this.topElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n        this.bottomElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n        this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n        this.topElement.style.height = 0 + 'px';\n        this.bottomElement.style.height = this.totalHeight + 'px';\n        this.topElementHeight = 0;\n        this.bottomElementHeight = this.totalHeight;\n        this.listDiff = 0;\n        this.uiIndicesInitialization();\n    };\n    Virtualization.prototype.wireScrollEvent = function (destroy) {\n        if (!destroy) {\n            if (this.listViewInstance.isWindow) {\n                this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n                window.addEventListener('scroll', this.onVirtualScroll);\n            }\n            else {\n                EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n            }\n        }\n        else {\n            if (this.listViewInstance.isWindow === true) {\n                window.removeEventListener('scroll', this.onVirtualScroll);\n                window.removeEventListener('scroll', this.updateUl);\n            }\n            else {\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.updateUlContainer);\n            }\n        }\n    };\n    Virtualization.prototype.updateUlContainer = function (e) {\n        var listDiff;\n        var virtualElementContainer = this.listViewInstance.ulElement.querySelector('.' + classNames.virtualElementContainer);\n        if (isNullOrUndefined(this.listViewInstance.liElementHeight)) {\n            this.listViewInstance.updateLiElementHeight();\n        }\n        if (this.listViewInstance.isWindow) {\n            // eslint-disable-next-line\n            listDiff = Math.round(e.target.documentElement.scrollTop / this.listViewInstance.liElementHeight) - 2;\n        }\n        else {\n            // eslint-disable-next-line\n            listDiff = Math.round(e.target.scrollTop / this.listViewInstance.liElementHeight) - 2;\n        }\n        if (((listDiff - 1) * this.listViewInstance.liElementHeight) < 0) {\n            virtualElementContainer.style.top = '0px';\n        }\n        else {\n            virtualElementContainer.style.top = (listDiff) * this.listViewInstance.liElementHeight + 'px';\n        }\n    };\n    Virtualization.prototype.ValidateItemCount = function (dataSourceLength) {\n        var height = parseFloat(formatUnit(this.listViewInstance.height));\n        var itemCount;\n        if (this.listViewInstance.isWindow) {\n            itemCount = Math.round((window.innerHeight / this.listItemHeight) * windowElementCount);\n        }\n        else {\n            if (typeof this.listViewInstance.height === 'string' && this.listViewInstance.height.indexOf('%') !== -1) {\n                // eslint-disable-next-line max-len\n                itemCount = Math.round((this.listViewInstance.element.getBoundingClientRect().height / this.listItemHeight) * listElementCount);\n            }\n            else {\n                itemCount = Math.round((height / this.listItemHeight) * listElementCount);\n            }\n        }\n        if (itemCount > dataSourceLength) {\n            itemCount = dataSourceLength;\n        }\n        return itemCount;\n    };\n    Virtualization.prototype.uiIndicesInitialization = function () {\n        this.uiIndices = { 'activeIndices': [], 'disabledItemIndices': [], 'hiddenItemIndices': [] };\n        var data = this.listViewInstance.curViewDS;\n        for (var i = 0; i < data.length; i++) {\n            if (this.listViewInstance.showCheckBox && data[i][this.listViewInstance.fields.isChecked]) {\n                this.uiIndices.activeIndices.push(i);\n            }\n            // eslint-disable-next-line\n            if (!isNullOrUndefined(data[i][this.listViewInstance.fields.enabled]) &&\n                !data[i][this.listViewInstance.fields.enabled]) {\n                // eslint-disable-next-line\n                (this.uiIndices.disabledItemIndices.push(i));\n            }\n        }\n        if (this.isNgTemplate()) {\n            var items = this.listViewInstance.element.querySelectorAll('.' + classNames.listItem);\n            for (var index = 0; index < items.length; index++) {\n                items[index].context = this.listViewInstance.viewContainerRef.get(index).context;\n            }\n        }\n    };\n    Virtualization.prototype.refreshItemHeight = function () {\n        if (this.listViewInstance.curViewDS.length) {\n            var curViewDS = this.listViewInstance.curViewDS;\n            this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n            this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n            this.bottomElementHeight = this.totalHeight;\n            this.bottomElement.style.height = this.totalHeight + 'px';\n        }\n    };\n    Virtualization.prototype.getscrollerHeight = function (startingHeight) {\n        return this.listViewInstance.isWindow ? (((pageYOffset - startingHeight) <= 0) ? 0 :\n            (pageYOffset - startingHeight)) : ((this.listViewInstance.element.scrollTop - startingHeight) <= 0) ? 0 :\n            (this.listViewInstance.element.scrollTop - startingHeight);\n    };\n    Virtualization.prototype.onVirtualUiScroll = function (e) {\n        var _a;\n        var startingHeight;\n        var curViewDS = this.listViewInstance.curViewDS;\n        this.listItemHeight = select('.e-list-item', this.listViewInstance.element).getBoundingClientRect().height;\n        this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n        if (this.listViewInstance.isWindow) {\n            startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top -\n                document.documentElement.getBoundingClientRect().top;\n        }\n        else {\n            startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n        }\n        this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n        var scroll = this.getscrollerHeight(startingHeight);\n        this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n        this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n        _a = scroll <= this.totalHeight ?\n            [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0], this.topElementHeight = _a[0], this.bottomElementHeight = _a[1];\n        if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n            this.topElement.style.height = this.topElementHeight + 'px';\n            this.bottomElement.style.height = this.bottomElementHeight + 'px';\n            if (scroll > this.scrollPosition) {\n                var listDiff = Math.round(((this.topElementHeight / this.listItemHeight) - this.listDiff));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, true);\n                }\n                else {\n                    this.onNormalScroll(listDiff, true);\n                }\n            }\n            else {\n                var listDiff = Math.round((this.listDiff - (this.topElementHeight / this.listItemHeight)));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, false);\n                }\n                else {\n                    this.onNormalScroll(listDiff, false);\n                }\n            }\n        }\n        this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n        if (typeof this.listViewInstance.onUIScrolled === 'function') {\n            this.listViewInstance.onUIScrolled();\n        }\n        this.scrollPosition = scroll;\n    };\n    Virtualization.prototype.onLongScroll = function (listDiff, isScrollingDown) {\n        var index = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n        var elements = this.listViewInstance.ulElement.querySelectorAll('li');\n        for (var i = 0; i < elements.length; i++) {\n            this.updateUI(elements[i], index);\n            index++;\n        }\n        this.uiLastIndex = isScrollingDown ? (this.uiLastIndex + listDiff) : (this.uiLastIndex - listDiff);\n        this.uiFirstIndex = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n    };\n    Virtualization.prototype.onNormalScroll = function (listDiff, isScrollingDown) {\n        if (isScrollingDown) {\n            for (var i = 0; i < listDiff; i++) {\n                var index = ++this.uiLastIndex;\n                this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n                this.uiFirstIndex++;\n            }\n        }\n        else {\n            for (var i = 0; i < listDiff; i++) {\n                var index = --this.uiFirstIndex;\n                var target = this.topElement.nextSibling;\n                this.updateUI(this.bottomElement.previousElementSibling, index, target);\n                this.uiLastIndex--;\n            }\n        }\n    };\n    Virtualization.prototype.updateUiContent = function (element, index) {\n        // eslint-disable-next-line\n        var curViewDs = this.listViewInstance.curViewDS;\n        if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n            typeof this.listViewInstance.dataSource[0] === 'number') {\n            element.dataset.uid = ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                this.listViewInstance.curViewDS[index].toString();\n        }\n        else {\n            // eslint-disable-next-line\n            element.dataset.uid = (curViewDs[index][this.listViewInstance.fields.id]) ?\n                // eslint-disable-next-line\n                (curViewDs[index][this.listViewInstance.fields.id]) : ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                // eslint-disable-next-line\n                (curViewDs[index][this.listViewInstance.fields.text]);\n        }\n        if (this.listViewInstance.showIcon) {\n            if (element.querySelector('.' + classNames.listIcon)) {\n                detach(element.querySelector('.' + classNames.listIcon));\n            }\n            if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n                var textContent = element.querySelector('.' + classNames.textContent);\n                var target = this.listViewInstance.createElement('div', {\n                    className: classNames.listIcon + ' ' +\n                        this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n                });\n                textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n            }\n        }\n        if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n            if (!this.checkListWrapper) {\n                this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n            }\n            var textContent = element.querySelector('.' + classNames.textContent);\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.remove(classNames.checklist);\n                    textContent.classList.remove(classNames.checkbox);\n                    detach(element.querySelector('.' + classNames.checkboxWrapper));\n                }\n            }\n            else {\n                if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.add(classNames.checklist);\n                    textContent.classList.add(classNames.checkbox);\n                    if (this.listViewInstance.checkBoxPosition === 'Left') {\n                        textContent.classList.add('e-checkbox-left');\n                    }\n                    else {\n                        textContent.classList.add('e-checkbox-right');\n                    }\n                    textContent.append(this.checkListWrapper.cloneNode(true));\n                }\n            }\n        }\n    };\n    Virtualization.prototype.changeElementAttributes = function (element, index) {\n        element.classList.remove(classNames.disable);\n        if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n            element.classList.add(classNames.disable);\n        }\n        element.style.display = '';\n        if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n            element.style.display = 'none';\n        }\n        if (this.listViewInstance.showCheckBox) {\n            var checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n            element.classList.remove(classNames.selected);\n            element.classList.remove(classNames.focused);\n            if (checklistElement) {\n                checklistElement.removeAttribute('aria-checked');\n                checklistElement.firstElementChild.classList.remove(classNames.checked);\n            }\n            if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                checklistElement.firstElementChild.classList.add(classNames.checked);\n                checklistElement.setAttribute('aria-checked', 'true');\n                if (this.activeIndex === index) {\n                    element.classList.add(classNames.focused);\n                }\n            }\n        }\n        else {\n            element.classList.remove(classNames.selected);\n            element.removeAttribute('aria-selected');\n            if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                element.setAttribute('aria-selected', 'true');\n            }\n        }\n        if (this.listViewInstance.fields.groupBy) {\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.classList.contains(classNames.listItem)) {\n                    element.classList.remove(classNames.listItem);\n                    element.setAttribute('role', 'group');\n                    element.classList.add(classNames.groupListItem);\n                }\n            }\n            else {\n                if (element.classList.contains(classNames.groupListItem)) {\n                    element.classList.remove(classNames.groupListItem);\n                    element.setAttribute('role', 'listitem');\n                    element.classList.add(classNames.listItem);\n                }\n            }\n        }\n    };\n    Virtualization.prototype.findDSAndIndexFromId = function (ds, fields) {\n        var _this = this;\n        var resultJSON = {};\n        fields = this.listViewInstance.getElementUID(fields);\n        if (!isNullOrUndefined(fields)) {\n            ds.some(function (data, index) {\n                if ((fields[_this.listViewInstance.fields.id] &&\n                    // eslint-disable-next-line\n                    fields[_this.listViewInstance.fields.id]\n                        // eslint-disable-next-line\n                        === (data[_this.listViewInstance.fields.id] && data[_this.listViewInstance.fields.id]) || fields === data)) {\n                    resultJSON.index = index;\n                    resultJSON.data = data;\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            });\n        }\n        return resultJSON;\n    };\n    Virtualization.prototype.getSelectedItems = function () {\n        var _this = this;\n        if (!isNullOrUndefined(this.activeIndex) || (this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length)) {\n            var dataCollection = [];\n            var textCollection = [];\n            if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                typeof this.listViewInstance.dataSource[0] === 'number') {\n                var curViewDS_1 = this.listViewInstance.curViewDS;\n                if (this.listViewInstance.showCheckBox) {\n                    var indices = this.uiIndices.activeIndices;\n                    for (var i = 0; i < indices.length; i++) {\n                        dataCollection.push(curViewDS_1[indices[i]]);\n                    }\n                    return {\n                        text: dataCollection,\n                        // eslint-disable-next-line\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return _this.listViewInstance.dataSource.indexOf(curViewDS_1[index]);\n                        })\n                    };\n                }\n                else {\n                    return {\n                        text: curViewDS_1[this.activeIndex],\n                        data: curViewDS_1[this.activeIndex],\n                        index: this.listViewInstance.dataSource.indexOf(curViewDS_1[this.activeIndex])\n                    };\n                }\n            }\n            else {\n                var curViewDS_2 = this.listViewInstance.curViewDS;\n                var text = this.listViewInstance.fields.text;\n                if (this.listViewInstance.showCheckBox) {\n                    var indexArray = this.uiIndices.activeIndices;\n                    for (var i = 0; i < indexArray.length; i++) {\n                        textCollection.push(curViewDS_2[indexArray[i]][\"\" + text]);\n                        // eslint-disable-next-line\n                        dataCollection.push(curViewDS_2[indexArray[i]]);\n                    }\n                    // eslint-disable-next-line\n                    var dataSource_1 = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS_2 : this.listViewInstance.dataSource;\n                    return {\n                        text: textCollection,\n                        // eslint-disable-next-line\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return dataSource_1.indexOf(curViewDS_2[index]);\n                        })\n                    };\n                }\n                else {\n                    // eslint-disable-next-line\n                    var dataSource = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS_2 : this.listViewInstance.dataSource;\n                    return {\n                        text: curViewDS_2[this.activeIndex][this.listViewInstance.fields.text],\n                        // eslint-disable-next-line\n                        data: curViewDS_2[this.activeIndex],\n                        index: dataSource.indexOf(curViewDS_2[this.activeIndex])\n                    };\n                }\n            }\n        }\n        else {\n            return undefined;\n        }\n    };\n    Virtualization.prototype.selectItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            var isSelected = this.activeIndex === resutJSON.index;\n            var isChecked = void 0;\n            this.activeIndex = resutJSON.index;\n            if (this.listViewInstance.showCheckBox) {\n                if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n                    isChecked = true;\n                    this.uiIndices.activeIndices.push(resutJSON.index);\n                }\n                else {\n                    isChecked = false;\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n                }\n                if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n                    this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n                }\n            }\n            if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n                if (this.listViewInstance.showCheckBox) {\n                    this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n                else {\n                    this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n            }\n            else {\n                // eslint-disable-next-line\n                var eventArgs = void 0;\n                if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                    typeof this.listViewInstance.dataSource[0] === 'number') {\n                    eventArgs = {\n                        text: this.listViewInstance.curViewDS[this.activeIndex],\n                        data: this.listViewInstance.curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                else {\n                    var curViewDS = this.listViewInstance.curViewDS;\n                    eventArgs = {\n                        text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n                        data: curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                if (this.listViewInstance.showCheckBox) {\n                    eventArgs.isChecked = isChecked;\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n                else if (!isSelected) {\n                    this.listViewInstance.removeSelect();\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n            }\n        }\n        else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n            this.listViewInstance.removeSelect();\n            this.activeIndex = undefined;\n        }\n    };\n    Virtualization.prototype.enableItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n        }\n    };\n    Virtualization.prototype.disableItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.disabledItemIndices.push(resutJSON.index);\n        }\n    };\n    Virtualization.prototype.showItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n        }\n    };\n    Virtualization.prototype.hideItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n        }\n    };\n    Virtualization.prototype.removeItem = function (obj) {\n        var dataSource;\n        var curViewDS = this.listViewInstance.curViewDS;\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            dataSource = resutJSON.data;\n            if (curViewDS[resutJSON.index - 1] &&\n                curViewDS[resutJSON.index - 1].isHeader &&\n                (curViewDS[resutJSON.index - 1])\n                    .items.length === 1) {\n                this.removeUiItem(resutJSON.index - 1);\n                this.removeUiItem(resutJSON.index - 1);\n            }\n            else {\n                this.removeUiItem(resutJSON.index);\n            }\n        }\n        var listDataSource = this.listViewInstance.dataSource instanceof DataManager\n            ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n        var index = listDataSource.indexOf(dataSource);\n        if (index !== -1) {\n            listDataSource.splice(index, 1);\n            this.listViewInstance.setViewDataSource(listDataSource);\n        }\n        // recollect all the list item into collection\n        this.listViewInstance.liCollection =\n            this.listViewInstance.curUL.querySelectorAll('li');\n    };\n    // eslint-disable-next-line\n    Virtualization.prototype.setCheckboxLI = function (li, e) {\n        var index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        if (li.classList.contains(classNames.selected)) {\n            if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n                this.uiIndices.activeIndices.push(index);\n            }\n        }\n        else {\n            this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n        }\n    };\n    // eslint-disable-next-line\n    Virtualization.prototype.setSelectLI = function (li, e) {\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    };\n    Virtualization.prototype.checkedItem = function (checked) {\n        if (checked) {\n            this.uiIndices.activeIndices = [];\n            this.activeIndex = undefined;\n            var data = this.listViewInstance.curViewDS;\n            for (var index = 0; index < data.length; index++) {\n                if (!data[index].isHeader) {\n                    this.uiIndices.activeIndices.push(index);\n                }\n            }\n        }\n        else {\n            this.activeIndex = undefined;\n            this.uiIndices.activeIndices = [];\n        }\n    };\n    Virtualization.prototype.addUiItem = function (index) {\n        // virtually new add list item based on the scollbar position\n        // if the scroll bar is at the top, just pretend the new item has been added since no UI\n        // change is required for the item that has been added at last but when scroll bar is at the bottom\n        // just detach top and inject into bottom to mimic new item is added\n        var curViewDs = this.listViewInstance.curViewDS;\n        this.changeUiIndices(index, true);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex++;\n        }\n        if (this.listViewInstance.showCheckBox &&\n            curViewDs[index][this.listViewInstance.fields.isChecked]) {\n            this.uiIndices.activeIndices.push(index);\n        }\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n            this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        }\n        if (parseFloat(this.bottomElement.style.height)) {\n            var liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n            var target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            if (target) {\n                this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n                this.updateUI(liItem, index, target);\n            }\n        }\n        else {\n            var liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n            var target = void 0;\n            if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n                target = this.listViewInstance.curUL.lastElementChild;\n            }\n            else {\n                target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                    this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            }\n            this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n            this.uiFirstIndex++;\n            this.uiLastIndex++;\n            if (target) {\n                this.updateUI(liItem, index, target);\n                if (this.listViewInstance.isWindow === true) {\n                    window.scrollTo(0, (pageYOffset + this.listItemHeight));\n                }\n                else {\n                    this.listViewInstance.element.scrollTop += this.listItemHeight;\n                }\n            }\n        }\n        this.totalHeight += this.listItemHeight;\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    };\n    Virtualization.prototype.removeUiItem = function (index) {\n        this.totalHeight -= this.listItemHeight;\n        var curViewDS = this.listViewInstance.curViewDS[index];\n        var liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n        this.listViewInstance.curViewDS.splice(index, 1);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex--;\n        }\n        if (liItem) {\n            if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n                detach(liItem);\n                this.domItemCount--;\n                this.uiLastIndex--;\n                this.totalHeight = 0;\n            }\n            else {\n                if (liItem.classList.contains(classNames.disable)) {\n                    liItem.classList.remove(classNames.disable);\n                    this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n                }\n                if (liItem.style.display === 'none') {\n                    liItem.style.display = '';\n                    this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n                }\n                if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n                    var checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n                    checklistElement.removeAttribute('aria-checked');\n                    checklistElement.firstElementChild.classList.remove(classNames.checked);\n                    if (liItem.classList.contains(classNames.focused)) {\n                        liItem.classList.remove(classNames.focused);\n                        this.activeIndex = undefined;\n                    }\n                }\n                else if (liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.activeIndex = undefined;\n                }\n                if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else if (parseFloat(this.bottomElement.style.height)) {\n                    this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else {\n                    this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, (this.uiFirstIndex - 1), this.topElement.nextSibling);\n                    this.uiLastIndex--;\n                    this.uiFirstIndex--;\n                }\n            }\n        }\n        this.changeUiIndices(index, false);\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    };\n    Virtualization.prototype.changeUiIndices = function (index, increment) {\n        var keys = Object.keys(this.uiIndices);\n        for (var ind = 0; ind < keys.length; ind++) {\n            this.uiIndices[keys[ind]] = this.uiIndices[keys[ind]].map(function (i) {\n                if (i >= index) {\n                    return increment ? ++i : --i;\n                }\n                else {\n                    return i;\n                }\n            });\n        }\n    };\n    Virtualization.prototype.addItem = function (data, fields, dataSource, index) {\n        for (var i = 0; i < data.length; i++) {\n            var currentItem = data[i];\n            // push the given data to main data array\n            dataSource = this.listViewInstance.addItemAtIndex(index, dataSource, currentItem);\n            // recalculate all the group data or other datasource related things\n            this.listViewInstance.setViewDataSource(dataSource);\n            // render list items for first time due to no datasource present earlier\n            if (!this.domItemCount) {\n                // fresh rendering for first time\n                if ((this.listViewInstance.template || this.listViewInstance.groupTemplate) && !this.isNgTemplate()) {\n                    this.listViewInstance.listBaseOption.template = null;\n                    this.listViewInstance.listBaseOption.groupTemplate = null;\n                    this.listViewInstance.listBaseOption.itemCreated = this.createUIItem.bind(this);\n                }\n                this.uiVirtualization();\n                // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n            }\n            else if (this.domItemCount < this.expectedDomItemCount) {\n                var ds = this.listViewInstance.findItemFromDS(dataSource, fields);\n                if (ds instanceof Array) {\n                    if (this.listViewInstance.ulElement) {\n                        var index_1 = this.listViewInstance.curViewDS.indexOf(currentItem);\n                        // inject new list item into DOM\n                        this.createAndInjectNewItem(currentItem, index_1);\n                        // check for group header item\n                        var curViewDS = this.listViewInstance.curViewDS[index_1 - 1];\n                        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                            // target group item index in datasource\n                            --index_1;\n                            // inject new group header into DOM for previously created list item\n                            this.createAndInjectNewItem(curViewDS, index_1);\n                        }\n                    }\n                    // recollect all the list item into collection\n                    this.listViewInstance.liCollection =\n                        this.listViewInstance.curUL.querySelectorAll('li');\n                }\n            }\n            else {\n                // eslint-disable-next-line\n                var index_2 = this.listViewInstance.curViewDS.indexOf(currentItem);\n                // virtually new add list item based on the scollbar position\n                this.addUiItem(index_2);\n                // check for group header item needs to be added\n                var curViewDS = this.listViewInstance.curViewDS[index_2 - 1];\n                if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                    this.addUiItem(index_2 - 1);\n                }\n            }\n        }\n    };\n    Virtualization.prototype.createAndInjectNewItem = function (itemData, index) {\n        // generate li item for given datasource\n        var target;\n        var li = ListBase.createListItemFromJson(this.listViewInstance.createElement, \n        // eslint-disable-next-line\n        [itemData], this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n        // check for target element whether to insert before last item or group item\n        if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n            target = this.listViewInstance.curUL.lastElementChild;\n        }\n        else {\n            // target group header's first child item to append its header\n            target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n        }\n        if (this.listViewInstance.fields.groupBy && this.listViewInstance.curViewDS[index + 1] && this.listViewInstance.curViewDS[index + 1].isHeader) {\n            var targetEle = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index - 1]);\n            if (targetEle) {\n                target = targetEle.nextElementSibling;\n            }\n        }\n        // insert before the target element\n        this.listViewInstance.ulElement.insertBefore(li[0], target);\n        // increment internal DOM count, last index count for new element\n        this.domItemCount++;\n        if (this.bottomElementHeight <= 0) {\n            this.uiLastIndex++;\n        }\n        // recalculate the current item height, to avoid jumpy scroller\n        this.refreshItemHeight();\n    };\n    Virtualization.prototype.createUIItem = function (args) {\n        if (!args.item.classList.contains('e-list-group-item')) {\n            this.templateData = args.curData.isHeader ? args.curData.items[0] :\n                args.curData;\n            if (this.listViewInstance.showCheckBox) {\n                // eslint-disable-next-line\n                this.listViewInstance.renderCheckbox(args);\n                if ((!isNullOrUndefined(this.listViewInstance.virtualCheckBox)) &&\n                    (!isNullOrUndefined(this.listViewInstance.virtualCheckBox.outerHTML))) {\n                    var div_1 = document.createElement('div');\n                    var commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' +\n                        '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n                    var templateFunction = compile(this.listViewInstance.template || commonTemplate, this.listViewInstance);\n                    var nodes = templateFunction(this.templateData, this.listViewInstance);\n                    if (this.listViewInstance.template && this.listViewInstance.isReact) {\n                        this.listViewInstance.renderReactTemplates();\n                    }\n                    [].slice.call(nodes).forEach(function (ele) {\n                        div_1.appendChild(ele);\n                    });\n                    if (div_1.children && div_1.children[0]) {\n                        div_1.children[0].classList.add('e-checkbox');\n                        if (this.listViewInstance.checkBoxPosition === 'Left') {\n                            div_1.children[0].classList.add('e-checkbox-left');\n                        }\n                        else {\n                            div_1.children[0].classList.add('e-checkbox-right');\n                        }\n                        if (this.listViewInstance.checkBoxPosition === 'Left') {\n                            div_1.children[0].insertBefore(this.listViewInstance.virtualCheckBox, div_1.childNodes[0].children[0]);\n                        }\n                        else {\n                            div_1.children[0].appendChild(this.listViewInstance.virtualCheckBox);\n                        }\n                        while (args.item.lastChild) {\n                            args.item.removeChild(args.item.lastChild);\n                        }\n                        [].slice.call(div_1.children).forEach(function (ele) {\n                            args.item.appendChild(ele);\n                        });\n                    }\n                }\n            }\n        }\n    };\n    Virtualization.prototype.reRenderUiVirtualization = function () {\n        this.wireScrollEvent(true);\n        if (this.listViewInstance.contentContainer) {\n            detach(this.listViewInstance.contentContainer);\n        }\n        this.listViewInstance.preRender();\n        // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n        // and then manually adding item using addItem API\n        this.domItemCount = 0;\n        this.listViewInstance.header();\n        this.listViewInstance.setLocalData();\n    };\n    Virtualization.prototype.updateUI = function (element, index, targetElement) {\n        var onChange = this.isNgTemplate() ? this.onNgChange : this.onChange;\n        if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n            var curViewDS = this.listViewInstance.curViewDS[index];\n            // eslint-disable-next-line\n            element.dataset.uid = (curViewDS[this.listViewInstance.fields.id]) ?\n                // eslint-disable-next-line\n                (curViewDS[this.listViewInstance.fields.id]) : ListBase.generateId();\n            onChange(curViewDS, element, this);\n        }\n        else {\n            this.updateUiContent(element, index);\n        }\n        this.changeElementAttributes(element, index);\n        if (targetElement) {\n            this.listViewInstance.ulElement.insertBefore(element, targetElement);\n        }\n    };\n    /**\n     * Handles the UI change in vue for the list view.\n     *\n     * @param {DataSource} newData - The new data source for the list view.\n     * @param {ElementContext} listElement - The HTML element context for the list view.\n     * @param {Virtualization} virtualThis - The virtualization context for the list view.\n     */\n    Virtualization.prototype.onChange = function (newData, listElement, virtualThis) {\n        var liItem = ListBase.createListItemFromJson(virtualThis.listViewInstance.createElement, \n        // eslint-disable-next-line\n        [newData], virtualThis.listViewInstance.listBaseOption, null, null, virtualThis.listViewInstance);\n        if (virtualThis.listViewInstance.isReact) {\n            virtualThis.listViewInstance.renderReactTemplates();\n        }\n        while (listElement.lastChild) {\n            listElement.removeChild(listElement.lastChild);\n        }\n        [].slice.call(liItem[0].children).forEach(function (ele) {\n            listElement.appendChild(ele);\n        });\n    };\n    Virtualization.prototype.onNgChange = function (newData, listElement, virtualThis) {\n        // compile given target element with template for new data\n        var templateCompiler = compile(virtualThis.listViewInstance.template);\n        var resultElement = templateCompiler(newData);\n        while (listElement.lastChild) {\n            listElement.removeChild(listElement.lastChild);\n        }\n        listElement.appendChild(resultElement[0]);\n    };\n    Virtualization.prototype.getModuleName = function () {\n        return 'virtualization';\n    };\n    Virtualization.prototype.destroy = function () {\n        this.wireScrollEvent(true);\n        this.topElement = null;\n        this.bottomElement = null;\n    };\n    return Virtualization;\n}());\nexport { Virtualization };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}