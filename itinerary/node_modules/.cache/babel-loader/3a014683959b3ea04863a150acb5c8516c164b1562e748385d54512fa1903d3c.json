{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\n// import { onMounted, ref } from \"vue\";\n// import Password from 'primevue/password';\n// import jwt_decode from \"jwt-decode\";\nexport default {\n  name: \"LoginView\",\n  components: {},\n  setup() {},\n  data() {\n    return {\n      users: [],\n      username: \"\",\n      password: \"\"\n    };\n  },\n  //   async created() {\n  //     const response = await axios.get(\"/api/login\");\n  //     const users = response.data;\n  //     this.users = users;\n  //   },\n  methods: {\n    async login() {\n      const response = await axios.post(\"/api/login\", {\n        users: this.user,\n        username: this.username,\n        password: this.password\n      });\n      console.log(response);\n      if (response.status == 201) {\n        alert(response.data);\n        this.$router.push(\"/login\");\n      } else {\n        alert(response.data);\n      }\n    }\n    // async login() {\n\n    //   const credential = ref({});\n    //   console.log(credential.value);\n\n    //   var response = await axios\n    //     .post(\"/api/login\", {\n    //       username: this.username,\n    //       password: this.password,\n    //     })\n    //     .then(function (response) {\n    //       var data = response;\n    //       console.log(data)\n    //       alert(JSON.stringify(data));\n\n    //       if (response.status == 200) {\n    //         alert(\"login Successfully.\");\n    //         location.assign(\"/\");\n    //       }\n    //     })\n    //     .catch(function (error) {\n    //       alert(error.response.data);\n    //       console.log(error.response);\n    //     });\n    //   console.log(response);\n\n    // if (response) {\n    //         var data = await response\n    //         alert(JSON.stringify(data))\n    //         alert(\"login Successfully.\")\n    //         location.assign(\"/\")\n    //     } else {\n    //         alert(response.statusText)\n    //     }\n\n    // localStorage.setItem('token', response.data.token)\n    // if(response.ok){\n    //     location.assign('/')\n    // }\n  }\n};","map":{"version":3,"names":["axios","name","components","setup","data","users","username","password","methods","login","response","post","user","console","log","status","alert","$router","push"],"sources":["/Users/nicolechan/Desktop/FYP_Test/itinerary/src/pages/LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"bg\">\n    <!-- <h1>Login Page</h1> -->\n    <div class=\"loginForm\">\n      <form @submit.prevent=\"login()\">\n        <h1>E-Trip</h1>\n        <label>Username</label>\n        <input\n          type=\"text\"\n          v-model=\"username\"\n          placeholder=\"username\"\n          name=\"username\"\n        />\n\n        <label>Password</label>\n        <input\n          type=\"password\"\n          v-model=\"password\"\n          placeholder=\"password\"\n          name=\"password\"\n        />\n\n        <button type=\"submit\" class=\"btn\">Login</button>\n        <p>\n          Don't have an account yet?\n          <router-link to=\"/register\">Register</router-link>\n        </p>\n      </form>\n    </div>\n\n    <!-- <p>{{ users }}</p> -->\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n// import { onMounted, ref } from \"vue\";\n// import Password from 'primevue/password';\n// import jwt_decode from \"jwt-decode\";\nexport default {\n  name: \"LoginView\",\n  components: {},\n  setup() {\n        \n    },\n  data() {\n    return {\n      users: [],\n      username: \"\",\n      password: \"\",\n    };\n  },\n  //   async created() {\n  //     const response = await axios.get(\"/api/login\");\n  //     const users = response.data;\n  //     this.users = users;\n  //   },\n  methods: {\n    async login() {\n      const response = await axios.post(\"/api/login\", {\n        users: this.user,\n        username: this.username,\n        password: this.password,\n      });\n\n      console.log(response);\n      if(response.status==201){\n        alert(response.data);\n        this.$router.push(\"/login\");\n      }else{\n        alert(response.data);\n      }\n    }\n    // async login() {\n\n    //   const credential = ref({});\n    //   console.log(credential.value);\n\n    //   var response = await axios\n    //     .post(\"/api/login\", {\n    //       username: this.username,\n    //       password: this.password,\n    //     })\n    //     .then(function (response) {\n    //       var data = response;\n    //       console.log(data)\n    //       alert(JSON.stringify(data));\n          \n    //       if (response.status == 200) {\n    //         alert(\"login Successfully.\");\n    //         location.assign(\"/\");\n    //       }\n    //     })\n    //     .catch(function (error) {\n    //       alert(error.response.data);\n    //       console.log(error.response);\n    //     });\n    //   console.log(response);\n\n      // if (response) {\n      //         var data = await response\n      //         alert(JSON.stringify(data))\n      //         alert(\"login Successfully.\")\n      //         location.assign(\"/\")\n      //     } else {\n      //         alert(response.statusText)\n      //     }\n\n      // localStorage.setItem('token', response.data.token)\n      // if(response.ok){\n      //     location.assign('/')\n      // }\n    },\n};\n</script>\n\n<style scoped>\n.bg {\n  background-color: #016a70;\n  background-image: url(\"@/assets/Images/City.jpg\");\n  background-size: cover;\n  /* filter:brightness(70%); */\n  margin: auto;\n  display: flex;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n}\n.btn {\n  background-color: #016a70;\n  border-color: #016a70;\n  color: #ffffdd;\n  --bs-btn-line-height: 1.3;\n  margin: 5%;\n}\n\n.btn:hover {\n  background-color: #ffffdd;\n  color: #016a70;\n}\n.loginForm {\n  width: 50%;\n  height: 400px;\n  background-color: #fff;\n  box-shadow: 0 0 20px 10px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  display: flex;\n  overflow: hidden;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  /* margin-top: 30px; */\n}\nlabel {\n  display: block;\n  margin-left: 0;\n  text-align: left;\n  margin-top: 20px;\n  /* font-weight: 600; */\n}\ninput {\n  display: block;\n  margin: 3% auto;\n  width: 100%;\n}\np {\n  display: block;\n}\nh1 {\n  font-family: rabikiso;\n}\n</style>\n"],"mappings":";AAmCA,OAAOA,KAAI,MAAO,OAAO;AACzB;AACA;AACA;AACA,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE,CAAC,CAAC;EACdC,KAAKA,CAAA,EAAG,CAEN,CAAC;EACHC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACD;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,IAAI,CAAC,YAAY,EAAE;QAC9CN,KAAK,EAAE,IAAI,CAACO,IAAI;QAChBN,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC,CAAC;MAEFM,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACrB,IAAGA,QAAQ,CAACK,MAAM,IAAE,GAAG,EAAC;QACtBC,KAAK,CAACN,QAAQ,CAACN,IAAI,CAAC;QACpB,IAAI,CAACa,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC7B,CAAC,MAAI;QACHF,KAAK,CAACN,QAAQ,CAACN,IAAI,CAAC;MACtB;IACF;IACA;;IAEA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;EACF;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}