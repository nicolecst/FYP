{"ast":null,"code":"import '@fortawesome/fontawesome-free/css/all.css';\nimport { ref } from 'vue';\nexport default {\n  name: \"PopupRate\",\n  props: [\"togglePopup\", \"selectedRating\", \"comment\"],\n  emit: ['update:selectedRating', 'update:comment'],\n  //   data() {\n  //     return {\n  //       stars: 5,\n  //       selectedRating: 0\n  //     };\n  //   },\n  methods: {\n    // highlight(rating) {\n    //   this.selectedRating = rating;\n    // },\n    reset() {\n      this.selectedRating = 0;\n    }\n    // r(rating) {\n    //   this.selectedRating = rating;\n    //   // Perform any additional logic or actions here, such as sending the rating to the server\n    // },\n    // starClass(index) {\n    //   if (this.selectedRating >= index + 1) {\n    //     return ['fas', 'star'];\n    //   } else {\n    //     return ['far', 'star'];\n    //   }\n    // }\n  },\n  setup(props) {\n    const stars = 5;\n    const highlight = ref(props.selectedRating);\n    const r = rating => {\n      highlight.value = rating;\n      // Perform any additional logic or actions here, such as sending the rating to the server\n    };\n    const starClass = index => {\n      if (highlight.value >= index + 1) {\n        return [\"fas\", \"star\"];\n      } else {\n        return [\"far\", \"star\"];\n      }\n    };\n    return {\n      stars,\n      r,\n      starClass\n    };\n  }\n};","map":{"version":3,"names":["ref","name","props","emit","methods","reset","selectedRating","setup","stars","highlight","r","rating","value","starClass","index"],"sources":["/Users/nicolechan/Desktop/FYP_Test/itinerary/src/components/PopupRate.vue"],"sourcesContent":["<template>\n  <div class=\"popup\">\n    <div class=\"popup-inner\">\n      <h1>Popup Rate form</h1>\n      <button class=\"btn close\" @click.prevent=\"togglePopup()\">\n        <span style=\"font-size: 1.5rem\"\n          ><font-awesome-icon icon=\"fa-solid fa-circle-xmark\" /></span\n        >Close\n      </button>\n      \n      <div>\n      <span\n        v-for=\"(star, index) in 5\"\n        :key=\"index\"\n        @click=\"r(index + 1)\"\n        @mouseover=\"highlight(index + 1)\"\n        style=\"font-size: 1.5em; margin: 8px;\"\n      >\n        <font-awesome-icon :icon=\"starClass(index)\"></font-awesome-icon>\n      </span>\n    </div>\n    <p>Selected Rating: {{ selectedRating }}</p>\n\n      <form action=\"\">\n        <label for=\"\">Rating</label>\n        <input type=\"number\" min=\"1\" max=\"5\" class=\"form-control\" placeholder=\"rate..\" :value=\"selectedRating\" @input=\"$emit('update:selectedRating', $event.target.value)\"/>\n        <p>{{ rate }}</p>\n        <label for=\"\">Comments</label>\n        <textarea type=\"text\" class=\"form-control\" placeholder=\"say sth..\" :value=\"comment\" @input=\"$emit('update:comment', $event.target.value)\"></textarea>\n        <p>{{ comment }}</p>\n\n        <div class=\"row mt-2\">\n          <button class=\"btn btn-primary\" @click=\"$emit('rate')\">Rate</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { ref } from 'vue';\n\nexport default {\n  name: \"PopupRate\",\n  props: [\"togglePopup\", \"selectedRating\", \"comment\"],\n  emit:['update:selectedRating', 'update:comment'],\n//   data() {\n//     return {\n//       stars: 5,\n//       selectedRating: 0\n//     };\n//   },\n  methods: {\n    // highlight(rating) {\n    //   this.selectedRating = rating;\n    // },\n    reset() {\n      this.selectedRating = 0;\n    },\n    // r(rating) {\n    //   this.selectedRating = rating;\n    //   // Perform any additional logic or actions here, such as sending the rating to the server\n    // },\n    // starClass(index) {\n    //   if (this.selectedRating >= index + 1) {\n    //     return ['fas', 'star'];\n    //   } else {\n    //     return ['far', 'star'];\n    //   }\n    // }\n},\nsetup(props){\n    const stars = 5;\n    const highlight = ref(props.selectedRating);\n\n    const r = (rating) => {\n      highlight.value = rating;\n      // Perform any additional logic or actions here, such as sending the rating to the server\n    };\n\n    const starClass = (index) => {\n      if (highlight.value >= index + 1) {\n        return [\"fas\", \"star\"];\n      } else {\n        return [\"far\", \"star\"];\n      }\n    };\n\n    return{\n        stars,\n        r,\n        starClass\n    }\n    \n}\n};\n</script>\n\n<style scoped>\n.popup {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 99;\n  background-color: rgba(0, 0, 0, 0.2);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 10px;\n}\n.popup-inner {\n  background-color: #fff;\n  padding: 30px;\n  border-radius: 10px;\n}\n</style>\n"],"mappings":"AAwCA,OAAO,2CAA2C;AAClD,SAASA,GAAE,QAAS,KAAK;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,CAAC,aAAa,EAAE,gBAAgB,EAAE,SAAS,CAAC;EACnDC,IAAI,EAAC,CAAC,uBAAuB,EAAE,gBAAgB,CAAC;EAClD;EACA;EACA;EACA;EACA;EACA;EACEC,OAAO,EAAE;IACP;IACA;IACA;IACAC,KAAKA,CAAA,EAAG;MACN,IAAI,CAACC,cAAa,GAAI,CAAC;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;EACDC,KAAKA,CAACL,KAAK,EAAC;IACR,MAAMM,KAAI,GAAI,CAAC;IACf,MAAMC,SAAQ,GAAIT,GAAG,CAACE,KAAK,CAACI,cAAc,CAAC;IAE3C,MAAMI,CAAA,GAAKC,MAAM,IAAK;MACpBF,SAAS,CAACG,KAAI,GAAID,MAAM;MACxB;IACF,CAAC;IAED,MAAME,SAAQ,GAAKC,KAAK,IAAK;MAC3B,IAAIL,SAAS,CAACG,KAAI,IAAKE,KAAI,GAAI,CAAC,EAAE;QAChC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;MACxB,OAAO;QACL,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;MACxB;IACF,CAAC;IAED,OAAM;MACFN,KAAK;MACLE,CAAC;MACDG;IACJ;EAEJ;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}