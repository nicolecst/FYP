{"ast":null,"code":"import NavBar from \"@/components/NavBar.vue\";\nimport PlanCard from \"@/components/PlanCard.vue\";\nimport SubplanCard from \"@/components/SubplanCard.vue\";\nimport axios from \"axios\";\nimport { useRoute } from \"vue-router\";\nexport default {\n  name: \"itinhistDetails\",\n  components: {\n    NavBar,\n    PlanCard,\n    SubplanCard\n  },\n  data() {\n    return {\n      history: [],\n      dateDiff: 0,\n      alphabets: [['a', 'b', 'c']]\n    };\n  },\n  methods: {\n    addDays(date, days) {\n      // Function to add Days\n      var result = new Date(date);\n      result.setDate(result.getDate() + days);\n      return result.toLocaleString();\n    },\n    weekdays(date, days) {\n      var result = new Date(date);\n      result.setDate(result.getDate() + days);\n      return result.toLocaleString(\"en-US\", {\n        weekday: \"long\"\n      });\n    }\n  },\n  //   computed: {\n  //     dateDiff() {\n  //       let day = new Date(this.history.to).getTime() - new Date(this.history.from).getTime();\n  //       let diff = Math.floor(day / 86400000) + 1;\n  //       return diff;\n  //     },\n  //   },\n  mounted() {\n    const fetchData = async () => {\n      const route = useRoute();\n      const response = await axios.get(\"/api/history/\" + route.params.id).then(response => this.history = response.data);\n\n      // Calculate dateDiff based on the first and last items from the history array\n      const start = new Date(this.history.from).getTime();\n      const end = new Date(this.history.to).getTime();\n      const diff = end - start;\n      const dateDiff = Math.floor(diff / 86400000) + 1;\n      this.dateDiff = dateDiff;\n      console.log(response);\n      console.log('length: ' + this.history.dailyItin.length);\n    };\n    fetchData();\n\n    //   const fromDate = new Date(this.history.from);\n    //   const toDate = new Date(this.history.to);\n    //   const dayDiff = Math.floor((toDate - fromDate) / (1000 * 60 * 60 * 24)) + 1;\n    //   this.dateDiff = dayDiff;\n  }\n};","map":{"version":3,"names":["NavBar","PlanCard","SubplanCard","axios","useRoute","name","components","data","history","dateDiff","alphabets","methods","addDays","date","days","result","Date","setDate","getDate","toLocaleString","weekdays","weekday","mounted","fetchData","route","response","get","params","id","then","start","from","getTime","end","to","diff","Math","floor","console","log","dailyItin","length"],"sources":["/Users/nicolechan/Desktop/FYP_Test/itinerary/src/pages/ItinhistDetails.vue"],"sourcesContent":["<template>\n  <div>\n    <NavBar />\n    <h1>Itinerary History Details</h1>\n    <div class=\"scrolls\">\n      <PlanCard\n        v-for=\"(n, i) in dateDiff\"\n        :key=\"n\"\n        :n=\"n\"\n        :start=\"addDays(this.history.from, i)\"\n        :daysOfWeek=\"weekdays(this.history.from, i)\"\n      >\n        <SubplanCard v-for=\"(n,i) in this.history.dailyItin\" :key=\"i\">{{ n }}</SubplanCard>\n      </PlanCard>\n    </div>\n\n    <div v-for=\"n in 5\" :key=\"n\">\n        <div v-if=\"n===2\">\n            {{ n }}\n        </div>\n    </div>\n    <!-- <div v-for=\"(n,i) in this.history.dailyItin[0]\" :key=\"i\">\n        {{ n }}\n    </div> -->\n\n    <p v-for=\"(itin, i) in this.history.dailyItin\" :key=\"i\">\n    {{ itin }}\n    </p>\n    <p>{{ history }}</p>\n    <p>{{ dateDiff }}</p>\n    <p>{{ this.alphabets[0] }}</p>\n    <p></p>\n  </div>\n</template>\n<script>\nimport NavBar from \"@/components/NavBar.vue\";\nimport PlanCard from \"@/components/PlanCard.vue\";\nimport SubplanCard from \"@/components/SubplanCard.vue\";\nimport axios from \"axios\";\nimport { useRoute } from \"vue-router\";\n\nexport default {\n  name: \"itinhistDetails\",\n  components: {\n    NavBar,\n    PlanCard,\n    SubplanCard,\n  },\n  data() {\n    return {\n      history: [],\n      dateDiff: 0,\n      alphabets: [\n        ['a','b','c'],\n\n      ]\n    };\n  },\n  methods: {\n    addDays(date, days) {\n      // Function to add Days\n      var result = new Date(date);\n      result.setDate(result.getDate() + days);\n      return result.toLocaleString();\n    },\n    weekdays(date, days) {\n      var result = new Date(date);\n      result.setDate(result.getDate() + days);\n      return result.toLocaleString(\"en-US\", { weekday: \"long\" });\n    },\n  },\n  //   computed: {\n  //     dateDiff() {\n  //       let day = new Date(this.history.to).getTime() - new Date(this.history.from).getTime();\n  //       let diff = Math.floor(day / 86400000) + 1;\n  //       return diff;\n  //     },\n  //   },\n  mounted() {\n    const fetchData = async () => {\n      const route = useRoute();\n      const response = await axios\n        .get(\"/api/history/\" + route.params.id)\n        .then((response) => (this.history = response.data));\n\n      // Calculate dateDiff based on the first and last items from the history array\n      const start = new Date(this.history.from).getTime();\n      const end = new Date(this.history.to).getTime();\n      const diff = end - start;\n      const dateDiff = Math.floor(diff / 86400000) + 1;\n      this.dateDiff = dateDiff;\n      console.log(response);\n      console.log('length: '+this.history.dailyItin.length)\n    };\n    fetchData();\n\n    //   const fromDate = new Date(this.history.from);\n    //   const toDate = new Date(this.history.to);\n    //   const dayDiff = Math.floor((toDate - fromDate) / (1000 * 60 * 60 * 24)) + 1;\n    //   this.dateDiff = dayDiff;\n  },\n};\n</script>\n<style scoped>\n.scrolls {\n  display: flex;\n  flex-wrap: no-wrap;\n  overflow-x: auto;\n  margin: 20px;\n}\n</style>\n"],"mappings":"AAmCA,OAAOA,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,QAAO,MAAO,2BAA2B;AAChD,OAAOC,WAAU,MAAO,8BAA8B;AACtD,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,QAAO,QAAS,YAAY;AAErC,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE;IACVN,MAAM;IACNC,QAAQ;IACRC;EACF,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,CACT,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;IAGjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,OAAOA,CAACC,IAAI,EAAEC,IAAI,EAAE;MAClB;MACA,IAAIC,MAAK,GAAI,IAAIC,IAAI,CAACH,IAAI,CAAC;MAC3BE,MAAM,CAACE,OAAO,CAACF,MAAM,CAACG,OAAO,CAAC,IAAIJ,IAAI,CAAC;MACvC,OAAOC,MAAM,CAACI,cAAc,CAAC,CAAC;IAChC,CAAC;IACDC,QAAQA,CAACP,IAAI,EAAEC,IAAI,EAAE;MACnB,IAAIC,MAAK,GAAI,IAAIC,IAAI,CAACH,IAAI,CAAC;MAC3BE,MAAM,CAACE,OAAO,CAACF,MAAM,CAACG,OAAO,CAAC,IAAIJ,IAAI,CAAC;MACvC,OAAOC,MAAM,CAACI,cAAc,CAAC,OAAO,EAAE;QAAEE,OAAO,EAAE;MAAO,CAAC,CAAC;IAC5D;EACF,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,OAAOA,CAAA,EAAG;IACR,MAAMC,SAAQ,GAAI,MAAAA,CAAA,KAAY;MAC5B,MAAMC,KAAI,GAAIpB,QAAQ,CAAC,CAAC;MACxB,MAAMqB,QAAO,GAAI,MAAMtB,KAAI,CACxBuB,GAAG,CAAC,eAAc,GAAIF,KAAK,CAACG,MAAM,CAACC,EAAE,EACrCC,IAAI,CAAEJ,QAAQ,IAAM,IAAI,CAACjB,OAAM,GAAIiB,QAAQ,CAAClB,IAAK,CAAC;;MAErD;MACA,MAAMuB,KAAI,GAAI,IAAId,IAAI,CAAC,IAAI,CAACR,OAAO,CAACuB,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC;MACnD,MAAMC,GAAE,GAAI,IAAIjB,IAAI,CAAC,IAAI,CAACR,OAAO,CAAC0B,EAAE,CAAC,CAACF,OAAO,CAAC,CAAC;MAC/C,MAAMG,IAAG,GAAIF,GAAE,GAAIH,KAAK;MACxB,MAAMrB,QAAO,GAAI2B,IAAI,CAACC,KAAK,CAACF,IAAG,GAAI,QAAQ,IAAI,CAAC;MAChD,IAAI,CAAC1B,QAAO,GAAIA,QAAQ;MACxB6B,OAAO,CAACC,GAAG,CAACd,QAAQ,CAAC;MACrBa,OAAO,CAACC,GAAG,CAAC,UAAU,GAAC,IAAI,CAAC/B,OAAO,CAACgC,SAAS,CAACC,MAAM;IACtD,CAAC;IACDlB,SAAS,CAAC,CAAC;;IAEX;IACA;IACA;IACA;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}