{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CancellationToken = exports.TypedEventEmitter = void 0;\nconst events_1 = require(\"events\");\nconst mongo_logger_1 = require(\"./mongo_logger\");\n/**\n * Typescript type safe event emitter\n * @public\n */\nclass TypedEventEmitter extends events_1.EventEmitter {\n  /** @internal */\n  emitAndLog(event, ...args) {\n    this.emit(event, ...args);\n    if (this.component) this.mongoLogger?.debug(this.component, args[0]);\n  }\n  /** @internal */\n  emitAndLogHeartbeat(event, topologyId, serverConnectionId, ...args) {\n    this.emit(event, ...args);\n    if (this.component) {\n      const loggableHeartbeatEvent = {\n        topologyId: topologyId,\n        serverConnectionId: serverConnectionId ?? null,\n        ...args[0]\n      };\n      this.mongoLogger?.debug(this.component, loggableHeartbeatEvent);\n    }\n  }\n  /** @internal */\n  emitAndLogCommand(monitorCommands, event, databaseName, connectionEstablished, ...args) {\n    if (monitorCommands) {\n      this.emit(event, ...args);\n    }\n    if (connectionEstablished) {\n      const loggableCommandEvent = {\n        databaseName: databaseName,\n        ...args[0]\n      };\n      this.mongoLogger?.debug(mongo_logger_1.MongoLoggableComponent.COMMAND, loggableCommandEvent);\n    }\n  }\n}\nexports.TypedEventEmitter = TypedEventEmitter;\n/** @public */\nclass CancellationToken extends TypedEventEmitter {}\nexports.CancellationToken = CancellationToken;","map":{"version":3,"names":["events_1","require","mongo_logger_1","TypedEventEmitter","EventEmitter","emitAndLog","event","args","emit","component","mongoLogger","debug","emitAndLogHeartbeat","topologyId","serverConnectionId","loggableHeartbeatEvent","emitAndLogCommand","monitorCommands","databaseName","connectionEstablished","loggableCommandEvent","MongoLoggableComponent","COMMAND","exports","CancellationToken"],"sources":["../src/mongo_types.ts"],"sourcesContent":[null],"mappings":";;;;;;AACA,MAAAA,QAAA,GAAAC,OAAA;AAcA,MAAAC,cAAA,GAAAD,OAAA;AA0YA;;;;AAKA,MAAaE,iBAAoD,SAAQH,QAAA,CAAAI,YAAY;EAKnF;EACAC,UAAUA,CACRC,KAAwB,EACxB,GAAGC,IAAkC;IAErC,IAAI,CAACC,IAAI,CAACF,KAAK,EAAE,GAAGC,IAAI,CAAC;IACzB,IAAI,IAAI,CAACE,SAAS,EAAE,IAAI,CAACC,WAAW,EAAEC,KAAK,CAAC,IAAI,CAACF,SAAS,EAAEF,IAAI,CAAC,CAAC,CAAC,CAAC;EACtE;EACA;EACAK,mBAAmBA,CACjBN,KAAwB,EACxBO,UAAkB,EAClBC,kBAAyC,EACzC,GAAGP,IAAkC;IAErC,IAAI,CAACC,IAAI,CAACF,KAAK,EAAE,GAAGC,IAAI,CAAC;IACzB,IAAI,IAAI,CAACE,SAAS,EAAE;MAClB,MAAMM,sBAAsB,GAGc;QACxCF,UAAU,EAAEA,UAAU;QACtBC,kBAAkB,EAAEA,kBAAkB,IAAI,IAAI;QAC9C,GAAGP,IAAI,CAAC,CAAC;OACV;MACD,IAAI,CAACG,WAAW,EAAEC,KAAK,CAAC,IAAI,CAACF,SAAS,EAAEM,sBAAsB,CAAC;;EAEnE;EACA;EACAC,iBAAiBA,CACfC,eAAwB,EACxBX,KAAwB,EACxBY,YAAoB,EACpBC,qBAA8B,EAC9B,GAAGZ,IAAkC;IAErC,IAAIU,eAAe,EAAE;MACnB,IAAI,CAACT,IAAI,CAACF,KAAK,EAAE,GAAGC,IAAI,CAAC;;IAE3B,IAAIY,qBAAqB,EAAE;MACzB,MAAMC,oBAAoB,GAGU;QAClCF,YAAY,EAAEA,YAAY;QAC1B,GAAGX,IAAI,CAAC,CAAC;OACV;MACD,IAAI,CAACG,WAAW,EAAEC,KAAK,CAACT,cAAA,CAAAmB,sBAAsB,CAACC,OAAO,EAAEF,oBAAoB,CAAC;;EAEjF;;AAtDFG,OAAA,CAAApB,iBAAA,GAAAA,iBAAA;AAyDA;AACA,MAAaqB,iBAAkB,SAAQrB,iBAAqC;AAA5EoB,OAAA,CAAAC,iBAAA,GAAAA,iBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}