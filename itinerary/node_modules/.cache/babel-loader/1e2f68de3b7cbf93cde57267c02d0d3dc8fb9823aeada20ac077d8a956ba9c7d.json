{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AggregationCursor = void 0;\nconst aggregate_1 = require(\"../operations/aggregate\");\nconst execute_operation_1 = require(\"../operations/execute_operation\");\nconst utils_1 = require(\"../utils\");\nconst abstract_cursor_1 = require(\"./abstract_cursor\");\n/** @internal */\nconst kPipeline = Symbol('pipeline');\n/** @internal */\nconst kOptions = Symbol('options');\n/**\n * The **AggregationCursor** class is an internal class that embodies an aggregation cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query. It supports\n * one by one document iteration, conversion to an array or can be iterated as a Node 4.X\n * or higher stream\n * @public\n */\nclass AggregationCursor extends abstract_cursor_1.AbstractCursor {\n  /** @internal */\n  constructor(client, namespace, pipeline = [], options = {}) {\n    super(client, namespace, options);\n    this[kPipeline] = pipeline;\n    this[kOptions] = options;\n  }\n  get pipeline() {\n    return this[kPipeline];\n  }\n  clone() {\n    const clonedOptions = (0, utils_1.mergeOptions)({}, this[kOptions]);\n    delete clonedOptions.session;\n    return new AggregationCursor(this.client, this.namespace, this[kPipeline], {\n      ...clonedOptions\n    });\n  }\n  map(transform) {\n    return super.map(transform);\n  }\n  /** @internal */\n  async _initialize(session) {\n    const aggregateOperation = new aggregate_1.AggregateOperation(this.namespace, this[kPipeline], {\n      ...this[kOptions],\n      ...this.cursorOptions,\n      session\n    });\n    const response = await (0, execute_operation_1.executeOperation)(this.client, aggregateOperation);\n    // TODO: NODE-2882\n    return {\n      server: aggregateOperation.server,\n      session,\n      response\n    };\n  }\n  /** Execute the explain for the cursor */\n  async explain(verbosity) {\n    return (0, execute_operation_1.executeOperation)(this.client, new aggregate_1.AggregateOperation(this.namespace, this[kPipeline], {\n      ...this[kOptions],\n      ...this.cursorOptions,\n      explain: verbosity ?? true\n    }));\n  }\n  group($group) {\n    (0, abstract_cursor_1.assertUninitialized)(this);\n    this[kPipeline].push({\n      $group\n    });\n    return this;\n  }\n  /** Add a limit stage to the aggregation pipeline */\n  limit($limit) {\n    (0, abstract_cursor_1.assertUninitialized)(this);\n    this[kPipeline].push({\n      $limit\n    });\n    return this;\n  }\n  /** Add a match stage to the aggregation pipeline */\n  match($match) {\n    (0, abstract_cursor_1.assertUninitialized)(this);\n    this[kPipeline].push({\n      $match\n    });\n    return this;\n  }\n  /** Add an out stage to the aggregation pipeline */\n  out($out) {\n    (0, abstract_cursor_1.assertUninitialized)(this);\n    this[kPipeline].push({\n      $out\n    });\n    return this;\n  }\n  /**\n   * Add a project stage to the aggregation pipeline\n   *\n   * @remarks\n   * In order to strictly type this function you must provide an interface\n   * that represents the effect of your projection on the result documents.\n   *\n   * By default chaining a projection to your cursor changes the returned type to the generic {@link Document} type.\n   * You should specify a parameterized type to have assertions on your final results.\n   *\n   * @example\n   * ```typescript\n   * // Best way\n   * const docs: AggregationCursor<{ a: number }> = cursor.project<{ a: number }>({ _id: 0, a: true });\n   * // Flexible way\n   * const docs: AggregationCursor<Document> = cursor.project({ _id: 0, a: true });\n   * ```\n   *\n   * @remarks\n   * In order to strictly type this function you must provide an interface\n   * that represents the effect of your projection on the result documents.\n   *\n   * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor,\n   * it **does not** return a new instance of a cursor. This means when calling project,\n   * you should always assign the result to a new variable in order to get a correctly typed cursor variable.\n   * Take note of the following example:\n   *\n   * @example\n   * ```typescript\n   * const cursor: AggregationCursor<{ a: number; b: string }> = coll.aggregate([]);\n   * const projectCursor = cursor.project<{ a: number }>({ _id: 0, a: true });\n   * const aPropOnlyArray: {a: number}[] = await projectCursor.toArray();\n   *\n   * // or always use chaining and save the final cursor\n   *\n   * const cursor = coll.aggregate().project<{ a: string }>({\n   *   _id: 0,\n   *   a: { $convert: { input: '$a', to: 'string' }\n   * }});\n   * ```\n   */\n  project($project) {\n    (0, abstract_cursor_1.assertUninitialized)(this);\n    this[kPipeline].push({\n      $project\n    });\n    return this;\n  }\n  /** Add a lookup stage to the aggregation pipeline */\n  lookup($lookup) {\n    (0, abstract_cursor_1.assertUninitialized)(this);\n    this[kPipeline].push({\n      $lookup\n    });\n    return this;\n  }\n  /** Add a redact stage to the aggregation pipeline */\n  redact($redact) {\n    (0, abstract_cursor_1.assertUninitialized)(this);\n    this[kPipeline].push({\n      $redact\n    });\n    return this;\n  }\n  /** Add a skip stage to the aggregation pipeline */\n  skip($skip) {\n    (0, abstract_cursor_1.assertUninitialized)(this);\n    this[kPipeline].push({\n      $skip\n    });\n    return this;\n  }\n  /** Add a sort stage to the aggregation pipeline */\n  sort($sort) {\n    (0, abstract_cursor_1.assertUninitialized)(this);\n    this[kPipeline].push({\n      $sort\n    });\n    return this;\n  }\n  /** Add a unwind stage to the aggregation pipeline */\n  unwind($unwind) {\n    (0, abstract_cursor_1.assertUninitialized)(this);\n    this[kPipeline].push({\n      $unwind\n    });\n    return this;\n  }\n  /** Add a geoNear stage to the aggregation pipeline */\n  geoNear($geoNear) {\n    (0, abstract_cursor_1.assertUninitialized)(this);\n    this[kPipeline].push({\n      $geoNear\n    });\n    return this;\n  }\n}\nexports.AggregationCursor = AggregationCursor;","map":{"version":3,"names":["aggregate_1","require","execute_operation_1","utils_1","abstract_cursor_1","kPipeline","Symbol","kOptions","AggregationCursor","AbstractCursor","constructor","client","namespace","pipeline","options","clone","clonedOptions","mergeOptions","session","map","transform","_initialize","aggregateOperation","AggregateOperation","cursorOptions","response","executeOperation","server","explain","verbosity","group","$group","assertUninitialized","push","limit","$limit","match","$match","out","$out","project","$project","lookup","$lookup","redact","$redact","skip","$skip","sort","$sort","unwind","$unwind","geoNear","$geoNear","exports"],"sources":["../../src/cursor/aggregation_cursor.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}