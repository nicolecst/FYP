{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/Images/hong-kong-mountain-top-view.jpg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-7d04c6f4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"shape\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"shape\",\n  src: _imports_0,\n  alt: \"\"\n})], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_NavBar), _hoisted_1, _createCommentVNode(\" <div>\\n      <p>{{ activity.Act_ID }}</p>\\n      <p>{{ activity.Act_name }}</p>\\n      <p>{{ activity.Location }}</p>\\n      <p>{{ activity.Area }}</p>\\n      <p>{{ activity.District }}</p>\\n      <p>{{ activity.Type }}</p>\\n      <p>{{ activity.Category }}</p>\\n      <p>{{ activity.Charge }}</p>\\n      <p>{{ activity.Description }}</p>\\n      <a href=\\\"\\\">{{ activity.Info }}</a>\\n      <p>{{ activity.Approved }}</p>\\n\\n      <a :href=\\\"'/actEdit/' + activity._id\\\">\\n        <button v-if=\\\"user.is_Admin == true\\\" class=\\\"btn btn-primary\\\">\\n          Edit\\n        </button>\\n      </a>\\n    </div> \")]);\n}","map":{"version":3,"names":["_imports_0","_createElementVNode","class","src","alt","_createElementBlock","_createVNode","_component_NavBar","_hoisted_1","_createCommentVNode"],"sources":["/Users/nicolechan/Desktop/FYP_Test/itinerary/src/pages/ActDetails.vue"],"sourcesContent":["<template>\n  <div>\n    <NavBar />\n    <div class=\"shape\">\n      <img class=\"shape\" src=\"@/assets/Images/hong-kong-mountain-top-view.jpg\" alt=\"\">\n    </div>\n    <!-- <div>\n      <p>{{ activity.Act_ID }}</p>\n      <p>{{ activity.Act_name }}</p>\n      <p>{{ activity.Location }}</p>\n      <p>{{ activity.Area }}</p>\n      <p>{{ activity.District }}</p>\n      <p>{{ activity.Type }}</p>\n      <p>{{ activity.Category }}</p>\n      <p>{{ activity.Charge }}</p>\n      <p>{{ activity.Description }}</p>\n      <a href=\"\">{{ activity.Info }}</a>\n      <p>{{ activity.Approved }}</p>\n\n      <a :href=\"'/actEdit/' + activity._id\">\n        <button v-if=\"user.is_Admin == true\" class=\"btn btn-primary\">\n          Edit\n        </button>\n      </a>\n    </div> -->\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport NavBar from \"@/components/NavBar.vue\";\nimport { useRoute } from \"vue-router\";\n\nexport default {\n  name: \"ActDetails\",\n  components: {\n    NavBar,\n  },\n  data() {\n    return {\n      activity: {},\n      user: {},\n    };\n  },\n  mounted() {\n    const route = useRoute();\n    axios\n      .get(\"/api/activities/\" + route.params.id)\n      .then((response) => (this.activity = response.data));\n\n    const i = localStorage.getItem(\"userID\");\n    console.log(i);\n    axios\n      .get(\"/api/users/\" + i)\n      .then((response) => (this.user = response.data));\n  },\n};\n</script>\n\n<style scoped>\na {\n  color: #016a70;\n}\n\n.shape {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, 50%);\n  background-size: 200px 200px;\n  /* border-radius: 80% 20% 32% 68% / 58% 22% 78% 42%; */\n  height: 500px;\n  width: 1000px;\n  /* background-image: url(\"@/assets/Images/hong-kong-mountain-top-view.jpg\");\n  background-size: cover;\n  background-position: center center; */\n}\n</style>\n"],"mappings":";OAIyBA,UAAqD;;gEAD1EC,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAO,I,aAChBD,mBAAA,CAAgF;EAA3EC,KAAK,EAAC,OAAO;EAACC,GAAqD,EAArDH,UAAqD;EAACI,GAAG,EAAC;;;;uBAHjFC,mBAAA,CAwBM,cAvBJC,YAAA,CAAUC,iBAAA,GACVC,UAEM,EACNC,mBAAA,kmBAkBU,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}