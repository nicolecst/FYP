{"ast":null,"code":"import NavBar from \"@/components/NavBar.vue\";\nimport PlanCard from \"@/components/PlanCard.vue\";\nimport axios from \"axios\";\nimport { useRoute } from \"vue-router\";\nexport default {\n  name: \"itinhistDetails\",\n  components: {\n    NavBar,\n    PlanCard\n  },\n  data() {\n    return {\n      history: [],\n      dateDiff: 0\n    };\n  },\n  methods: {},\n  //   computed: {\n  //     dateDiff() {\n  //       let day = new Date(this.history.to).getTime() - new Date(this.history.from).getTime();\n  //       let diff = Math.floor(day / 86400000) + 1;\n  //       return diff;\n  //     },\n  //   },\n  mounted() {\n    const fetchData = async () => {\n      const route = useRoute();\n      const response = await axios.get(\"/api/history/\" + route.params.id).then(response => this.history = response.data);\n\n      // Calculate dateDiff based on the first and last items from the history array\n      const start = new Date(this.history.from).getTime();\n      const end = new Date(this.history.to).getTime();\n      const diff = end - start;\n      const dateDiff = Math.floor(diff / 86400000) + 1;\n      this.dateDiff = dateDiff;\n      console.log(response);\n    };\n    fetchData();\n\n    //   const fromDate = new Date(this.history.from);\n    //   const toDate = new Date(this.history.to);\n    //   const dayDiff = Math.floor((toDate - fromDate) / (1000 * 60 * 60 * 24)) + 1;\n    //   this.dateDiff = dayDiff;\n  }\n};","map":{"version":3,"names":["NavBar","PlanCard","axios","useRoute","name","components","data","history","dateDiff","methods","mounted","fetchData","route","response","get","params","id","then","start","Date","from","getTime","end","to","diff","Math","floor","console","log"],"sources":["/Users/nicolechan/Desktop/FYP_Test/itinerary/src/pages/ItinhistDetails.vue"],"sourcesContent":["<template>\n  <div>\n    <NavBar />\n    <h1>Itinerary History Details</h1>\n    <div class=\"scrolls\">\n        <PlanCard v-for=\"n in dateDiff\" :key=\"n\"/>\n    </div>\n    <p>{{ history }}</p>\n    <p>{{ dateDiff}}</p>\n    <p></p>\n  </div>\n</template>\n<script>\nimport NavBar from \"@/components/NavBar.vue\";\nimport PlanCard from \"@/components/PlanCard.vue\";\nimport axios from \"axios\";\nimport { useRoute } from \"vue-router\";\n\nexport default {\n  name: \"itinhistDetails\",\n  components: {\n    NavBar,\n    PlanCard,\n  },\n  data() {\n    return {\n      history: [],\n      dateDiff: 0\n    };\n  },\n  methods:{\n  },\n//   computed: {\n//     dateDiff() {\n//       let day = new Date(this.history.to).getTime() - new Date(this.history.from).getTime();\n//       let diff = Math.floor(day / 86400000) + 1;\n//       return diff;\n//     },\n//   },\n  mounted() {\n\n    const fetchData = async()=>{\n     const route = useRoute();\n    const response = await axios\n      .get(\"/api/history/\" + route.params.id)\n      .then((response) => (this.history = response.data));\n\n      // Calculate dateDiff based on the first and last items from the history array\n      const start = new Date(this.history.from).getTime();\n      const end = new Date(this.history.to).getTime();\n      const diff = end - start;\n      const dateDiff = Math.floor(diff / 86400000) + 1;\n      this.dateDiff = dateDiff\n      console.log(response);\n    }\n    fetchData();\n    \n\n    //   const fromDate = new Date(this.history.from);\n    //   const toDate = new Date(this.history.to);\n    //   const dayDiff = Math.floor((toDate - fromDate) / (1000 * 60 * 60 * 24)) + 1;\n    //   this.dateDiff = dayDiff;\n  },\n};\n</script>\n<style scoped>\n.scrolls {\n  display: flex;\n  flex-wrap: no-wrap;\n  overflow-x: auto;\n  margin: 20px;\n}\n</style>\n"],"mappings":"AAaA,OAAOA,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,QAAO,MAAO,2BAA2B;AAChD,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,QAAO,QAAS,YAAY;AAErC,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE;IACVL,MAAM;IACNC;EACF,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAC,CACR,CAAC;EACH;EACA;EACA;EACA;EACA;EACA;EACA;EACEC,OAAOA,CAAA,EAAG;IAER,MAAMC,SAAQ,GAAI,MAAAA,CAAA,KAAS;MAC1B,MAAMC,KAAI,GAAIT,QAAQ,CAAC,CAAC;MACzB,MAAMU,QAAO,GAAI,MAAMX,KAAI,CACxBY,GAAG,CAAC,eAAc,GAAIF,KAAK,CAACG,MAAM,CAACC,EAAE,EACrCC,IAAI,CAAEJ,QAAQ,IAAM,IAAI,CAACN,OAAM,GAAIM,QAAQ,CAACP,IAAK,CAAC;;MAEnD;MACA,MAAMY,KAAI,GAAI,IAAIC,IAAI,CAAC,IAAI,CAACZ,OAAO,CAACa,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC;MACnD,MAAMC,GAAE,GAAI,IAAIH,IAAI,CAAC,IAAI,CAACZ,OAAO,CAACgB,EAAE,CAAC,CAACF,OAAO,CAAC,CAAC;MAC/C,MAAMG,IAAG,GAAIF,GAAE,GAAIJ,KAAK;MACxB,MAAMV,QAAO,GAAIiB,IAAI,CAACC,KAAK,CAACF,IAAG,GAAI,QAAQ,IAAI,CAAC;MAChD,IAAI,CAAChB,QAAO,GAAIA,QAAO;MACvBmB,OAAO,CAACC,GAAG,CAACf,QAAQ,CAAC;IACvB;IACAF,SAAS,CAAC,CAAC;;IAGX;IACA;IACA;IACA;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}