{"ast":null,"code":"export default {\n  name: \"PopupRate\",\n  props: [\"togglePopup\", \"rate\", \"comment\"],\n  emit: ['update:rate', 'update:comment'],\n  components: {}\n};","map":{"version":3,"names":["name","props","emit","components"],"sources":["/Users/nicolechan/Desktop/FYP_Test/itinerary/src/components/PopupRate.vue"],"sourcesContent":["<template>\n  <div class=\"popup\">\n    <div class=\"popup-inner\">\n      <h1>Popup Rate form</h1>\n      <button class=\"btn close\" @click.prevent=\"togglePopup()\">\n        <span style=\"font-size: 1.5rem\"\n          ><font-awesome-icon icon=\"fa-solid fa-circle-xmark\" /></span\n        >Close\n      </button>\n\n\n      <form action=\"\">\n        <label for=\"\">Rating</label>\n        <input type=\"number\" min=\"1\" max=\"5\" class=\"form-control\" placeholder=\"rate..\" :value=\"rate\" @input=\"$emit('update:rate', $event.target.value)\"/>\n        <p>{{ rate }}</p>\n        <label for=\"\">Comments</label>\n        <textarea type=\"text\" class=\"form-control\" placeholder=\"say sth..\" :value=\"comment\" @input=\"$emit('update:comment', $event.target.value)\"></textarea>\n        <p>{{ comment }}</p>\n\n        <div class=\"row mt-2\">\n          <button class=\"btn btn-primary\" @click=\"$emit('rate')\">Rate</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"PopupRate\",\n  props: [\"togglePopup\", \"rate\", \"comment\"],\n  emit:['update:rate', 'update:comment'],\n  components:{\n  }\n};\n</script>\n\n<style scoped>\n.popup {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 99;\n  background-color: rgba(0, 0, 0, 0.2);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 10px;\n}\n.popup-inner {\n  background-color: #fff;\n  padding: 30px;\n  border-radius: 10px;\n}\n</style>\n"],"mappings":"AA6BA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,CAAC,aAAa,EAAE,MAAM,EAAE,SAAS,CAAC;EACzCC,IAAI,EAAC,CAAC,aAAa,EAAE,gBAAgB,CAAC;EACtCC,UAAU,EAAC,CACX;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}