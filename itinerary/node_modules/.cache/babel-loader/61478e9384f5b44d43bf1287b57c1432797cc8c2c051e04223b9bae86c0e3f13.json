{"ast":null,"code":"import NavBar from \"@/components/NavBar.vue\";\nimport PlanCard from \"@/components/PlanCard.vue\";\n// import 'vue-datepicker/index.css';\nexport default {\n  name: \"CreateItinerary\",\n  components: {\n    NavBar,\n    PlanCard\n  },\n  data() {\n    return {\n      step: 1,\n      totalSteps: 3,\n      participants: 1,\n      end: this.end,\n      start: this.start\n    };\n  },\n  methods: {\n    nextStep() {\n      this.step++;\n    },\n    previousStep() {\n      this.step--;\n    }\n  },\n  computed: {\n    dateDiff() {\n      let day = new Date(this.end).getTime() - new Date(this.start).getTime();\n      let diff = Math.floor(day / 86400000) + 1;\n      return diff;\n    }\n  }\n};","map":{"version":3,"names":["NavBar","PlanCard","name","components","data","step","totalSteps","participants","end","start","methods","nextStep","previousStep","computed","dateDiff","day","Date","getTime","diff","Math","floor"],"sources":["/Users/nicolechan/Desktop/FYP_Test/itinerary/src/pages/CreateItinerary.vue"],"sourcesContent":["<template>\n  <div>\n    <NavBar />\n    <h1>Create itinerary</h1>\n    <div class=\"container\">\n      <form action=\"\">\n        <section v-if=\"step == 1\">\n          <h1>Step 1</h1>\n          <div class=\"row mt-2\">\n            <label for=\"\">Itinerary Name</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"give a name for your plan..\"\n              v-model=\"iname\"\n            />\n          </div>\n          <div class=\"row mt-2\">\n            <div class=\"col md-6\">\n              <label for=\"\">Type</label>\n              <select name=\"\" id=\"\" class=\"form-control\" v-model=\"itype\">\n                <option>Choose the trip type..</option>\n                <option>Solo</option>\n                <option>Couple</option>\n                <option>Friends</option>\n                <option>Family</option>\n              </select>\n            </div>\n            <div class=\"col md-6\">\n              <label for=\"\">Number of participants</label>\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                v-model=\"participants\"\n                class=\"slider mt-2\"\n                placeholder=\"how many?\"\n              />\n              <div>Participants: {{ participants }}</div>\n            </div>\n          </div>\n          <div class=\"row mt-2\">\n            <div class=\"col md-6\">\n              <label for=\"\">From</label>\n              <input\n                data-format=\"dd/mm/yyyy\"\n                type=\"date\"\n                class=\"form-control\"\n                placeholder=\"start date\"\n                v-model=\"start\"\n              />\n            </div>\n            <div class=\"col md-6\">\n              <label for=\"\">To</label>\n              <input\n                data-format=\"dd/mm/yyyy\"\n                type=\"date\"\n                class=\"form-control\"\n                placeholder=\"end date\"\n                v-model=\"end\"\n              />\n            </div>\n          </div>\n        </section>\n\n        <section v-if=\"step == 2\">\n          <div class=\"addButton\">\n            <div>\n              <h1>Step 2</h1>\n            </div>\n            <div>\n              <button class=\"btn create-btn\" @click=\"create()\">\n                <span style=\"font-size: 1.5em\">\n                  <font-awesome-icon icon=\"fa-solid fa-calendar-plus\" /> </span\n                >Add activities\n              </button>\n            </div>\n          </div>\n\n          <p>{{ dateDiff }}</p>\n\n          <div class=\"scrolls\">\n            <PlanCard v-for=\"n in dateDiff\" :key=\"n\" :n=\"n\" />\n          </div>\n        </section>\n\n        <section v-if=\"step == 3\">\n          <h1>Step 3</h1>\n          <label for=\"\">Confirm</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"confirm..\" />\n        </section>\n        <div class=\"row mt-2\">\n          <div class=\"buttons\">\n            <div>\n              <button\n                v-if=\"step != 1\"\n                @click.prevent=\"previousStep()\"\n                class=\"btn btn-primary\"\n              >\n                Back\n              </button>\n            </div>\n            <div>\n              <button\n                v-if=\"step != totalSteps\"\n                @click.prevent=\"nextStep()\"\n                class=\"btn btn-primary\"\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport NavBar from \"@/components/NavBar.vue\";\nimport PlanCard from \"@/components/PlanCard.vue\";\n// import 'vue-datepicker/index.css';\nexport default {\n  name: \"CreateItinerary\",\n  components: {\n    NavBar,\n    PlanCard,\n  },\n  data() {\n    return {\n      step: 1,\n      totalSteps: 3,\n      participants: 1,\n      end: this.end,\n      start: this.start,\n    };\n  },\n  methods: {\n    nextStep() {\n      this.step++;\n    },\n    previousStep() {\n      this.step--;\n    },\n  },\n  computed: {\n    dateDiff() {\n      let day = new Date(this.end).getTime() - new Date(this.start).getTime();\n      let diff = Math.floor(day / 86400000) + 1;\n      return diff;\n    },\n  },\n};\n</script>\n<style scoped>\n.container {\n  width: 80%;\n}\n.buttons {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.slider {\n  display: block;\n  width: 100%;\n  color: #016a70;\n}\n\n.scrolls {\n  display: flex;\n  flex-wrap: no-wrap;\n  overflow-x: auto;\n  margin: 20px;\n}\n\n.addButton {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px;\n}\n.create-btn{\n  border-color: #016a70;\n  color: #016a70;\n}\n.create-btn:hover{\n  border-color: #016a70;\n  background-color: #016a70;\n  color: #ffffdd;\n}\n</style>\n"],"mappings":"AAwHA,OAAOA,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,QAAO,MAAO,2BAA2B;AAChD;AACA,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE;IACVH,MAAM;IACNC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC;MACPC,UAAU,EAAE,CAAC;MACbC,YAAY,EAAE,CAAC;MACfC,GAAG,EAAE,IAAI,CAACA,GAAG;MACbC,KAAK,EAAE,IAAI,CAACA;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT,IAAI,CAACN,IAAI,EAAE;IACb,CAAC;IACDO,YAAYA,CAAA,EAAG;MACb,IAAI,CAACP,IAAI,EAAE;IACb;EACF,CAAC;EACDQ,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,IAAIC,GAAE,GAAI,IAAIC,IAAI,CAAC,IAAI,CAACR,GAAG,CAAC,CAACS,OAAO,CAAC,IAAI,IAAID,IAAI,CAAC,IAAI,CAACP,KAAK,CAAC,CAACQ,OAAO,CAAC,CAAC;MACvE,IAAIC,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACL,GAAE,GAAI,QAAQ,IAAI,CAAC;MACzC,OAAOG,IAAI;IACb;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}